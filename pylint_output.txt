************* Module spydrnet
spydrnet/__init__.py:37:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/__init__.py:30:0: C0413: Import "from spydrnet.util.selection import INSIDE, OUTSIDE, BOTH, ALL" should be placed at the top of the module (wrong-import-position)
spydrnet/__init__.py:32:0: C0413: Import "from spydrnet.testing.test import run as test" should be placed at the top of the module (wrong-import-position)
spydrnet/__init__.py:33:0: C0413: Import "from spydrnet.parsers import parse" should be placed at the top of the module (wrong-import-position)
spydrnet/__init__.py:34:0: C0413: Import "from spydrnet.composers import compose" should be placed at the top of the module (wrong-import-position)
spydrnet/__init__.py:36:0: C0413: Import "from spydrnet.plugins import namespace_manager" should be placed at the top of the module (wrong-import-position)
spydrnet/__init__.py:37:0: C0413: Import "from spydrnet.util import get_netlists, get_libraries, get_definitions, get_ports, get_cables, get_instances, get_wires, get_pins" should be placed at the top of the module (wrong-import-position)
spydrnet/__init__.py:39:0: C0413: Import "from spydrnet.util import get_hinstances, get_hports, get_hpins, get_hcables, get_hwires" should be placed at the top of the module (wrong-import-position)
spydrnet/__init__.py:41:0: C0413: Import "import os" should be placed at the top of the module (wrong-import-position)
spydrnet/__init__.py:44:0: C0413: Import "import glob" should be placed at the top of the module (wrong-import-position)
spydrnet/__init__.py:52:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/__init__.py:41:0: C0411: standard import "import os" should be placed before "from spydrnet import release" (wrong-import-order)
spydrnet/__init__.py:44:0: C0411: standard import "import glob" should be placed before "from spydrnet import release" (wrong-import-order)
************* Module spydrnet.uniquify
spydrnet/uniquify.py:8:0: C0301: Line too long (142/100) (line-too-long)
spydrnet/uniquify.py:46:0: C0301: Line too long (185/100) (line-too-long)
spydrnet/uniquify.py:47:0: C0301: Line too long (186/100) (line-too-long)
spydrnet/uniquify.py:48:0: C0301: Line too long (201/100) (line-too-long)
spydrnet/uniquify.py:50:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/uniquify.py:60:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/uniquify.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/uniquify.py:3:0: W0401: Wildcard import spydrnet.ir (wildcard-import)
spydrnet/uniquify.py:6:0: W0105: String statement has no effect (pointless-string-statement)
spydrnet/uniquify.py:12:0: C0103: Constant name "mod_name_uid" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/uniquify.py:16:4: W0603: Using the global statement (global-statement)
spydrnet/uniquify.py:16:4: C0103: Constant name "mod_name_uid" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/uniquify.py:28:7: C0121: Comparison 'instance.reference.name != None' should be 'instance.reference.name is not None' (singleton-comparison)
spydrnet/uniquify.py:3:0: W0614: Unused import Element from wildcard import (unused-wildcard-import)
spydrnet/uniquify.py:3:0: W0614: Unused import FirstClassElement from wildcard import (unused-wildcard-import)
spydrnet/uniquify.py:3:0: W0614: Unused import Netlist from wildcard import (unused-wildcard-import)
spydrnet/uniquify.py:3:0: W0614: Unused import Library from wildcard import (unused-wildcard-import)
spydrnet/uniquify.py:3:0: W0614: Unused import Definition from wildcard import (unused-wildcard-import)
spydrnet/uniquify.py:3:0: W0614: Unused import Port from wildcard import (unused-wildcard-import)
spydrnet/uniquify.py:3:0: W0614: Unused import Cable from wildcard import (unused-wildcard-import)
spydrnet/uniquify.py:3:0: W0614: Unused import Wire from wildcard import (unused-wildcard-import)
spydrnet/uniquify.py:3:0: W0614: Unused import Instance from wildcard import (unused-wildcard-import)
spydrnet/uniquify.py:3:0: W0614: Unused import InnerPin from wildcard import (unused-wildcard-import)
spydrnet/uniquify.py:3:0: W0614: Unused import OuterPin from wildcard import (unused-wildcard-import)
spydrnet/uniquify.py:3:0: W0614: Unused import Bundle from wildcard import (unused-wildcard-import)
spydrnet/uniquify.py:3:0: W0614: Unused import Pin from wildcard import (unused-wildcard-import)
spydrnet/uniquify.py:4:0: C0411: standard import "from collections import deque" should be placed before "from spydrnet.ir import *" (wrong-import-order)
************* Module spydrnet.release
spydrnet/release.py:28:54: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/release.py:64:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/release.py:81:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/release.py:84:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/release.py:85:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/release.py:98:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/release.py:100:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/release.py:110:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/release.py:112:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/release.py:114:0: C0304: Final newline missing (missing-final-newline)
spydrnet/release.py:14:0: W0622: Redefining built-in 'license' (redefined-builtin)
spydrnet/release.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/release.py:4:0: C0103: Constant name "name" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/release.py:5:0: C0103: Constant name "version" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/release.py:6:0: C0103: Constant name "release" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/release.py:7:0: C0103: Constant name "date" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/release.py:11:0: C0103: Constant name "dev" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/release.py:13:0: C0103: Constant name "description" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/release.py:14:0: C0103: Constant name "license" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/release.py:18:0: C0103: Constant name "maintainer" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/release.py:19:0: C0103: Constant name "maintainer_email" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/release.py:20:0: C0103: Constant name "url" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/release.py:54:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/release.py:55:4: W0603: Using the global statement (global-statement)
spydrnet/release.py:55:4: C0103: Constant name "release" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/release.py:56:4: W0603: Using the global statement (global-statement)
spydrnet/release.py:56:4: C0103: Constant name "version" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/release.py:57:4: W0603: Using the global statement (global-statement)
spydrnet/release.py:57:4: C0103: Constant name "date" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/release.py:59:39: C0103: Variable name "fi" doesn't conform to snake_case naming style (invalid-name)
spydrnet/release.py:68:15: W0612: Unused variable 'char' (unused-variable)
spydrnet/release.py:77:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/release.py:78:4: C0415: Import outside toplevel (datetime) (import-outside-toplevel)
spydrnet/release.py:79:4: C0415: Import outside toplevel (time) (import-outside-toplevel)
spydrnet/release.py:80:4: C0415: Import outside toplevel (subprocess) (import-outside-toplevel)
spydrnet/release.py:82:4: W0603: Using the global statement (global-statement)
spydrnet/release.py:82:4: C0103: Constant name "version" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/release.py:83:4: W0603: Using the global statement (global-statement)
spydrnet/release.py:83:4: C0103: Constant name "date" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/release.py:100:25: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
spydrnet/release.py:106:44: C0103: Variable name "fh" doesn't conform to snake_case naming style (invalid-name)
************* Module spydrnet.flatten
spydrnet/flatten.py:88:1: W0511: #TODO put this code somewhere where people can use it to visualize simple netlists (fixme)
spydrnet/flatten.py:77:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
spydrnet/flatten.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/flatten.py:3:0: W0401: Wildcard import spydrnet.ir (wildcard-import)
spydrnet/flatten.py:7:0: W0105: String statement has no effect (pointless-string-statement)
spydrnet/flatten.py:12:0: C0103: Constant name "unique_number" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/flatten.py:14:0: C0103: Constant name "mod_name_uid" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/flatten.py:18:4: W0603: Using the global statement (global-statement)
spydrnet/flatten.py:18:4: C0103: Constant name "mod_name_uid" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/flatten.py:24:0: C0103: Argument name "e" doesn't conform to snake_case naming style (invalid-name)
spydrnet/flatten.py:25:4: W0603: Using the global statement (global-statement)
spydrnet/flatten.py:25:4: C0103: Constant name "unique_number" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/flatten.py:44:16: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/flatten.py:49:16: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/flatten.py:54:0: C0103: Argument name "e" doesn't conform to snake_case naming style (invalid-name)
spydrnet/flatten.py:57:8: W0603: Using the global statement (global-statement)
spydrnet/flatten.py:57:8: C0103: Constant name "mod_name_uid" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/flatten.py:71:8: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
spydrnet/flatten.py:74:8: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
spydrnet/flatten.py:3:0: W0614: Unused import Element from wildcard import (unused-wildcard-import)
spydrnet/flatten.py:3:0: W0614: Unused import FirstClassElement from wildcard import (unused-wildcard-import)
spydrnet/flatten.py:3:0: W0614: Unused import Netlist from wildcard import (unused-wildcard-import)
spydrnet/flatten.py:3:0: W0614: Unused import Library from wildcard import (unused-wildcard-import)
spydrnet/flatten.py:3:0: W0614: Unused import Definition from wildcard import (unused-wildcard-import)
spydrnet/flatten.py:3:0: W0614: Unused import Port from wildcard import (unused-wildcard-import)
spydrnet/flatten.py:3:0: W0614: Unused import Wire from wildcard import (unused-wildcard-import)
spydrnet/flatten.py:3:0: W0614: Unused import Instance from wildcard import (unused-wildcard-import)
spydrnet/flatten.py:3:0: W0614: Unused import InnerPin from wildcard import (unused-wildcard-import)
spydrnet/flatten.py:3:0: W0614: Unused import OuterPin from wildcard import (unused-wildcard-import)
spydrnet/flatten.py:3:0: W0614: Unused import Bundle from wildcard import (unused-wildcard-import)
spydrnet/flatten.py:3:0: W0614: Unused import Pin from wildcard import (unused-wildcard-import)
spydrnet/flatten.py:5:0: W0611: Unused uniquify imported from spydrnet.uniquify (unused-import)
spydrnet/flatten.py:4:0: C0411: standard import "from collections import deque" should be placed before "from spydrnet.ir import *" (wrong-import-order)
************* Module spydrnet.clone
spydrnet/clone.py:19:0: C0301: Line too long (122/100) (line-too-long)
spydrnet/clone.py:22:0: C0301: Line too long (137/100) (line-too-long)
spydrnet/clone.py:23:0: C0301: Line too long (103/100) (line-too-long)
spydrnet/clone.py:24:0: C0301: Line too long (134/100) (line-too-long)
spydrnet/clone.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/clone.py:4:0: W0105: String statement has no effect (pointless-string-statement)
spydrnet/clone.py:1:0: W0611: Unused ir imported from spydrnet (unused-import)
spydrnet/clone.py:2:0: W0611: Unused deepcopy imported from copy (unused-import)
spydrnet/clone.py:2:0: W0611: Unused copy imported from copy (unused-import)
spydrnet/clone.py:2:0: W0611: Unused error imported from copy (unused-import)
spydrnet/clone.py:2:0: C0411: standard import "from copy import deepcopy, copy, error" should be placed before "from spydrnet import ir" (wrong-import-order)
************* Module spydrnet.composers
spydrnet/composers/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/composers/__init__.py:9:8: C0415: Import outside toplevel (spydrnet.composers.edif.composer.ComposeEdif) (import-outside-toplevel)
spydrnet/composers/__init__.py:15:8: C0415: Import outside toplevel (spydrnet.composers.verilog.composer.Composer) (import-outside-toplevel)
************* Module spydrnet.composers.edif.composer
spydrnet/composers/edif/composer.py:339:13: W0511: TODO Clean up code in this if statement (fixme)
spydrnet/composers/edif/composer.py:383:9: W0511: TODO this should be checked against some sort of metadata (fixme)
spydrnet/composers/edif/composer.py:412:13: W0511: for port in cable.getConnectionList(): #TODO fuction cable.getConnectionList() needs to be created (fixme)
spydrnet/composers/edif/composer.py:521:9: W0511: TODO this only handles string properties for now (fixme)
spydrnet/composers/edif/composer.py:25:0: C0301: Line too long (103/100) (line-too-long)
spydrnet/composers/edif/composer.py:30:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
spydrnet/composers/edif/composer.py:34:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/composers/edif/composer.py:103:0: C0325: Unnecessary parens after 'while' keyword (superfluous-parens)
spydrnet/composers/edif/composer.py:264:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/composers/edif/composer.py:283:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/composers/edif/composer.py:412:0: C0301: Line too long (112/100) (line-too-long)
spydrnet/composers/edif/composer.py:502:0: C0325: Unnecessary parens after 'not' keyword (superfluous-parens)
spydrnet/composers/edif/composer.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/composers/edif/composer.py:2:0: W0401: Wildcard import spydrnet.ir (wildcard-import)
spydrnet/composers/edif/composer.py:18:4: C0103: Argument name "ir" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/composer.py:98:8: C0103: Argument name "o" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/composer.py:124:12: C0103: Variable name "o" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/composer.py:92:4: R0201: Method could be a function (no-self-use)
spydrnet/composers/edif/composer.py:130:4: R0201: Method could be a function (no-self-use)
spydrnet/composers/edif/composer.py:143:36: C0103: Variable name "fi" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/composer.py:147:24: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
spydrnet/composers/edif/composer.py:183:8: W0612: Unused variable 'test' (unused-variable)
spydrnet/composers/edif/composer.py:282:4: R0201: Method could be a function (no-self-use)
spydrnet/composers/edif/composer.py:365:8: R1705: Unnecessary "elif" after "return" (no-else-return)
spydrnet/composers/edif/composer.py:364:4: R0201: Method could be a function (no-self-use)
spydrnet/composers/edif/composer.py:445:12: C0103: Variable name "w" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/composer.py:442:4: R0201: Method could be a function (no-self-use)
spydrnet/composers/edif/composer.py:460:12: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
spydrnet/composers/edif/composer.py:460:16: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/composer.py:473:8: W0107: Unnecessary pass statement (unnecessary-pass)
spydrnet/composers/edif/composer.py:479:12: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
spydrnet/composers/edif/composer.py:479:16: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/composer.py:475:42: W0613: Unused argument 'cable_name' (unused-argument)
spydrnet/composers/edif/composer.py:500:4: C0103: Argument name "netlistObj" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/composer.py:502:8: R1705: Unnecessary "else" after "return" (no-else-return)
spydrnet/composers/edif/composer.py:505:12: C0103: Variable name "oldName" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/composer.py:500:4: R0201: Method could be a function (no-self-use)
spydrnet/composers/edif/composer.py:27:8: W0201: Attribute 'output_filename' defined outside __init__ (attribute-defined-outside-init)
spydrnet/composers/edif/composer.py:31:12: W0201: Attribute 'filename' defined outside __init__ (attribute-defined-outside-init)
spydrnet/composers/edif/composer.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
spydrnet/composers/edif/composer.py:2:0: W0614: Unused import Element from wildcard import (unused-wildcard-import)
spydrnet/composers/edif/composer.py:2:0: W0614: Unused import FirstClassElement from wildcard import (unused-wildcard-import)
spydrnet/composers/edif/composer.py:2:0: W0614: Unused import Netlist from wildcard import (unused-wildcard-import)
spydrnet/composers/edif/composer.py:2:0: W0614: Unused import Library from wildcard import (unused-wildcard-import)
spydrnet/composers/edif/composer.py:2:0: W0614: Unused import Definition from wildcard import (unused-wildcard-import)
spydrnet/composers/edif/composer.py:2:0: W0614: Unused import Cable from wildcard import (unused-wildcard-import)
spydrnet/composers/edif/composer.py:2:0: W0614: Unused import Wire from wildcard import (unused-wildcard-import)
spydrnet/composers/edif/composer.py:2:0: W0614: Unused import Instance from wildcard import (unused-wildcard-import)
spydrnet/composers/edif/composer.py:2:0: W0614: Unused import InnerPin from wildcard import (unused-wildcard-import)
spydrnet/composers/edif/composer.py:2:0: W0614: Unused import Bundle from wildcard import (unused-wildcard-import)
spydrnet/composers/edif/composer.py:2:0: W0614: Unused import Pin from wildcard import (unused-wildcard-import)
spydrnet/composers/edif/composer.py:3:0: W0611: Unused import inspect (unused-import)
spydrnet/composers/edif/composer.py:3:0: C0411: standard import "import inspect" should be placed before "from spydrnet.ir import *" (wrong-import-order)
spydrnet/composers/edif/composer.py:4:0: C0411: standard import "from datetime import datetime" should be placed before "from spydrnet.ir import *" (wrong-import-order)
************* Module spydrnet.composers.edif.edifify_names
spydrnet/composers/edif/edifify_names.py:69:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/composers/edif/edifify_names.py:81:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/composers/edif/edifify_names.py:119:0: C0301: Line too long (126/100) (line-too-long)
spydrnet/composers/edif/edifify_names.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/composers/edif/edifify_names.py:77:12: C0103: Variable name "r" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/edifify_names.py:78:12: R1705: Unnecessary "else" after "return" (no-else-return)
spydrnet/composers/edif/edifify_names.py:92:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
spydrnet/composers/edif/edifify_names.py:85:4: R0201: Method could be a function (no-self-use)
spydrnet/composers/edif/edifify_names.py:115:4: R0201: Method could be a function (no-self-use)
spydrnet/composers/edif/edifify_names.py:127:12: C0103: Variable name "r" doesn't conform to snake_case naming style (invalid-name)
************* Module spydrnet.composers.edif.tests.test_edifify_names
spydrnet/composers/edif/tests/test_edifify_names.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/composers/edif/tests/test_edifify_names.py:6:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/composers/edif/tests/test_edifify_names.py:8:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/edif/tests/test_edifify_names.py:9:8: C0103: Variable name "ed" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:10:8: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:13:8: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:8:4: R0201: Method could be a function (no-self-use)
spydrnet/composers/edif/tests/test_edifify_names.py:16:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/edif/tests/test_edifify_names.py:17:8: C0103: Variable name "ed" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:18:8: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:21:8: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:16:4: R0201: Method could be a function (no-self-use)
spydrnet/composers/edif/tests/test_edifify_names.py:25:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/edif/tests/test_edifify_names.py:26:8: C0103: Variable name "ed" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:27:8: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:30:8: C0103: Variable name "i2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:32:8: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:25:4: R0201: Method could be a function (no-self-use)
spydrnet/composers/edif/tests/test_edifify_names.py:35:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/edif/tests/test_edifify_names.py:36:8: C0103: Variable name "ed" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:37:8: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:42:8: C0103: Variable name "i2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:44:8: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:35:4: R0201: Method could be a function (no-self-use)
spydrnet/composers/edif/tests/test_edifify_names.py:47:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/edif/tests/test_edifify_names.py:48:8: C0103: Variable name "ed" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:49:8: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:58:8: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:47:4: R0201: Method could be a function (no-self-use)
spydrnet/composers/edif/tests/test_edifify_names.py:61:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/edif/tests/test_edifify_names.py:62:8: C0103: Variable name "ed" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:63:8: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:72:8: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:61:4: R0201: Method could be a function (no-self-use)
spydrnet/composers/edif/tests/test_edifify_names.py:75:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/edif/tests/test_edifify_names.py:76:8: C0103: Variable name "ed" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:77:8: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:105:8: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_edifify_names.py:75:4: R0201: Method could be a function (no-self-use)
************* Module spydrnet.composers.edif.tests.test_topological_sort
spydrnet/composers/edif/tests/test_topological_sort.py:36:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/edif/tests/test_topological_sort.py:76:0: C0304: Final newline missing (missing-final-newline)
spydrnet/composers/edif/tests/test_topological_sort.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/composers/edif/tests/test_topological_sort.py:6:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/composers/edif/tests/test_topological_sort.py:8:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/edif/tests/test_topological_sort.py:8:4: R0914: Too many local variables (18/15) (too-many-locals)
spydrnet/composers/edif/tests/test_topological_sort.py:9:8: C0103: Variable name "ce" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_topological_sort.py:53:20: W0212: Access to a protected member _topological_sort of a client class (protected-access)
spydrnet/composers/edif/tests/test_topological_sort.py:63:16: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_topological_sort.py:66:12: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_topological_sort.py:69:12: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_topological_sort.py:73:12: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/edif/tests/test_topological_sort.py:8:4: R0201: Method could be a function (no-self-use)
************* Module spydrnet.composers.verilog.composer
spydrnet/composers/verilog/composer.py:45:0: C0325: Unnecessary parens after 'while' keyword (superfluous-parens)
spydrnet/composers/verilog/composer.py:161:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/composers/verilog/composer.py:223:52: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/composer.py:268:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/composers/verilog/composer.py:270:0: C0301: Line too long (103/100) (line-too-long)
spydrnet/composers/verilog/composer.py:402:0: C0301: Line too long (123/100) (line-too-long)
spydrnet/composers/verilog/composer.py:431:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/composers/verilog/composer.py:432:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/composers/verilog/composer.py:434:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/composer.py:437:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/composers/verilog/composer.py:439:0: C0301: Line too long (107/100) (line-too-long)
spydrnet/composers/verilog/composer.py:441:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/composers/verilog/composer.py:448:0: C0301: Line too long (137/100) (line-too-long)
spydrnet/composers/verilog/composer.py:451:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/composers/verilog/composer.py:456:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/composers/verilog/composer.py:459:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/composers/verilog/composer.py:461:0: C0301: Line too long (107/100) (line-too-long)
spydrnet/composers/verilog/composer.py:500:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/composer.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/composers/verilog/composer.py:7:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/composers/verilog/composer.py:19:4: C0103: Argument name "ir" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:19:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/composer.py:24:8: C0103: Variable name "f" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:24:12: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
spydrnet/composers/verilog/composer.py:50:16: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:68:8: W0107: Unnecessary pass statement (unnecessary-pass)
spydrnet/composers/verilog/composer.py:70:4: C0103: Argument name "o" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:77:19: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:135:12: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:154:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:162:12: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:173:12: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:195:12: C0103: Variable name "w" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:211:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:229:16: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:240:12: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:249:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:262:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:264:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:274:8: C0103: Variable name "hi" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:275:8: C0103: Variable name "li" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:280:8: C0103: Variable name "hi" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:281:8: C0103: Variable name "li" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:258:8: W0612: Unused variable 'left_wires' (unused-variable)
spydrnet/composers/verilog/composer.py:259:8: W0612: Unused variable 'right_wires' (unused-variable)
spydrnet/composers/verilog/composer.py:292:15: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:316:15: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:341:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:358:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:366:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:373:16: C0103: Variable name "wl" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:374:16: C0103: Variable name "wr" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:377:20: C0103: Variable name "wl" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:378:16: C0103: Variable name "il" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:379:16: C0103: Variable name "ir" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:384:4: C0103: Argument name "o" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:416:11: C0121: Comparison 'low_index == None' should be 'low_index is None' (singleton-comparison)
spydrnet/composers/verilog/composer.py:416:33: C0121: Comparison 'high_index == None' should be 'high_index is None' (singleton-comparison)
spydrnet/composers/verilog/composer.py:424:27: E1120: No value for argument 'o' in method call (no-value-for-parameter)
spydrnet/composers/verilog/composer.py:435:8: R1705: Unnecessary "elif" after "return" (no-else-return)
spydrnet/composers/verilog/composer.py:436:20: R1714: Consider merging these comparisons with "in" to 'low_index in (None, lower_bundle)' (consider-using-in)
spydrnet/composers/verilog/composer.py:436:20: C0121: Comparison 'low_index == None' should be 'low_index is None' (singleton-comparison)
spydrnet/composers/verilog/composer.py:438:20: R1714: Consider merging these comparisons with "in" to 'high_index in (None, upper_bundle)' (consider-using-in)
spydrnet/composers/verilog/composer.py:438:20: C0121: Comparison 'high_index == None' should be 'high_index is None' (singleton-comparison)
spydrnet/composers/verilog/composer.py:441:76: C0121: Comparison 'low_index == None' should be 'low_index is None' (singleton-comparison)
spydrnet/composers/verilog/composer.py:441:98: C0121: Comparison 'high_index == None' should be 'high_index is None' (singleton-comparison)
spydrnet/composers/verilog/composer.py:450:19: R1716: Simplify chained comparison between the operands (chained-comparison)
spydrnet/composers/verilog/composer.py:458:19: R1716: Simplify chained comparison between the operands (chained-comparison)
spydrnet/composers/verilog/composer.py:460:19: R1716: Simplify chained comparison between the operands (chained-comparison)
spydrnet/composers/verilog/composer.py:471:12: C0103: Variable name "w" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:469:4: R0201: Method could be a function (no-self-use)
spydrnet/composers/verilog/composer.py:481:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:487:19: C0121: Comparison 'now_none == True' should be 'now_none is True' if checking for the singleton value True, or 'now_none' if testing for truthiness (singleton-comparison)
spydrnet/composers/verilog/composer.py:490:19: C0121: Comparison 'last_index == None' should be 'last_index is None' (singleton-comparison)
spydrnet/composers/verilog/composer.py:506:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:503:4: R0201: Method could be a function (no-self-use)
spydrnet/composers/verilog/composer.py:512:4: C0103: Argument name "o" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/composer.py:512:4: R0201: Method could be a function (no-self-use)
spydrnet/composers/verilog/composer.py:7:0: R0903: Too few public methods (1/2) (too-few-public-methods)
spydrnet/composers/verilog/composer.py:1:0: W0611: Unused OrderedDict imported from collections (unused-import)
************* Module spydrnet.composers.verilog.tests.test_composer
spydrnet/composers/verilog/tests/test_composer.py:13:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/composers/verilog/tests/test_composer.py:14:0: C0301: Line too long (122/100) (line-too-long)
spydrnet/composers/verilog/tests/test_composer.py:27:0: W0311: Bad indentation. Found 28 spaces, expected 24 (bad-indentation)
spydrnet/composers/verilog/tests/test_composer.py:28:0: C0301: Line too long (124/100) (line-too-long)
spydrnet/composers/verilog/tests/test_composer.py:30:0: W0311: Bad indentation. Found 28 spaces, expected 24 (bad-indentation)
spydrnet/composers/verilog/tests/test_composer.py:31:0: C0301: Line too long (128/100) (line-too-long)
spydrnet/composers/verilog/tests/test_composer.py:31:0: W0311: Bad indentation. Found 28 spaces, expected 24 (bad-indentation)
spydrnet/composers/verilog/tests/test_composer.py:33:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/composers/verilog/tests/test_composer.py:34:0: W0311: Bad indentation. Found 28 spaces, expected 24 (bad-indentation)
spydrnet/composers/verilog/tests/test_composer.py:35:0: W0311: Bad indentation. Found 28 spaces, expected 24 (bad-indentation)
spydrnet/composers/verilog/tests/test_composer.py:44:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer.py:45:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/composers/verilog/tests/test_composer.py:57:0: W0311: Bad indentation. Found 28 spaces, expected 24 (bad-indentation)
spydrnet/composers/verilog/tests/test_composer.py:58:0: C0301: Line too long (124/100) (line-too-long)
spydrnet/composers/verilog/tests/test_composer.py:60:0: W0311: Bad indentation. Found 28 spaces, expected 24 (bad-indentation)
spydrnet/composers/verilog/tests/test_composer.py:61:0: C0301: Line too long (128/100) (line-too-long)
spydrnet/composers/verilog/tests/test_composer.py:61:0: W0311: Bad indentation. Found 28 spaces, expected 24 (bad-indentation)
spydrnet/composers/verilog/tests/test_composer.py:63:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/composers/verilog/tests/test_composer.py:64:0: W0311: Bad indentation. Found 28 spaces, expected 24 (bad-indentation)
spydrnet/composers/verilog/tests/test_composer.py:65:0: W0311: Bad indentation. Found 28 spaces, expected 24 (bad-indentation)
spydrnet/composers/verilog/tests/test_composer.py:74:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer.py:75:0: C0304: Final newline missing (missing-final-newline)
spydrnet/composers/verilog/tests/test_composer.py:75:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/composers/verilog/tests/test_composer.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/composers/verilog/tests/test_composer.py:9:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/composers/verilog/tests/test_composer.py:17:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer.py:20:12: C0103: Variable name "ii" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/tests/test_composer.py:47:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer.py:50:12: C0103: Variable name "ii" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/tests/test_composer.py:5:0: C0411: standard import "import os" should be placed before "import spydrnet as sdn" (wrong-import-order)
spydrnet/composers/verilog/tests/test_composer.py:6:0: C0411: standard import "import tempfile" should be placed before "import spydrnet as sdn" (wrong-import-order)
spydrnet/composers/verilog/tests/test_composer.py:7:0: C0411: standard import "import glob" should be placed before "import spydrnet as sdn" (wrong-import-order)
************* Module spydrnet.composers.verilog.tests.test_composer_unit
spydrnet/composers/verilog/tests/test_composer_unit.py:13:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:23:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:48:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:85:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:91:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:112:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:125:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:138:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:140:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:145:0: C0301: Line too long (151/100) (line-too-long)
spydrnet/composers/verilog/tests/test_composer_unit.py:158:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/composers/verilog/tests/test_composer_unit.py:163:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:169:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:202:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:206:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:212:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:248:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:251:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:257:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:303:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:307:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:313:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:366:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:394:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:408:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:412:23: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:418:23: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:438:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:442:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:458:0: C0301: Line too long (123/100) (line-too-long)
spydrnet/composers/verilog/tests/test_composer_unit.py:515:0: C0301: Line too long (123/100) (line-too-long)
spydrnet/composers/verilog/tests/test_composer_unit.py:526:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/composers/verilog/tests/test_composer_unit.py:532:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:549:0: C0301: Line too long (149/100) (line-too-long)
spydrnet/composers/verilog/tests/test_composer_unit.py:607:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:621:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/composers/verilog/tests/test_composer_unit.py:631:0: C0305: Trailing newlines (trailing-newlines)
spydrnet/composers/verilog/tests/test_composer_unit.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:12:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:21:8: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:24:8: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:27:8: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:29:12: R1705: Unnecessary "else" after "return" (no-else-return)
spydrnet/composers/verilog/tests/test_composer_unit.py:44:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:49:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:49:4: R0201: Method could be a function (no-self-use)
spydrnet/composers/verilog/tests/test_composer_unit.py:54:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:60:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:66:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:66:4: R0201: Method could be a function (no-self-use)
spydrnet/composers/verilog/tests/test_composer_unit.py:76:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:76:4: R0914: Too many local variables (19/15) (too-many-locals)
spydrnet/composers/verilog/tests/test_composer_unit.py:76:4: R0201: Method could be a function (no-self-use)
spydrnet/composers/verilog/tests/test_composer_unit.py:153:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:157:8: W0212: Access to a protected member _write_header of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:160:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:176:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:179:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:182:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:185:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:189:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:192:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:195:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:198:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:203:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:222:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:225:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:228:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:231:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:235:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:238:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:241:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:244:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:249:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:266:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:269:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:272:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:275:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:278:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:281:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:285:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:288:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:291:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:294:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:297:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:300:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:305:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:324:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:327:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:330:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:333:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:336:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:339:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:343:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:346:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:349:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:352:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:355:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:358:8: W0212: Access to a protected member _write_brackets of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:362:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:365:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:378:8: C0103: Variable name "b1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/tests/test_composer_unit.py:379:8: C0103: Variable name "b2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/tests/test_composer_unit.py:380:8: C0103: Variable name "b3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/tests/test_composer_unit.py:381:8: C0103: Variable name "b4" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/tests/test_composer_unit.py:383:8: W0212: Access to a protected member _write_brackets_defining of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:387:8: W0212: Access to a protected member _write_brackets_defining of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:391:8: W0212: Access to a protected member _write_brackets_defining of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:395:8: W0212: Access to a protected member _write_brackets_defining of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:399:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:401:8: C0103: Variable name "o" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/tests/test_composer_unit.py:403:12: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/tests/test_composer_unit.py:405:12: W0212: Access to a protected member _write_name of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:410:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:412:8: C0103: Variable name "o" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/tests/test_composer_unit.py:413:8: W0212: Access to a protected member _write_name of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:416:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:418:8: C0103: Variable name "o" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/tests/test_composer_unit.py:420:8: W0212: Access to a protected member _write_name of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:422:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:422:4: R0914: Too many local variables (18/15) (too-many-locals)
spydrnet/composers/verilog/tests/test_composer_unit.py:435:8: W0212: Access to a protected member _write_instance_port of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:439:8: W0212: Access to a protected member _write_instance_port of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:443:8: W0212: Access to a protected member _write_instance_port of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:447:8: W0212: Access to a protected member _write_instance_port of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:451:8: W0212: Access to a protected member _write_instance_port of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:455:8: W0212: Access to a protected member _write_instance_ports of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:468:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:479:8: W0212: Access to a protected member _write_instance_parameter of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:483:8: W0212: Access to a protected member _write_instance_parameter of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:493:8: W0212: Access to a protected member _write_instance_parameters of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:498:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:498:4: R0914: Too many local variables (22/15) (too-many-locals)
spydrnet/composers/verilog/tests/test_composer_unit.py:524:8: W0212: Access to a protected member _write_module_body_instance of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:506:8: W0612: Unused variable 'single_bit_port' (unused-variable)
spydrnet/composers/verilog/tests/test_composer_unit.py:507:12: W0612: Unused variable 'multi_bit_port' (unused-variable)
spydrnet/composers/verilog/tests/test_composer_unit.py:508:12: W0612: Unused variable 'multi_bit_port_offset' (unused-variable)
spydrnet/composers/verilog/tests/test_composer_unit.py:509:12: W0612: Unused variable 'partial_port' (unused-variable)
spydrnet/composers/verilog/tests/test_composer_unit.py:510:12: W0612: Unused variable 'concatenated_port' (unused-variable)
spydrnet/composers/verilog/tests/test_composer_unit.py:529:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:548:8: W0212: Access to a protected member _write_module_header of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:552:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:561:8: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/tests/test_composer_unit.py:562:8: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/composers/verilog/tests/test_composer_unit.py:569:8: W0212: Access to a protected member _write_module_header_port of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:572:8: W0212: Access to a protected member _write_module_body_port of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:577:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:592:8: W0212: Access to a protected member _write_module_header_port of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:595:8: W0212: Access to a protected member _write_module_body_port of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:600:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:608:8: W0212: Access to a protected member _write_module_header_port of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:611:8: W0212: Access to a protected member _write_module_body_port of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:615:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:622:8: W0212: Access to a protected member _write_module_body_cable of a client class (protected-access)
spydrnet/composers/verilog/tests/test_composer_unit.py:626:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:629:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/composers/verilog/tests/test_composer_unit.py:12:0: R0904: Too many public methods (26/20) (too-many-public-methods)
spydrnet/composers/verilog/tests/test_composer_unit.py:8:0: W0611: Unused expectedFailure imported from unittest.case (unused-import)
************* Module spydrnet.parsers.__init__
spydrnet/parsers/__init__.py:20:0: C0301: Line too long (107/100) (line-too-long)
spydrnet/parsers/__init__.py:47:0: C0301: Line too long (110/100) (line-too-long)
************* Module spydrnet.parsers
spydrnet/parsers/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/parsers/__init__.py:5:0: W0105: String statement has no effect (pointless-string-statement)
spydrnet/parsers/__init__.py:44:46: W0622: Redefining built-in 'zip' (redefined-builtin)
spydrnet/parsers/__init__.py:58:8: C0415: Import outside toplevel (spydrnet.parsers.edif.parser.EdifParser) (import-outside-toplevel)
spydrnet/parsers/__init__.py:61:8: C0415: Import outside toplevel (spydrnet.parsers.verilog.parser.VerilogParser) (import-outside-toplevel)
spydrnet/parsers/__init__.py:69:0: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.parsers.primatives.parse_primatives
spydrnet/parsers/primatives/parse_primatives.py:7:0: C0301: Line too long (131/100) (line-too-long)
spydrnet/parsers/primatives/parse_primatives.py:23:61: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/primatives/parse_primatives.py:24:0: C0301: Line too long (123/100) (line-too-long)
spydrnet/parsers/primatives/parse_primatives.py:52:97: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/primatives/parse_primatives.py:52:0: W0311: Bad indentation. Found 11 spaces, expected 12 (bad-indentation)
spydrnet/parsers/primatives/parse_primatives.py:72:0: C0301: Line too long (121/100) (line-too-long)
spydrnet/parsers/primatives/parse_primatives.py:82:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
spydrnet/parsers/primatives/parse_primatives.py:106:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/primatives/parse_primatives.py:116:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/primatives/parse_primatives.py:126:0: C0304: Final newline missing (missing-final-newline)
spydrnet/parsers/primatives/parse_primatives.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/parsers/primatives/parse_primatives.py:53:35: C0103: Variable name "vf" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/primatives/parse_primatives.py:67:12: R1724: Unnecessary "elif" after "continue" (no-else-continue)
spydrnet/parsers/primatives/parse_primatives.py:94:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/primatives/parse_primatives.py:107:4: R0913: Too many arguments (6/5) (too-many-arguments)
spydrnet/parsers/primatives/parse_primatives.py:108:21: E1101: Module 'SpyDrNet' has no 'create_definition' member (no-member)
spydrnet/parsers/primatives/parse_primatives.py:111:12: C0103: Variable name "o" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/primatives/parse_primatives.py:113:12: C0103: Variable name "io" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/primatives/parse_primatives.py:107:40: W0613: Unused argument 'name' (unused-argument)
spydrnet/parsers/primatives/parse_primatives.py:107:46: W0613: Unused argument 'parameters' (unused-argument)
spydrnet/parsers/primatives/parse_primatives.py:118:15: E1101: Module 'SpyDrNet' has no 'create_port' member (no-member)
spydrnet/parsers/primatives/parse_primatives.py:117:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/primatives/parse_primatives.py:19:0: R0903: Too few public methods (1/2) (too-few-public-methods)
************* Module spydrnet.parsers.tests.test_parsers
spydrnet/parsers/tests/test_parsers.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/parsers/tests/test_parsers.py:5:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/parsers/tests/test_parsers.py:6:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.parsers.edif.edif_tokens
spydrnet/parsers/edif/edif_tokens.py:109:0: C0304: Final newline missing (missing-final-newline)
spydrnet/parsers/edif/edif_tokens.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module spydrnet.parsers.edif.parser
spydrnet/parsers/edif/parser.py:429:21: W0511: TODO: what about multi-dimensional ports, non-downto ports, and when non-square brackets are used <0:17><31:0> (fixme)
spydrnet/parsers/edif/parser.py:444:13: W0511: TODO: what about single pin array ports with a non_zero starting index. (fixme)
spydrnet/parsers/edif/parser.py:537:21: W0511: TODO: Add warning about merging nets together (fixme)
spydrnet/parsers/edif/parser.py:30:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/parsers/edif/parser.py:167:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/parsers/edif/parser.py:358:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/parsers/edif/parser.py:429:0: C0301: Line too long (132/100) (line-too-long)
spydrnet/parsers/edif/parser.py:538:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/parsers/edif/parser.py:540:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/parsers/edif/parser.py:622:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/parsers/edif/parser.py:637:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/parsers/edif/parser.py:638:0: C0301: Line too long (156/100) (line-too-long)
spydrnet/parsers/edif/parser.py:650:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/parsers/edif/parser.py:651:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/parsers/edif/parser.py:697:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/parsers/edif/parser.py:719:0: C0301: Line too long (103/100) (line-too-long)
spydrnet/parsers/edif/parser.py:720:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/parsers/edif/parser.py:818:0: C0301: Line too long (107/100) (line-too-long)
spydrnet/parsers/edif/parser.py:821:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/parsers/edif/parser.py:929:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/edif/parser.py:937:0: C0301: Line too long (107/100) (line-too-long)
spydrnet/parsers/edif/parser.py:939:38: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/edif/parser.py:951:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/parsers/edif/parser.py:963:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/parsers/edif/parser.py:975:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/parsers/edif/parser.py:977:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/edif/parser.py:982:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/parsers/edif/parser.py:996:78: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/edif/parser.py:997:79: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/edif/parser.py:998:79: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/edif/parser.py:999:78: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/edif/parser.py:1000:66: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/edif/parser.py:1001:67: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/edif/parser.py:1004:78: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/edif/parser.py:1007:0: C0301: Line too long (139/100) (line-too-long)
spydrnet/parsers/edif/parser.py:1091:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/parsers/edif/parser.py:1:0: C0302: Too many lines in module (1128/1000) (too-many-lines)
spydrnet/parsers/edif/parser.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/parsers/edif/parser.py:2:0: W0401: Wildcard import spydrnet.parsers.edif.edif_tokens (wildcard-import)
spydrnet/parsers/edif/parser.py:10:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/parsers/edif/parser.py:11:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:18:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:24:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:36:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:44:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:50:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:59:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:64:4: C0103: Method name "parse_edifVersion" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:64:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:73:4: C0103: Method name "parse_edifLevel" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:73:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:81:4: C0103: Method name "parse_keywordMap" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:81:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:90:4: C0103: Method name "parse_keywordLevel" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:90:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:98:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:123:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:138:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:145:8: C0103: Variable name "has_dataOrigin" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:156:16: C0103: Variable name "has_dataOrigin" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:171:4: C0103: Method name "parse_timeStamp" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:171:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:183:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:190:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:205:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:209:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:213:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:235:16: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:243:28: W0707: Consider explicitly re-raising using the 'from' keyword (raise-missing-from)
spydrnet/parsers/edif/parser.py:258:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:262:4: C0103: Method name "parse_numberDefinition" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:262:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:266:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:275:8: C0103: Variable name "has_viewMap" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:284:16: C0103: Variable name "has_viewMap" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:299:4: C0103: Method name "parse_cellType" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:299:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:312:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:341:4: C0103: Method name "parse_viewType" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:341:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:344:11: R0916: Too many boolean expressions in if statement (10/5) (too-many-boolean-expressions)
spydrnet/parsers/edif/parser.py:363:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:363:4: R0912: Too many branches (19/12) (too-many-branches)
spydrnet/parsers/edif/parser.py:409:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:413:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:413:4: R0912: Too many branches (21/12) (too-many-branches)
spydrnet/parsers/edif/parser.py:413:4: R0915: Too many statements (59/50) (too-many-statements)
spydrnet/parsers/edif/parser.py:482:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:490:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:504:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:513:16: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:521:28: W0707: Consider explicitly re-raising using the 'from' keyword (raise-missing-from)
spydrnet/parsers/edif/parser.py:536:16: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:504:4: R0912: Too many branches (29/12) (too-many-branches)
spydrnet/parsers/edif/parser.py:504:4: R0915: Too many statements (68/50) (too-many-statements)
spydrnet/parsers/edif/parser.py:584:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:612:4: C0103: Method name "parse_viewRef" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:612:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:628:4: C0103: Method name "parse_cellRef" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:628:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:642:4: C0103: Method name "parse_libraryRef" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:642:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:655:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:675:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:690:4: C0103: Method name "parse_portRef" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:690:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:704:12: R1720: Unnecessary "elif" after "raise" (no-else-raise)
spydrnet/parsers/edif/parser.py:725:4: C0103: Method name "parse_instanceRef" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:725:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:729:8: R1720: Unnecessary "else" after "raise" (no-else-raise)
spydrnet/parsers/edif/parser.py:732:12: W0101: Unreachable code (unreachable)
spydrnet/parsers/edif/parser.py:741:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:750:4: C0103: Method name "parse_viewMap" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:750:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:754:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:778:26: W0631: Using possibly undefined loop variable 'library' (undefined-loop-variable)
spydrnet/parsers/edif/parser.py:781:29: W0631: Using possibly undefined loop variable 'definition' (undefined-loop-variable)
spydrnet/parsers/edif/parser.py:786:4: C0103: Method name "parse_dataOrigin" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:786:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:790:4: C0103: Method name "parse_userData" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:790:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:794:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:804:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:809:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:814:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:849:4: C0103: Method name "parse_typedValue" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:849:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:850:8: R1705: Unnecessary "elif" after "return" (no-else-return)
spydrnet/parsers/edif/parser.py:865:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:878:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:882:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:891:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:898:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:902:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:906:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:909:4: C0103: Method name "parse_nameRef" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:909:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:914:4: C0103: Method name "parse_nameDef" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:914:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:923:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:923:4: R0914: Too many local variables (19/15) (too-many-locals)
spydrnet/parsers/edif/parser.py:931:11: C0121: Comparison 'e_index == None' should be 'e_index is None' (singleton-comparison)
spydrnet/parsers/edif/parser.py:935:11: C0121: Comparison 'existing_cable == None' should be 'existing_cable is None' (singleton-comparison)
spydrnet/parsers/edif/parser.py:950:15: C0121: Comparison 'existing_cable.is_array == False' should be 'existing_cable.is_array is False' if checking for the singleton value False, or 'not existing_cable.is_array' if testing for falsiness (singleton-comparison)
spydrnet/parsers/edif/parser.py:950:51: C0121: Comparison 'index == None' should be 'index is None' (singleton-comparison)
spydrnet/parsers/edif/parser.py:955:24: C0103: Variable name "w" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:956:24: C0103: Variable name "ew" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:959:28: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:978:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:988:35: W0631: Using possibly undefined loop variable 'i' (undefined-loop-variable)
spydrnet/parsers/edif/parser.py:1015:35: W0631: Using possibly undefined loop variable 'i' (undefined-loop-variable)
spydrnet/parsers/edif/parser.py:978:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/edif/parser.py:1018:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:1029:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:1034:4: C0103: Method name "parse_stringToken" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:1034:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:1039:4: C0103: Method name "parse_integerToken" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/parser.py:1039:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:1044:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:1048:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:1053:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:1057:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:1060:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:1072:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:1079:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:1088:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:1094:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:1099:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:1104:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:1109:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:1113:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:1119:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/parser.py:40:8: W0201: Attribute 'netlist' defined outside __init__ (attribute-defined-outside-init)
spydrnet/parsers/edif/parser.py:10:0: R0904: Too many public methods (79/20) (too-many-public-methods)
spydrnet/parsers/edif/parser.py:6:0: C0411: standard import "from functools import reduce" should be placed before "from spydrnet.parsers.edif.tokenizer import EdifTokenizer" (wrong-import-order)
spydrnet/parsers/edif/parser.py:7:0: C0411: standard import "import re" should be placed before "from spydrnet.parsers.edif.tokenizer import EdifTokenizer" (wrong-import-order)
************* Module spydrnet.parsers.edif.tokenizer
spydrnet/parsers/edif/tokenizer.py:183:0: C0301: Line too long (177/100) (line-too-long)
spydrnet/parsers/edif/tokenizer.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/parsers/edif/tokenizer.py:8:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/parsers/edif/tokenizer.py:10:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tokenizer.py:15:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tokenizer.py:21:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tokenizer.py:32:16: W0622: Redefining built-in 'zip' (redefined-builtin)
spydrnet/parsers/edif/tokenizer.py:32:22: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
spydrnet/parsers/edif/tokenizer.py:35:25: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
spydrnet/parsers/edif/tokenizer.py:39:36: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
spydrnet/parsers/edif/tokenizer.py:52:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tokenizer.py:59:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tokenizer.py:67:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tokenizer.py:68:8: R1705: Unnecessary "else" after "return" (no-else-return)
spydrnet/parsers/edif/tokenizer.py:74:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tokenizer.py:80:20: C0103: Variable name "ch" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/tokenizer.py:74:4: R0912: Too many branches (15/12) (too-many-branches)
spydrnet/parsers/edif/tokenizer.py:116:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tokenizer.py:120:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tokenizer.py:128:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tokenizer.py:132:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tokenizer.py:136:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tokenizer.py:137:8: R1705: Unnecessary "else" after "return" (no-else-return)
spydrnet/parsers/edif/tokenizer.py:141:12: R1705: Unnecessary "elif" after "return" (no-else-return)
spydrnet/parsers/edif/tokenizer.py:147:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tokenizer.py:155:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tokenizer.py:160:4: C0103: Method name "expect_valid_integerToken" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/tokenizer.py:160:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tokenizer.py:168:4: C0103: Method name "is_valid_integerToken" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/tokenizer.py:168:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tokenizer.py:173:4: C0103: Method name "expect_valid_stringToken" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/tokenizer.py:173:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tokenizer.py:181:4: C0103: Method name "is_valid_stringToken" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/tokenizer.py:181:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.parsers.edif.tests.test_tokenizer
spydrnet/parsers/edif/tests/test_tokenizer.py:111:9: W0511: TODO Special characters are weird. We should check them out. (fixme)
spydrnet/parsers/edif/tests/test_tokenizer.py:80:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/edif/tests/test_tokenizer.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/parsers/edif/tests/test_tokenizer.py:10:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/parsers/edif/tests/test_tokenizer.py:11:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tests/test_tokenizer.py:17:8: W0622: Redefining built-in 'zip' (redefined-builtin)
spydrnet/parsers/edif/tests/test_tokenizer.py:14:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tests/test_tokenizer.py:17:14: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
spydrnet/parsers/edif/tests/test_tokenizer.py:20:17: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
spydrnet/parsers/edif/tests/test_tokenizer.py:26:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tests/test_tokenizer.py:38:8: W0622: Redefining built-in 'zip' (redefined-builtin)
spydrnet/parsers/edif/tests/test_tokenizer.py:33:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tests/test_tokenizer.py:38:14: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
spydrnet/parsers/edif/tests/test_tokenizer.py:47:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tests/test_tokenizer.py:51:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tests/test_tokenizer.py:55:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tests/test_tokenizer.py:59:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tests/test_tokenizer.py:67:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tests/test_tokenizer.py:74:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tests/test_tokenizer.py:81:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tests/test_tokenizer.py:96:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/parsers/edif/tests/test_tokenizer.py:98:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.parsers.edif.tests.test_edif_parser
spydrnet/parsers/edif/tests/test_edif_parser.py:28:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/edif/tests/test_edif_parser.py:50:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/edif/tests/test_edif_parser.py:55:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/parsers/edif/tests/test_edif_parser.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/parsers/edif/tests/test_edif_parser.py:12:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/parsers/edif/tests/test_edif_parser.py:13:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tests/test_edif_parser.py:29:8: C0103: Variable name "p0" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/tests/test_edif_parser.py:30:8: C0103: Variable name "p1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/tests/test_edif_parser.py:31:8: C0103: Variable name "p2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/tests/test_edif_parser.py:37:8: C0103: Variable name "ep" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/tests/test_edif_parser.py:13:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/edif/tests/test_edif_parser.py:58:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tests/test_edif_parser.py:59:12: C0103: Variable name "ii" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/tests/test_edif_parser.py:64:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tests/test_edif_parser.py:65:12: C0103: Variable name "ii" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/tests/test_edif_parser.py:70:4: C0103: Argument name "ii" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/tests/test_edif_parser.py:70:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/edif/tests/test_edif_parser.py:77:20: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/tests/test_edif_parser.py:78:24: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/tests/test_edif_parser.py:79:28: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/edif/tests/test_edif_parser.py:70:52: W0613: Unused argument 'target_format_extension' (unused-argument)
spydrnet/parsers/edif/tests/test_edif_parser.py:75:50: W0612: Unused variable 'tempdirname' (unused-variable)
spydrnet/parsers/edif/tests/test_edif_parser.py:5:0: W0611: Unused base_dir imported from spydrnet (unused-import)
spydrnet/parsers/edif/tests/test_edif_parser.py:6:0: C0411: standard import "import os" should be placed before "import spydrnet as sdn" (wrong-import-order)
spydrnet/parsers/edif/tests/test_edif_parser.py:7:0: C0411: standard import "import tempfile" should be placed before "import spydrnet as sdn" (wrong-import-order)
spydrnet/parsers/edif/tests/test_edif_parser.py:8:0: C0411: standard import "import glob" should be placed before "import spydrnet as sdn" (wrong-import-order)
spydrnet/parsers/edif/tests/test_edif_parser.py:9:0: C0411: standard import "import shutil" should be placed before "import spydrnet as sdn" (wrong-import-order)
************* Module spydrnet.parsers.verilog.verilog_tokens
spydrnet/parsers/verilog/verilog_tokens.py:67:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/parsers/verilog/verilog_tokens.py:68:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/parsers/verilog/verilog_tokens.py:69:0: C0301: Line too long (138/100) (line-too-long)
spydrnet/parsers/verilog/verilog_tokens.py:71:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/parsers/verilog/verilog_tokens.py:153:0: C0305: Trailing newlines (trailing-newlines)
spydrnet/parsers/verilog/verilog_tokens.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/parsers/verilog/verilog_tokens.py:120:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/verilog_tokens.py:121:4: R1705: Unnecessary "elif" after "return" (no-else-return)
spydrnet/parsers/verilog/verilog_tokens.py:131:12: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/verilog_tokens.py:136:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/verilog_tokens.py:139:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/verilog_tokens.py:144:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/verilog_tokens.py:145:4: R1705: Unnecessary "elif" after "return" (no-else-return)
************* Module spydrnet.parsers.verilog.parser
spydrnet/parsers/verilog/parser.py:163:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:252:0: C0301: Line too long (126/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:316:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:335:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:414:0: C0301: Line too long (148/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:416:0: C0301: Line too long (158/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:450:0: C0301: Line too long (122/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:456:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:500:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:514:0: C0301: Line too long (162/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:526:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:554:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:683:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/parser.py:693:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:695:0: C0301: Line too long (133/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:701:0: C0301: Line too long (140/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:703:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:707:0: C0301: Line too long (127/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:711:0: C0301: Line too long (111/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:713:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/parser.py:730:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:770:0: C0301: Line too long (124/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:802:0: C0301: Line too long (127/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:837:34: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/parser.py:840:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:845:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:847:0: C0301: Line too long (154/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:850:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:1088:0: C0301: Line too long (134/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:1089:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:1089:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:1090:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:1091:0: C0301: Line too long (211/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:1097:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:1125:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:1185:0: C0301: Line too long (126/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:1218:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:1287:0: C0301: Line too long (128/100) (line-too-long)
spydrnet/parsers/verilog/parser.py:1:0: C0302: Too many lines in module (1287/1000) (too-many-lines)
spydrnet/parsers/verilog/parser.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/parsers/verilog/parser.py:15:0: R0902: Too many instance attributes (11/7) (too-many-instance-attributes)
spydrnet/parsers/verilog/parser.py:56:12: R1705: Unnecessary "else" after "return" (no-else-return)
spydrnet/parsers/verilog/parser.py:71:16: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/parser.py:80:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:86:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:120:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:123:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:137:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:172:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:230:23: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/parser.py:237:16: W0107: Unnecessary pass statement (unnecessary-pass)
spydrnet/parsers/verilog/parser.py:172:4: R0912: Too many branches (18/12) (too-many-branches)
spydrnet/parsers/verilog/parser.py:245:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:247:12: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/parser.py:255:15: R1714: Consider merging these comparisons with "in" to 'token in (vt.MODULE, vt.PRIMITIVE)' (consider-using-in)
spydrnet/parsers/verilog/parser.py:277:14: R1714: Consider merging these comparisons with "in" to 'token not in (vt.END_MODULE, vt.END_PRIMITIVE)' (consider-using-in)
spydrnet/parsers/verilog/parser.py:290:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:356:19: C0121: Comparison 'right != None' should be 'right is not None' (singleton-comparison)
spydrnet/parsers/verilog/parser.py:452:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
spydrnet/parsers/verilog/parser.py:468:16: C0103: Variable name "w" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/parser.py:501:11: C0121: Comparison 'left == None' should be 'left is None' (singleton-comparison)
spydrnet/parsers/verilog/parser.py:501:28: C0121: Comparison 'right == None' should be 'right is None' (singleton-comparison)
spydrnet/parsers/verilog/parser.py:505:16: R1712: Consider using tuple unpacking for swapping variables (consider-swap-variables)
spydrnet/parsers/verilog/parser.py:515:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
spydrnet/parsers/verilog/parser.py:550:23: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/parser.py:609:20: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/parser.py:620:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:646:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:705:8: W0612: Unused variable 'key' (unused-variable)
spydrnet/parsers/verilog/parser.py:709:8: W0612: Unused variable 'value' (unused-variable)
spydrnet/parsers/verilog/parser.py:715:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:726:15: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/parser.py:737:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:753:8: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/parser.py:761:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:805:12: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
spydrnet/parsers/verilog/parser.py:819:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:876:8: R1705: Unnecessary "else" after "return" (no-else-return)
spydrnet/parsers/verilog/parser.py:890:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:908:22: R1714: Consider merging these comparisons with "in" to 'token not in (vt.STAR, vt.COMMA)' (consider-using-in)
spydrnet/parsers/verilog/parser.py:930:11: C0121: Comparison 'self.assigns == None' should be 'self.assigns is None' (singleton-comparison)
spydrnet/parsers/verilog/parser.py:941:11: C0121: Comparison 'definition == None' should be 'definition is None' (singleton-comparison)
spydrnet/parsers/verilog/parser.py:968:4: R0913: Too many arguments (7/5) (too-many-arguments)
spydrnet/parsers/verilog/parser.py:968:4: R0914: Too many local variables (16/15) (too-many-locals)
spydrnet/parsers/verilog/parser.py:992:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:995:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/parser.py:992:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/parser.py:999:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:1000:15: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/parser.py:1004:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:1005:15: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/parser.py:1008:4: C0103: Argument name "v" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/parser.py:1008:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:1008:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/parser.py:1018:12: C0103: Variable name "w" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/parser.py:1019:16: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/parser.py:1015:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/parser.py:1024:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:1027:11: C0121: Comparison 'left != None' should be 'left is not None' (singleton-comparison)
spydrnet/parsers/verilog/parser.py:1027:28: C0121: Comparison 'right != None' should be 'right is not None' (singleton-comparison)
spydrnet/parsers/verilog/parser.py:1034:16: C0103: Variable name "w" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/parser.py:1037:13: C0121: Comparison 'left != None' should be 'left is not None' (singleton-comparison)
spydrnet/parsers/verilog/parser.py:1037:29: C0121: Comparison 'right != None' should be 'right is not None' (singleton-comparison)
spydrnet/parsers/verilog/parser.py:1038:15: C0121: Comparison 'left != None' should be 'left is not None' (singleton-comparison)
spydrnet/parsers/verilog/parser.py:1045:16: C0103: Variable name "w" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/parser.py:1024:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/parser.py:1050:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:1055:8: R1705: Unnecessary "else" after "return" (no-else-return)
spydrnet/parsers/verilog/parser.py:1050:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/parser.py:1064:4: W0105: String statement has no effect (pointless-string-statement)
spydrnet/parsers/verilog/parser.py:1092:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
spydrnet/parsers/verilog/parser.py:1097:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:1097:4: R0913: Too many arguments (6/5) (too-many-arguments)
spydrnet/parsers/verilog/parser.py:1100:11: C0121: Comparison 'cable == None' should be 'cable is None' (singleton-comparison)
spydrnet/parsers/verilog/parser.py:1144:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:1144:4: R0913: Too many arguments (6/5) (too-many-arguments)
spydrnet/parsers/verilog/parser.py:1144:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/parser.py:1166:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:1166:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/parser.py:1172:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:1172:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/parser.py:1185:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:1185:4: R0913: Too many arguments (7/5) (too-many-arguments)
spydrnet/parsers/verilog/parser.py:1186:11: C0121: Comparison 'definition == None' should be 'definition is None' (singleton-comparison)
spydrnet/parsers/verilog/parser.py:1191:11: C0121: Comparison 'port == None' should be 'port is None' (singleton-comparison)
spydrnet/parsers/verilog/parser.py:1237:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:1237:4: R0913: Too many arguments (6/5) (too-many-arguments)
spydrnet/parsers/verilog/parser.py:1237:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/parser.py:1259:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:1259:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/parser.py:1265:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:1265:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/parser.py:1268:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:1270:12: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/parser.py:1268:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/parser.py:1279:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/parser.py:1280:12: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/parser.py:1279:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/parser.py:15:0: R0904: Too many public methods (56/20) (too-many-public-methods)
spydrnet/parsers/verilog/parser.py:7:0: W0611: Unused Netlist imported from spydrnet.ir (unused-import)
spydrnet/parsers/verilog/parser.py:7:0: W0611: Unused Library imported from spydrnet.ir (unused-import)
spydrnet/parsers/verilog/parser.py:7:0: W0611: Unused Definition imported from spydrnet.ir (unused-import)
spydrnet/parsers/verilog/parser.py:7:0: W0611: Unused Port imported from spydrnet.ir (unused-import)
spydrnet/parsers/verilog/parser.py:7:0: W0611: Unused Cable imported from spydrnet.ir (unused-import)
spydrnet/parsers/verilog/parser.py:7:0: W0611: Unused Instance imported from spydrnet.ir (unused-import)
spydrnet/parsers/verilog/parser.py:7:0: W0611: Unused OuterPin imported from spydrnet.ir (unused-import)
spydrnet/parsers/verilog/parser.py:11:0: W0611: Unused reduce imported from functools (unused-import)
spydrnet/parsers/verilog/parser.py:12:0: W0611: Unused import re (unused-import)
spydrnet/parsers/verilog/parser.py:11:0: C0411: standard import "from functools import reduce" should be placed before "from spydrnet.parsers.verilog.tokenizer import VerilogTokenizer" (wrong-import-order)
spydrnet/parsers/verilog/parser.py:12:0: C0411: standard import "import re" should be placed before "from spydrnet.parsers.verilog.tokenizer import VerilogTokenizer" (wrong-import-order)
************* Module spydrnet.parsers.verilog.tokenizer
spydrnet/parsers/verilog/tokenizer.py:96:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/parsers/verilog/tokenizer.py:102:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tokenizer.py:107:0: C0305: Trailing newlines (trailing-newlines)
spydrnet/parsers/verilog/tokenizer.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/parsers/verilog/tokenizer.py:13:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/parsers/verilog/tokenizer.py:15:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tokenizer.py:20:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tokenizer.py:26:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tokenizer.py:37:16: W0622: Redefining built-in 'zip' (redefined-builtin)
spydrnet/parsers/verilog/tokenizer.py:37:22: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
spydrnet/parsers/verilog/tokenizer.py:40:25: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
spydrnet/parsers/verilog/tokenizer.py:44:36: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
spydrnet/parsers/verilog/tokenizer.py:57:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tokenizer.py:64:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tokenizer.py:73:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tokenizer.py:74:8: R1705: Unnecessary "else" after "return" (no-else-return)
spydrnet/parsers/verilog/tokenizer.py:85:12: C0103: Variable name "tf" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tokenizer.py:87:20: C0103: Variable name "ch" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tokenizer.py:99:11: C0121: Comparison 'result != None' should be 'result is not None' (singleton-comparison)
spydrnet/parsers/verilog/tokenizer.py:104:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tokenizer.py:5:0: W0611: Unused import re (unused-import)
************* Module spydrnet.parsers.verilog.verilog_token_factory
spydrnet/parsers/verilog/verilog_token_factory.py:4:23: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/verilog_token_factory.py:12:0: C0301: Line too long (112/100) (line-too-long)
spydrnet/parsers/verilog/verilog_token_factory.py:13:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/verilog_token_factory.py:18:0: C0301: Line too long (136/100) (line-too-long)
spydrnet/parsers/verilog/verilog_token_factory.py:22:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/verilog_token_factory.py:25:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/verilog_token_factory.py:28:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/verilog_token_factory.py:31:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/verilog_token_factory.py:34:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/verilog_token_factory.py:87:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/verilog_token_factory.py:90:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/parsers/verilog/verilog_token_factory.py:93:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/verilog_token_factory.py:97:0: C0301: Line too long (112/100) (line-too-long)
spydrnet/parsers/verilog/verilog_token_factory.py:107:0: C0304: Final newline missing (missing-final-newline)
spydrnet/parsers/verilog/verilog_token_factory.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/parsers/verilog/verilog_token_factory.py:3:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/parsers/verilog/verilog_token_factory.py:14:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/verilog_token_factory.py:17:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/verilog_token_factory.py:20:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/verilog_token_factory.py:38:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/verilog_token_factory.py:102:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.parsers.verilog.tests.test_tokenizer
spydrnet/parsers/verilog/tests/test_tokenizer.py:12:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_tokenizer.py:14:0: C0325: Unnecessary parens after 'while' keyword (superfluous-parens)
spydrnet/parsers/verilog/tests/test_tokenizer.py:20:0: C0325: Unnecessary parens after 'while' keyword (superfluous-parens)
spydrnet/parsers/verilog/tests/test_tokenizer.py:24:0: C0325: Unnecessary parens after 'while' keyword (superfluous-parens)
spydrnet/parsers/verilog/tests/test_tokenizer.py:33:0: C0325: Unnecessary parens after 'while' keyword (superfluous-parens)
spydrnet/parsers/verilog/tests/test_tokenizer.py:35:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_tokenizer.py:37:0: C0304: Final newline missing (missing-final-newline)
spydrnet/parsers/verilog/tests/test_tokenizer.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/parsers/verilog/tests/test_tokenizer.py:3:0: W0401: Wildcard import spydrnet.parsers.verilog.tokenizer (wildcard-import)
spydrnet/parsers/verilog/tests/test_tokenizer.py:8:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/parsers/verilog/tests/test_tokenizer.py:11:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_tokenizer.py:11:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_tokenizer.py:18:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_tokenizer.py:18:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_tokenizer.py:28:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_tokenizer.py:36:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
spydrnet/parsers/verilog/tests/test_tokenizer.py:28:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_tokenizer.py:3:0: W0614: Unused import re from wildcard import (unused-wildcard-import)
spydrnet/parsers/verilog/tests/test_tokenizer.py:3:0: W0614: Unused import zipfile from wildcard import (unused-wildcard-import)
spydrnet/parsers/verilog/tests/test_tokenizer.py:3:0: W0614: Unused import io from wildcard import (unused-wildcard-import)
spydrnet/parsers/verilog/tests/test_tokenizer.py:3:0: W0614: Unused import vt from wildcard import (unused-wildcard-import)
spydrnet/parsers/verilog/tests/test_tokenizer.py:3:0: W0614: Unused import partial from wildcard import (unused-wildcard-import)
spydrnet/parsers/verilog/tests/test_tokenizer.py:3:0: W0614: Unused import TokenFactory from wildcard import (unused-wildcard-import)
spydrnet/parsers/verilog/tests/test_tokenizer.py:5:0: C0411: standard import "from io import StringIO" should be placed before "from spydrnet.parsers.verilog.tokenizer import *" (wrong-import-order)
************* Module spydrnet.parsers.verilog.tests.test_token_factory
spydrnet/parsers/verilog/tests/test_token_factory.py:5:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_token_factory.py:97:0: C0301: Line too long (107/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_token_factory.py:55:12: W1401: Anomalous backslash in string: '\^'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
spydrnet/parsers/verilog/tests/test_token_factory.py:55:24: W1401: Anomalous backslash in string: '\^'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
spydrnet/parsers/verilog/tests/test_token_factory.py:55:36: W1401: Anomalous backslash in string: '\^'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
spydrnet/parsers/verilog/tests/test_token_factory.py:55:48: W1401: Anomalous backslash in string: '\^'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
spydrnet/parsers/verilog/tests/test_token_factory.py:55:60: W1401: Anomalous backslash in string: '\^'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
spydrnet/parsers/verilog/tests/test_token_factory.py:55:72: W1401: Anomalous backslash in string: '\^'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
spydrnet/parsers/verilog/tests/test_token_factory.py:55:84: W1401: Anomalous backslash in string: '\^'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
spydrnet/parsers/verilog/tests/test_token_factory.py:55:96: W1401: Anomalous backslash in string: '\^'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
spydrnet/parsers/verilog/tests/test_token_factory.py:57:13: W1401: Anomalous backslash in string: '\^'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
spydrnet/parsers/verilog/tests/test_token_factory.py:59:12: W1401: Anomalous backslash in string: '\^'. String constant might be missing an r prefix. (anomalous-backslash-in-string)
spydrnet/parsers/verilog/tests/test_token_factory.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/parsers/verilog/tests/test_token_factory.py:7:0: C0103: Constant name "very_simple" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_token_factory.py:29:0: C0103: Constant name "very_simple_multi_line" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_token_factory.py:52:0: C0103: Constant name "port_remap" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_token_factory.py:64:0: C0103: Constant name "comments" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_token_factory.py:81:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/parsers/verilog/tests/test_token_factory.py:83:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_token_factory.py:84:8: C0103: Variable name "tf" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_token_factory.py:83:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_token_factory.py:96:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_token_factory.py:99:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_token_factory.py:100:12: C0103: Variable name "s" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_token_factory.py:100:15: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_token_factory.py:100:18: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_token_factory.py:2:0: W0611: Unused spydrnet imported as sdn (unused-import)
************* Module spydrnet.parsers.verilog.tests.test_verilogParser
spydrnet/parsers/verilog/tests/test_verilogParser.py:343:9: W0511: todo add some aserts to check to make sure the number of cables and ports is still 0 (fixme)
spydrnet/parsers/verilog/tests/test_verilogParser.py:503:14: W0511: TODO (fixme)
spydrnet/parsers/verilog/tests/test_verilogParser.py:914:14: W0511: TODO not sure yet how I should deal with this. (fixme)
spydrnet/parsers/verilog/tests/test_verilogParser.py:30:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:55:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:59:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:60:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:63:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:86:0: C0301: Line too long (127/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:93:0: C0301: Line too long (121/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:115:0: C0301: Line too long (127/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:119:0: C0301: Line too long (129/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:123:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:127:0: C0301: Line too long (123/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:151:0: C0301: Line too long (127/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:155:0: C0301: Line too long (129/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:162:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:163:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:165:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:169:0: C0301: Line too long (111/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:195:0: C0301: Line too long (127/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:199:0: C0301: Line too long (129/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:206:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:207:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:209:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:214:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:225:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:226:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:254:0: C0301: Line too long (138/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:260:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:279:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:284:0: C0301: Line too long (136/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:290:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:308:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:310:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:311:0: C0301: Line too long (129/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:318:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:358:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/parsers/verilog/tests/test_verilogParser.py:359:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/parsers/verilog/tests/test_verilogParser.py:369:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/parsers/verilog/tests/test_verilogParser.py:370:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/parsers/verilog/tests/test_verilogParser.py:381:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/parsers/verilog/tests/test_verilogParser.py:382:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/parsers/verilog/tests/test_verilogParser.py:383:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:393:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/parsers/verilog/tests/test_verilogParser.py:394:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/parsers/verilog/tests/test_verilogParser.py:405:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/parsers/verilog/tests/test_verilogParser.py:406:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/parsers/verilog/tests/test_verilogParser.py:407:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:415:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:430:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:441:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:445:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:456:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:459:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:461:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:466:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:476:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:486:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:496:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:507:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:531:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:533:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:559:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:607:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:636:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:637:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:652:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:670:0: C0301: Line too long (137/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:671:0: C0301: Line too long (192/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:674:0: C0301: Line too long (125/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:676:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:690:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:692:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:709:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:761:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:773:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:824:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:839:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:850:0: C0301: Line too long (112/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:854:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:856:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:866:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:869:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:871:0: C0301: Line too long (123/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:872:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:877:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:887:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:897:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:907:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:918:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:942:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:944:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:970:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1018:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1047:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1048:0: C0301: Line too long (164/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1062:0: C0301: Line too long (127/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1066:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1083:0: C0301: Line too long (127/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1087:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1117:0: C0301: Line too long (111/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1117:0: C0301: Line too long (111/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1145:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1171:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1192:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1198:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1209:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1224:11: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1224:11: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1228:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1232:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1253:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1275:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1285:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1308:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1309:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1:0: C0302: Too many lines in module (1336/1000) (too-many-lines)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1:0: C0103: Module name "test_verilogParser" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:11:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:13:4: C0115: Missing class docstring (missing-class-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:20:8: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:23:8: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:26:8: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:31:8: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:39:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:57:15: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:61:15: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:64:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:69:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:88:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
spydrnet/parsers/verilog/tests/test_verilogParser.py:91:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:96:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:117:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
spydrnet/parsers/verilog/tests/test_verilogParser.py:125:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:130:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:153:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
spydrnet/parsers/verilog/tests/test_verilogParser.py:168:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:173:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:197:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
spydrnet/parsers/verilog/tests/test_verilogParser.py:216:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:221:8: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:232:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:237:8: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:265:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:266:8: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:274:12: C0103: Variable name "w" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:295:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:296:8: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:304:12: C0103: Variable name "w" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:324:12: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:350:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:361:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:373:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:385:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:397:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:413:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:418:8: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:422:8: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:425:8: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:413:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_verilogParser.py:435:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:442:12: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:435:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_verilogParser.py:449:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:457:12: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:456:53: W0612: Unused variable 'cable' (unused-variable)
spydrnet/parsers/verilog/tests/test_verilogParser.py:449:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_verilogParser.py:464:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:465:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:465:20: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:465:24: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:474:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:475:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:475:20: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:475:24: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:484:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:485:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:485:20: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:485:24: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:485:16: W0612: Unused variable 'c1' (unused-variable)
spydrnet/parsers/verilog/tests/test_verilogParser.py:485:20: W0612: Unused variable 'c2' (unused-variable)
spydrnet/parsers/verilog/tests/test_verilogParser.py:485:24: W0612: Unused variable 'c3' (unused-variable)
spydrnet/parsers/verilog/tests/test_verilogParser.py:494:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:495:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:495:20: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:495:24: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:495:16: W0612: Unused variable 'c1' (unused-variable)
spydrnet/parsers/verilog/tests/test_verilogParser.py:495:20: W0612: Unused variable 'c2' (unused-variable)
spydrnet/parsers/verilog/tests/test_verilogParser.py:495:24: W0612: Unused variable 'c3' (unused-variable)
spydrnet/parsers/verilog/tests/test_verilogParser.py:502:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:505:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:506:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:506:20: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:506:24: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:514:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:515:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:515:20: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:515:24: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:522:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:522:20: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:522:24: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:530:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:532:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:532:20: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:532:24: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:532:20: W0612: Unused variable 'c2' (unused-variable)
spydrnet/parsers/verilog/tests/test_verilogParser.py:532:24: W0612: Unused variable 'c3' (unused-variable)
spydrnet/parsers/verilog/tests/test_verilogParser.py:539:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:539:4: R0914: Too many local variables (16/15) (too-many-locals)
spydrnet/parsers/verilog/tests/test_verilogParser.py:540:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:540:20: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:540:24: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:590:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:590:4: R0914: Too many local variables (16/15) (too-many-locals)
spydrnet/parsers/verilog/tests/test_verilogParser.py:591:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:591:20: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:591:24: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:634:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:634:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_verilogParser.py:647:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:650:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:656:12: C0103: Variable name "wn" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:673:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
spydrnet/parsers/verilog/tests/test_verilogParser.py:681:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:684:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:705:15: C0121: Comparison 'tokenizer.has_next() == False' should be 'tokenizer.has_next() is False' if checking for the singleton value False, or 'not tokenizer.has_next()' if testing for falsiness (singleton-comparison)
spydrnet/parsers/verilog/tests/test_verilogParser.py:707:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:721:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:728:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
spydrnet/parsers/verilog/tests/test_verilogParser.py:752:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:754:12: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:756:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
spydrnet/parsers/verilog/tests/test_verilogParser.py:759:16: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:763:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:769:10: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:775:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:781:10: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:785:15: C0121: Comparison 'parser.tokenizer.has_next() == False' should be 'parser.tokenizer.has_next() is False' if checking for the singleton value False, or 'not parser.tokenizer.has_next()' if testing for falsiness (singleton-comparison)
spydrnet/parsers/verilog/tests/test_verilogParser.py:787:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:812:12: C0103: Variable name "w" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:815:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:822:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:827:8: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:831:8: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:834:8: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:822:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_verilogParser.py:844:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:851:12: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:844:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_verilogParser.py:859:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:867:12: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:866:54: W0612: Unused variable 'port' (unused-variable)
spydrnet/parsers/verilog/tests/test_verilogParser.py:859:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_verilogParser.py:875:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:876:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:876:20: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:876:24: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:885:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:886:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:886:20: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:886:24: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:895:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:896:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:896:20: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:896:24: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:896:16: W0612: Unused variable 'c1' (unused-variable)
spydrnet/parsers/verilog/tests/test_verilogParser.py:896:20: W0612: Unused variable 'c2' (unused-variable)
spydrnet/parsers/verilog/tests/test_verilogParser.py:896:24: W0612: Unused variable 'c3' (unused-variable)
spydrnet/parsers/verilog/tests/test_verilogParser.py:905:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:906:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:906:20: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:906:24: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:906:16: W0612: Unused variable 'c1' (unused-variable)
spydrnet/parsers/verilog/tests/test_verilogParser.py:906:20: W0612: Unused variable 'c2' (unused-variable)
spydrnet/parsers/verilog/tests/test_verilogParser.py:906:24: W0612: Unused variable 'c3' (unused-variable)
spydrnet/parsers/verilog/tests/test_verilogParser.py:913:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:916:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:917:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:917:20: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:917:24: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:925:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:926:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:926:20: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:926:24: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:933:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:933:20: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:933:24: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:941:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:943:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:943:20: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:943:24: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:943:20: W0612: Unused variable 'c2' (unused-variable)
spydrnet/parsers/verilog/tests/test_verilogParser.py:943:24: W0612: Unused variable 'c3' (unused-variable)
spydrnet/parsers/verilog/tests/test_verilogParser.py:950:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:950:4: R0914: Too many local variables (16/15) (too-many-locals)
spydrnet/parsers/verilog/tests/test_verilogParser.py:951:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:951:20: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:951:24: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1001:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1001:4: R0914: Too many local variables (16/15) (too-many-locals)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1002:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1002:20: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1002:24: C0103: Variable name "c3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1045:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1045:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1058:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1065:8: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1069:12: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1070:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1071:12: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1079:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1086:8: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1090:12: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1098:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1098:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1115:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1127:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1144:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1156:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1167:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1174:8: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1174:29: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1177:15: C0121: Comparison 'o_left == None' should be 'o_left is None' (singleton-comparison)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1178:15: C0121: Comparison 'o_right == None' should be 'o_right is None' (singleton-comparison)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1179:15: C0121: Comparison 'i_left == None' should be 'i_left is None' (singleton-comparison)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1180:15: C0121: Comparison 'i_right == None' should be 'i_right is None' (singleton-comparison)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1181:8: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1181:29: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1185:15: C0121: Comparison 'o_right == None' should be 'o_right is None' (singleton-comparison)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1186:15: C0121: Comparison 'i_left == None' should be 'i_left is None' (singleton-comparison)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1187:15: C0121: Comparison 'i_right == None' should be 'i_right is None' (singleton-comparison)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1193:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1200:14: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1204:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1211:14: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1238:15: C0121: Comparison 'stars0['KEEP'] == None' should be 'stars0['KEEP'] is None' (singleton-comparison)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1240:15: C0121: Comparison 'stars0['DONT_TOUCH'] == None' should be 'stars0['DONT_TOUCH'] is None' (singleton-comparison)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1250:15: C0121: Comparison 'stars2['KEEP'] == None' should be 'stars2['KEEP'] is None' (singleton-comparison)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1252:15: C0121: Comparison 'stars2['DONT_TOUCH'] == None' should be 'stars2['DONT_TOUCH'] is None' (singleton-comparison)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1260:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1278:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1279:12: C0103: Variable name "g" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1281:16: C0103: Variable name "r" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1283:16: C0103: Variable name "r" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1260:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1287:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1287:4: R0914: Too many local variables (21/15) (too-many-locals)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1311:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1313:15: C0121: Comparison 'tests[i][1] != None' should be 'tests[i][1] is not None' (singleton-comparison)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1318:15: C0121: Comparison 'tests[i][1] != None' should be 'tests[i][1] is not None' (singleton-comparison)
spydrnet/parsers/verilog/tests/test_verilogParser.py:1287:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_verilogParser.py:11:0: R0904: Too many public methods (66/20) (too-many-public-methods)
spydrnet/parsers/verilog/tests/test_verilogParser.py:8:0: W0611: Unused parsers imported from spydrnet (unused-import)
spydrnet/parsers/verilog/tests/test_verilogParser.py:9:0: W0611: Unused import os (unused-import)
spydrnet/parsers/verilog/tests/test_verilogParser.py:9:0: C0411: standard import "import os" should be placed before "import spydrnet as sdn" (wrong-import-order)
************* Module spydrnet.parsers.verilog.tests.test_verilog_tokens
spydrnet/parsers/verilog/tests/test_verilog_tokens.py:33:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/parsers/verilog/tests/test_verilog_tokens.py:35:0: C0304: Final newline missing (missing-final-newline)
spydrnet/parsers/verilog/tests/test_verilog_tokens.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/parsers/verilog/tests/test_verilog_tokens.py:7:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/parsers/verilog/tests/test_verilog_tokens.py:10:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilog_tokens.py:10:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_verilog_tokens.py:15:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilog_tokens.py:16:0: W1404: Implicit string concatenation found in list (implicit-str-concat)
spydrnet/parsers/verilog/tests/test_verilog_tokens.py:15:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_verilog_tokens.py:20:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilog_tokens.py:22:12: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilog_tokens.py:20:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_verilog_tokens.py:25:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilog_tokens.py:28:12: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
spydrnet/parsers/verilog/tests/test_verilog_tokens.py:25:4: R0201: Method could be a function (no-self-use)
spydrnet/parsers/verilog/tests/test_verilog_tokens.py:31:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/parsers/verilog/tests/test_verilog_tokens.py:34:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
spydrnet/parsers/verilog/tests/test_verilog_tokens.py:31:4: R0201: Method could be a function (no-self-use)
************* Module spydrnet.util.get_definitions
spydrnet/util/get_definitions.py:48:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_definitions.py:53:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_definitions.py:18:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/util/get_definitions.py:19:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_definitions.py:20:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/util/get_definitions.py:22:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/get_definitions.py:23:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_definitions.py:24:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_definitions.py:25:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/util/get_definitions.py:29:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_definitions.py:30:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_definitions.py:33:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_definitions.py:36:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_definitions.py:39:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_definitions.py:40:0: C0301: Line too long (112/100) (line-too-long)
spydrnet/util/get_definitions.py:41:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_definitions.py:42:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_definitions.py:45:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_definitions.py:46:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_definitions.py:58:0: C0301: Line too long (112/100) (line-too-long)
spydrnet/util/get_definitions.py:68:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_definitions.py:85:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_definitions.py:91:0: C0301: Line too long (112/100) (line-too-long)
spydrnet/util/get_definitions.py:94:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/util/get_definitions.py:95:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/util/get_definitions.py:117:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/get_definitions.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/get_definitions.py:94:0: R0913: Too many arguments (8/5) (too-many-arguments)
spydrnet/util/get_definitions.py:100:0: R0913: Too many arguments (7/5) (too-many-arguments)
spydrnet/util/get_definitions.py:100:0: R0914: Too many local variables (23/15) (too-many-locals)
spydrnet/util/get_definitions.py:103:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
spydrnet/util/get_definitions.py:103:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
spydrnet/util/get_definitions.py:103:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
spydrnet/util/get_definitions.py:103:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_definitions.py:103:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_definitions.py:198:16: C0206: Consider iterating with .items() (consider-using-dict-items)
spydrnet/util/get_definitions.py:179:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_definitions.py:100:0: R0912: Too many branches (56/12) (too-many-branches)
spydrnet/util/get_definitions.py:100:0: R0915: Too many statements (94/50) (too-many-statements)
************* Module spydrnet.util.get_cables
spydrnet/util/get_cables.py:16:14: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_cables.py:45:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_cables.py:50:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_cables.py:18:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/util/get_cables.py:19:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_cables.py:20:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/util/get_cables.py:22:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/get_cables.py:23:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_cables.py:24:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_cables.py:25:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/util/get_cables.py:29:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_cables.py:30:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_cables.py:33:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_cables.py:36:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_cables.py:39:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_cables.py:42:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_cables.py:43:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_cables.py:55:0: C0301: Line too long (112/100) (line-too-long)
spydrnet/util/get_cables.py:82:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_cables.py:88:0: C0301: Line too long (107/100) (line-too-long)
spydrnet/util/get_cables.py:91:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/util/get_cables.py:92:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/get_cables.py:115:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/util/get_cables.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/get_cables.py:91:0: R0913: Too many arguments (8/5) (too-many-arguments)
spydrnet/util/get_cables.py:97:0: R0913: Too many arguments (7/5) (too-many-arguments)
spydrnet/util/get_cables.py:97:0: R0914: Too many local variables (31/15) (too-many-locals)
spydrnet/util/get_cables.py:101:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
spydrnet/util/get_cables.py:101:4: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
spydrnet/util/get_cables.py:101:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_cables.py:101:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
spydrnet/util/get_cables.py:233:16: C0206: Consider iterating with .items() (consider-using-dict-items)
spydrnet/util/get_cables.py:214:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_cables.py:97:0: R0912: Too many branches (73/12) (too-many-branches)
spydrnet/util/get_cables.py:97:0: R0915: Too many statements (128/50) (too-many-statements)
************* Module spydrnet.util.patterns
spydrnet/util/patterns.py:27:0: C0304: Final newline missing (missing-final-newline)
spydrnet/util/patterns.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/patterns.py:6:4: R1705: Unnecessary "else" after "return" (no-else-return)
spydrnet/util/patterns.py:15:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
************* Module spydrnet.util.library
spydrnet/util/library.py:55:0: C0301: Line too long (112/100) (line-too-long)
spydrnet/util/library.py:66:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/util/library.py:79:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/library.py:113:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/util/library.py:124:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/library.py:143:0: C0301: Line too long (138/100) (line-too-long)
spydrnet/util/library.py:144:0: C0301: Line too long (129/100) (line-too-long)
spydrnet/util/library.py:149:128: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/library.py:149:0: C0301: Line too long (128/100) (line-too-long)
spydrnet/util/library.py:158:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/library.py:171:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/library.py:186:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/util/library.py:187:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/library.py:188:0: C0301: Line too long (121/100) (line-too-long)
spydrnet/util/library.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/library.py:31:11: C0121: Comparison 'name != None' should be 'name is not None' (singleton-comparison)
spydrnet/util/library.py:33:11: C0121: Comparison 'properties != None' should be 'properties is not None' (singleton-comparison)
spydrnet/util/library.py:91:8: W0212: Access to a protected member _call_library_add_definition of a client class (protected-access)
spydrnet/util/library.py:96:8: W0212: Access to a protected member _library of a client class (protected-access)
spydrnet/util/library.py:138:8: W0212: Access to a protected member _call_library_remove_definition of a client class (protected-access)
spydrnet/util/library.py:139:8: W0212: Access to a protected member _library of a client class (protected-access)
spydrnet/util/library.py:144:8: W0107: Unnecessary pass statement (unnecessary-pass)
spydrnet/util/library.py:146:12: W0212: Access to a protected member _clone_rip_and_replace of a client class (protected-access)
spydrnet/util/library.py:153:23: W0212: Access to a protected member _references of a client class (protected-access)
spydrnet/util/library.py:156:28: W0212: Access to a protected member _children of a client class (protected-access)
spydrnet/util/library.py:157:16: W0212: Access to a protected member _references of a client class (protected-access)
spydrnet/util/library.py:157:16: W0212: Access to a protected member _reference of a client class (protected-access)
spydrnet/util/library.py:159:12: W0212: Access to a protected member _references of a client class (protected-access)
spydrnet/util/library.py:167:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/util/library.py:169:8: W0212: Access to a protected member _netlist of a client class (protected-access)
spydrnet/util/library.py:170:8: W0212: Access to a protected member _data of a client class (protected-access)
spydrnet/util/library.py:174:35: W0212: Access to a protected member _clone of a client class (protected-access)
spydrnet/util/library.py:175:8: W0212: Access to a protected member _definitions of a client class (protected-access)
spydrnet/util/library.py:177:26: W0212: Access to a protected member _definitions of a client class (protected-access)
spydrnet/util/library.py:178:12: W0212: Access to a protected member _library of a client class (protected-access)
spydrnet/util/library.py:179:12: W0212: Access to a protected member _clone_rip_and_replace of a client class (protected-access)
spydrnet/util/library.py:192:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/util/library.py:193:8: W0212: Access to a protected member _clone_rip of a client class (protected-access)
spydrnet/util/library.py:6:0: W0611: Unused copy imported from copy (unused-import)
spydrnet/util/library.py:6:0: W0611: Unused error imported from copy (unused-import)
spydrnet/util/library.py:6:0: C0411: standard import "from copy import deepcopy, copy, error" should be placed before "from spydrnet.ir.first_class_element import FirstClassElement" (wrong-import-order)
************* Module spydrnet.util.get_hports
spydrnet/util/get_hports.py:1:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_hports.py:36:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_hports.py:41:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_hports.py:15:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/util/get_hports.py:16:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_hports.py:17:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/get_hports.py:19:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/get_hports.py:20:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_hports.py:23:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/util/get_hports.py:26:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_hports.py:27:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_hports.py:30:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_hports.py:33:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_hports.py:34:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_hports.py:40:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/util/get_hports.py:46:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/util/get_hports.py:64:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_hports.py:65:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/util/get_hports.py:76:0: C0301: Line too long (111/100) (line-too-long)
spydrnet/util/get_hports.py:108:0: C0325: Unnecessary parens after 'yield' keyword (superfluous-parens)
spydrnet/util/get_hports.py:118:0: C0325: Unnecessary parens after 'yield' keyword (superfluous-parens)
spydrnet/util/get_hports.py:124:0: W0311: Bad indentation. Found 20 spaces, expected 16 (bad-indentation)
spydrnet/util/get_hports.py:125:0: W0311: Bad indentation. Found 20 spaces, expected 16 (bad-indentation)
spydrnet/util/get_hports.py:126:0: W0311: Bad indentation. Found 20 spaces, expected 16 (bad-indentation)
spydrnet/util/get_hports.py:127:0: W0311: Bad indentation. Found 24 spaces, expected 20 (bad-indentation)
spydrnet/util/get_hports.py:128:0: W0311: Bad indentation. Found 28 spaces, expected 24 (bad-indentation)
spydrnet/util/get_hports.py:129:0: W0311: Bad indentation. Found 28 spaces, expected 24 (bad-indentation)
spydrnet/util/get_hports.py:130:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/util/get_hports.py:130:0: W0311: Bad indentation. Found 32 spaces, expected 28 (bad-indentation)
spydrnet/util/get_hports.py:131:0: W0311: Bad indentation. Found 32 spaces, expected 28 (bad-indentation)
spydrnet/util/get_hports.py:132:0: W0311: Bad indentation. Found 32 spaces, expected 28 (bad-indentation)
spydrnet/util/get_hports.py:133:0: W0311: Bad indentation. Found 36 spaces, expected 32 (bad-indentation)
spydrnet/util/get_hports.py:134:0: W0311: Bad indentation. Found 36 spaces, expected 32 (bad-indentation)
spydrnet/util/get_hports.py:135:0: W0311: Bad indentation. Found 40 spaces, expected 36 (bad-indentation)
spydrnet/util/get_hports.py:136:0: W0311: Bad indentation. Found 40 spaces, expected 36 (bad-indentation)
spydrnet/util/get_hports.py:137:0: W0311: Bad indentation. Found 44 spaces, expected 40 (bad-indentation)
spydrnet/util/get_hports.py:138:0: W0311: Bad indentation. Found 44 spaces, expected 40 (bad-indentation)
spydrnet/util/get_hports.py:139:0: W0311: Bad indentation. Found 24 spaces, expected 20 (bad-indentation)
spydrnet/util/get_hports.py:140:0: W0311: Bad indentation. Found 28 spaces, expected 24 (bad-indentation)
spydrnet/util/get_hports.py:141:0: W0311: Bad indentation. Found 28 spaces, expected 24 (bad-indentation)
spydrnet/util/get_hports.py:142:0: W0311: Bad indentation. Found 32 spaces, expected 28 (bad-indentation)
spydrnet/util/get_hports.py:143:0: W0311: Bad indentation. Found 32 spaces, expected 28 (bad-indentation)
spydrnet/util/get_hports.py:144:0: W0311: Bad indentation. Found 36 spaces, expected 32 (bad-indentation)
spydrnet/util/get_hports.py:145:0: W0311: Bad indentation. Found 36 spaces, expected 32 (bad-indentation)
spydrnet/util/get_hports.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/get_hports.py:75:0: R0913: Too many arguments (6/5) (too-many-arguments)
spydrnet/util/get_hports.py:80:0: R0914: Too many local variables (33/15) (too-many-locals)
spydrnet/util/get_hports.py:85:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
spydrnet/util/get_hports.py:85:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
spydrnet/util/get_hports.py:85:4: R1702: Too many nested blocks (9/5) (too-many-nested-blocks)
spydrnet/util/get_hports.py:85:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
spydrnet/util/get_hports.py:167:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_hports.py:178:16: C0206: Consider iterating with .items() (consider-using-dict-items)
spydrnet/util/get_hports.py:167:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
spydrnet/util/get_hports.py:80:0: R0912: Too many branches (45/12) (too-many-branches)
spydrnet/util/get_hports.py:80:0: R0915: Too many statements (91/50) (too-many-statements)
spydrnet/util/get_hports.py:190:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_hports.py:190:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
************* Module spydrnet.util.get_hcables
spydrnet/util/get_hcables.py:1:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_hcables.py:40:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_hcables.py:45:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_hcables.py:16:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/util/get_hcables.py:17:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_hcables.py:18:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/get_hcables.py:20:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/get_hcables.py:21:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_hcables.py:24:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_hcables.py:25:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_hcables.py:28:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_hcables.py:31:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_hcables.py:34:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_hcables.py:37:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_hcables.py:38:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_hcables.py:44:0: C0301: Line too long (107/100) (line-too-long)
spydrnet/util/get_hcables.py:50:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/get_hcables.py:75:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_hcables.py:76:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/util/get_hcables.py:83:0: C0301: Line too long (103/100) (line-too-long)
spydrnet/util/get_hcables.py:87:0: C0301: Line too long (123/100) (line-too-long)
spydrnet/util/get_hcables.py:121:0: C0325: Unnecessary parens after 'yield' keyword (superfluous-parens)
spydrnet/util/get_hcables.py:153:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/util/get_hcables.py:170:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/get_hcables.py:288:0: W0311: Bad indentation. Found 8 spaces, expected 4 (bad-indentation)
spydrnet/util/get_hcables.py:289:0: W0311: Bad indentation. Found 8 spaces, expected 4 (bad-indentation)
spydrnet/util/get_hcables.py:290:0: W0311: Bad indentation. Found 12 spaces, expected 8 (bad-indentation)
spydrnet/util/get_hcables.py:291:0: W0311: Bad indentation. Found 12 spaces, expected 8 (bad-indentation)
spydrnet/util/get_hcables.py:292:0: W0311: Bad indentation. Found 16 spaces, expected 12 (bad-indentation)
spydrnet/util/get_hcables.py:293:0: W0311: Bad indentation. Found 16 spaces, expected 12 (bad-indentation)
spydrnet/util/get_hcables.py:294:0: W0311: Bad indentation. Found 16 spaces, expected 12 (bad-indentation)
spydrnet/util/get_hcables.py:295:0: W0311: Bad indentation. Found 16 spaces, expected 12 (bad-indentation)
spydrnet/util/get_hcables.py:296:0: W0311: Bad indentation. Found 16 spaces, expected 12 (bad-indentation)
spydrnet/util/get_hcables.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/get_hcables.py:86:0: R0913: Too many arguments (7/5) (too-many-arguments)
spydrnet/util/get_hcables.py:91:0: R0913: Too many arguments (6/5) (too-many-arguments)
spydrnet/util/get_hcables.py:91:0: R0914: Too many local variables (44/15) (too-many-locals)
spydrnet/util/get_hcables.py:97:4: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
spydrnet/util/get_hcables.py:97:4: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
spydrnet/util/get_hcables.py:97:4: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
spydrnet/util/get_hcables.py:97:4: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
spydrnet/util/get_hcables.py:97:4: R1702: Too many nested blocks (10/5) (too-many-nested-blocks)
spydrnet/util/get_hcables.py:97:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_hcables.py:217:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_hcables.py:228:16: C0206: Consider iterating with .items() (consider-using-dict-items)
spydrnet/util/get_hcables.py:217:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
spydrnet/util/get_hcables.py:91:0: R0912: Too many branches (59/12) (too-many-branches)
spydrnet/util/get_hcables.py:91:0: R0915: Too many statements (124/50) (too-many-statements)
spydrnet/util/get_hcables.py:240:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_hcables.py:240:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_hcables.py:287:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
spydrnet/util/get_hcables.py:299:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
************* Module spydrnet.util.get_hpins
spydrnet/util/get_hpins.py:1:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_hpins.py:36:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_hpins.py:41:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_hpins.py:15:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/util/get_hpins.py:16:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_hpins.py:17:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/get_hpins.py:19:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/get_hpins.py:20:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_hpins.py:23:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/util/get_hpins.py:26:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_hpins.py:27:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_hpins.py:30:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_hpins.py:33:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_hpins.py:34:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_hpins.py:40:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/util/get_hpins.py:46:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/util/get_hpins.py:64:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_hpins.py:65:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/util/get_hpins.py:76:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/util/get_hpins.py:110:0: C0325: Unnecessary parens after 'yield' keyword (superfluous-parens)
spydrnet/util/get_hpins.py:122:0: C0325: Unnecessary parens after 'yield' keyword (superfluous-parens)
spydrnet/util/get_hpins.py:128:0: W0311: Bad indentation. Found 20 spaces, expected 16 (bad-indentation)
spydrnet/util/get_hpins.py:129:0: W0311: Bad indentation. Found 20 spaces, expected 16 (bad-indentation)
spydrnet/util/get_hpins.py:130:0: W0311: Bad indentation. Found 20 spaces, expected 16 (bad-indentation)
spydrnet/util/get_hpins.py:131:0: W0311: Bad indentation. Found 24 spaces, expected 20 (bad-indentation)
spydrnet/util/get_hpins.py:132:0: W0311: Bad indentation. Found 28 spaces, expected 24 (bad-indentation)
spydrnet/util/get_hpins.py:133:0: W0311: Bad indentation. Found 28 spaces, expected 24 (bad-indentation)
spydrnet/util/get_hpins.py:134:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/util/get_hpins.py:134:0: W0311: Bad indentation. Found 32 spaces, expected 28 (bad-indentation)
spydrnet/util/get_hpins.py:135:0: W0311: Bad indentation. Found 32 spaces, expected 28 (bad-indentation)
spydrnet/util/get_hpins.py:136:0: W0311: Bad indentation. Found 32 spaces, expected 28 (bad-indentation)
spydrnet/util/get_hpins.py:137:0: W0311: Bad indentation. Found 36 spaces, expected 32 (bad-indentation)
spydrnet/util/get_hpins.py:138:0: W0311: Bad indentation. Found 36 spaces, expected 32 (bad-indentation)
spydrnet/util/get_hpins.py:139:0: W0311: Bad indentation. Found 40 spaces, expected 36 (bad-indentation)
spydrnet/util/get_hpins.py:140:0: W0311: Bad indentation. Found 40 spaces, expected 36 (bad-indentation)
spydrnet/util/get_hpins.py:141:0: W0311: Bad indentation. Found 40 spaces, expected 36 (bad-indentation)
spydrnet/util/get_hpins.py:142:0: W0311: Bad indentation. Found 44 spaces, expected 40 (bad-indentation)
spydrnet/util/get_hpins.py:143:0: W0311: Bad indentation. Found 44 spaces, expected 40 (bad-indentation)
spydrnet/util/get_hpins.py:144:0: W0311: Bad indentation. Found 24 spaces, expected 20 (bad-indentation)
spydrnet/util/get_hpins.py:145:0: W0311: Bad indentation. Found 28 spaces, expected 24 (bad-indentation)
spydrnet/util/get_hpins.py:146:0: W0311: Bad indentation. Found 28 spaces, expected 24 (bad-indentation)
spydrnet/util/get_hpins.py:147:0: W0311: Bad indentation. Found 32 spaces, expected 28 (bad-indentation)
spydrnet/util/get_hpins.py:148:0: W0311: Bad indentation. Found 32 spaces, expected 28 (bad-indentation)
spydrnet/util/get_hpins.py:149:0: W0311: Bad indentation. Found 32 spaces, expected 28 (bad-indentation)
spydrnet/util/get_hpins.py:150:0: W0311: Bad indentation. Found 36 spaces, expected 32 (bad-indentation)
spydrnet/util/get_hpins.py:151:0: W0311: Bad indentation. Found 36 spaces, expected 32 (bad-indentation)
spydrnet/util/get_hpins.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/get_hpins.py:75:0: R0913: Too many arguments (6/5) (too-many-arguments)
spydrnet/util/get_hpins.py:80:0: R0914: Too many local variables (35/15) (too-many-locals)
spydrnet/util/get_hpins.py:85:4: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
spydrnet/util/get_hpins.py:85:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
spydrnet/util/get_hpins.py:85:4: R1702: Too many nested blocks (9/5) (too-many-nested-blocks)
spydrnet/util/get_hpins.py:85:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
spydrnet/util/get_hpins.py:172:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_hpins.py:183:16: C0206: Consider iterating with .items() (consider-using-dict-items)
spydrnet/util/get_hpins.py:172:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
spydrnet/util/get_hpins.py:80:0: R0912: Too many branches (47/12) (too-many-branches)
spydrnet/util/get_hpins.py:80:0: R0915: Too many statements (94/50) (too-many-statements)
spydrnet/util/get_hpins.py:192:0: R0914: Too many local variables (18/15) (too-many-locals)
spydrnet/util/get_hpins.py:195:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
spydrnet/util/get_hpins.py:195:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_hpins.py:192:0: R0912: Too many branches (13/12) (too-many-branches)
************* Module spydrnet.util.get_netlists
spydrnet/util/get_netlists.py:1:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_netlists.py:12:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_netlists.py:19:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_netlists.py:38:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_netlists.py:43:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_netlists.py:16:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/util/get_netlists.py:17:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_netlists.py:18:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/util/get_netlists.py:21:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/get_netlists.py:22:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_netlists.py:23:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_netlists.py:24:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/util/get_netlists.py:28:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_netlists.py:29:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_netlists.py:32:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_netlists.py:35:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_netlists.py:36:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_netlists.py:48:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/get_netlists.py:66:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/get_netlists.py:76:0: C0301: Line too long (107/100) (line-too-long)
spydrnet/util/get_netlists.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/get_netlists.py:75:0: R0913: Too many arguments (6/5) (too-many-arguments)
spydrnet/util/get_netlists.py:80:0: R0914: Too many local variables (22/15) (too-many-locals)
spydrnet/util/get_netlists.py:80:0: R0912: Too many branches (31/12) (too-many-branches)
spydrnet/util/get_netlists.py:80:0: R0915: Too many statements (62/50) (too-many-statements)
************* Module spydrnet.util.get_hinstances
spydrnet/util/get_hinstances.py:1:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_hinstances.py:36:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_hinstances.py:41:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_hinstances.py:15:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/util/get_hinstances.py:16:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_hinstances.py:17:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/get_hinstances.py:19:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/get_hinstances.py:20:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_hinstances.py:23:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_hinstances.py:24:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_hinstances.py:27:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_hinstances.py:30:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_hinstances.py:33:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_hinstances.py:34:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_hinstances.py:40:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/util/get_hinstances.py:46:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/util/get_hinstances.py:63:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_hinstances.py:64:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/util/get_hinstances.py:75:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/get_hinstances.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/get_hinstances.py:74:0: R0913: Too many arguments (6/5) (too-many-arguments)
spydrnet/util/get_hinstances.py:79:0: R0914: Too many local variables (23/15) (too-many-locals)
spydrnet/util/get_hinstances.py:145:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_hinstances.py:156:16: C0206: Consider iterating with .items() (consider-using-dict-items)
spydrnet/util/get_hinstances.py:145:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
spydrnet/util/get_hinstances.py:79:0: R0912: Too many branches (39/12) (too-many-branches)
spydrnet/util/get_hinstances.py:79:0: R0915: Too many statements (74/50) (too-many-statements)
spydrnet/util/get_hinstances.py:169:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
************* Module spydrnet.util
spydrnet/util/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module spydrnet.util.get_ports
spydrnet/util/get_ports.py:1:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_ports.py:38:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_ports.py:43:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_ports.py:17:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/util/get_ports.py:18:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_ports.py:19:0: C0301: Line too long (107/100) (line-too-long)
spydrnet/util/get_ports.py:21:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/get_ports.py:22:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_ports.py:23:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_ports.py:24:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/util/get_ports.py:28:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_ports.py:29:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_ports.py:32:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_ports.py:35:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_ports.py:36:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_ports.py:48:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/get_ports.py:66:0: C0301: Line too long (112/100) (line-too-long)
spydrnet/util/get_ports.py:76:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/get_ports.py:96:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/get_ports.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/get_ports.py:75:0: R0913: Too many arguments (6/5) (too-many-arguments)
spydrnet/util/get_ports.py:80:0: R0914: Too many local variables (21/15) (too-many-locals)
spydrnet/util/get_ports.py:83:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_ports.py:147:16: C0206: Consider iterating with .items() (consider-using-dict-items)
spydrnet/util/get_ports.py:127:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_ports.py:80:0: R0912: Too many branches (36/12) (too-many-branches)
spydrnet/util/get_ports.py:80:0: R0915: Too many statements (63/50) (too-many-statements)
************* Module spydrnet.util.hierarchical_reference
spydrnet/util/hierarchical_reference.py:12:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:13:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:14:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:15:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:16:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:18:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:19:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:20:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:21:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:22:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:23:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:39:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:41:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:42:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:47:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:48:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:49:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:51:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:52:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:53:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:54:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:59:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:60:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:61:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:63:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:64:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:65:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:66:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:67:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:72:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:73:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:74:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:79:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:80:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:81:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:142:0: C0301: Line too long (112/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:264:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:274:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/util/hierarchical_reference.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/hierarchical_reference.py:1:0: R0402: Use 'from spydrnet import ir' instead (consider-using-from-import)
spydrnet/util/hierarchical_reference.py:88:4: R0912: Too many branches (22/12) (too-many-branches)
spydrnet/util/hierarchical_reference.py:140:4: R0912: Too many branches (17/12) (too-many-branches)
spydrnet/util/hierarchical_reference.py:221:8: R1705: Unnecessary "else" after "return" (no-else-return)
spydrnet/util/hierarchical_reference.py:296:20: R1705: Unnecessary "else" after "return" (no-else-return)
spydrnet/util/hierarchical_reference.py:312:16: R1705: Unnecessary "else" after "return" (no-else-return)
spydrnet/util/hierarchical_reference.py:303:4: R0911: Too many return statements (18/6) (too-many-return-statements)
spydrnet/util/hierarchical_reference.py:303:4: R0912: Too many branches (24/12) (too-many-branches)
spydrnet/util/hierarchical_reference.py:2:0: C0411: standard import "import weakref" should be placed before "import spydrnet.ir as ir" (wrong-import-order)
************* Module spydrnet.util.get_hwires
spydrnet/util/get_hwires.py:1:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_hwires.py:40:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_hwires.py:45:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_hwires.py:16:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/util/get_hwires.py:17:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_hwires.py:18:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/get_hwires.py:20:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/get_hwires.py:21:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_hwires.py:24:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_hwires.py:25:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_hwires.py:28:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_hwires.py:31:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_hwires.py:34:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_hwires.py:37:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_hwires.py:38:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_hwires.py:44:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/util/get_hwires.py:50:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/get_hwires.py:75:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_hwires.py:76:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/util/get_hwires.py:83:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/util/get_hwires.py:87:0: C0301: Line too long (122/100) (line-too-long)
spydrnet/util/get_hwires.py:123:0: C0325: Unnecessary parens after 'yield' keyword (superfluous-parens)
spydrnet/util/get_hwires.py:154:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/util/get_hwires.py:172:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/get_hwires.py:173:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/util/get_hwires.py:298:0: W0311: Bad indentation. Found 8 spaces, expected 4 (bad-indentation)
spydrnet/util/get_hwires.py:299:0: W0311: Bad indentation. Found 8 spaces, expected 4 (bad-indentation)
spydrnet/util/get_hwires.py:300:0: W0311: Bad indentation. Found 12 spaces, expected 8 (bad-indentation)
spydrnet/util/get_hwires.py:301:0: W0311: Bad indentation. Found 12 spaces, expected 8 (bad-indentation)
spydrnet/util/get_hwires.py:302:0: W0311: Bad indentation. Found 16 spaces, expected 12 (bad-indentation)
spydrnet/util/get_hwires.py:303:0: W0311: Bad indentation. Found 16 spaces, expected 12 (bad-indentation)
spydrnet/util/get_hwires.py:304:0: W0311: Bad indentation. Found 16 spaces, expected 12 (bad-indentation)
spydrnet/util/get_hwires.py:305:0: W0311: Bad indentation. Found 16 spaces, expected 12 (bad-indentation)
spydrnet/util/get_hwires.py:306:0: W0311: Bad indentation. Found 16 spaces, expected 12 (bad-indentation)
spydrnet/util/get_hwires.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/get_hwires.py:86:0: R0913: Too many arguments (7/5) (too-many-arguments)
spydrnet/util/get_hwires.py:91:0: R0913: Too many arguments (6/5) (too-many-arguments)
spydrnet/util/get_hwires.py:91:0: R0914: Too many local variables (45/15) (too-many-locals)
spydrnet/util/get_hwires.py:97:4: R1702: Too many nested blocks (9/5) (too-many-nested-blocks)
spydrnet/util/get_hwires.py:97:4: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
spydrnet/util/get_hwires.py:97:4: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
spydrnet/util/get_hwires.py:97:4: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
spydrnet/util/get_hwires.py:97:4: R1702: Too many nested blocks (10/5) (too-many-nested-blocks)
spydrnet/util/get_hwires.py:97:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_hwires.py:219:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_hwires.py:230:16: C0206: Consider iterating with .items() (consider-using-dict-items)
spydrnet/util/get_hwires.py:219:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
spydrnet/util/get_hwires.py:91:0: R0912: Too many branches (60/12) (too-many-branches)
spydrnet/util/get_hwires.py:91:0: R0915: Too many statements (125/50) (too-many-statements)
spydrnet/util/get_hwires.py:239:0: R0914: Too many local variables (18/15) (too-many-locals)
spydrnet/util/get_hwires.py:242:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
spydrnet/util/get_hwires.py:242:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_hwires.py:239:0: R0912: Too many branches (13/12) (too-many-branches)
spydrnet/util/get_hwires.py:297:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
spydrnet/util/get_hwires.py:309:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
************* Module spydrnet.util.get_libraries
spydrnet/util/get_libraries.py:1:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_libraries.py:48:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_libraries.py:53:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_libraries.py:18:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/util/get_libraries.py:19:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_libraries.py:20:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/util/get_libraries.py:22:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/get_libraries.py:23:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_libraries.py:24:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_libraries.py:25:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/util/get_libraries.py:29:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_libraries.py:30:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_libraries.py:33:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_libraries.py:36:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_libraries.py:39:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_libraries.py:40:0: C0301: Line too long (112/100) (line-too-long)
spydrnet/util/get_libraries.py:41:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_libraries.py:42:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_libraries.py:45:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_libraries.py:46:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_libraries.py:58:0: C0301: Line too long (112/100) (line-too-long)
spydrnet/util/get_libraries.py:68:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_libraries.py:85:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_libraries.py:91:0: C0301: Line too long (111/100) (line-too-long)
spydrnet/util/get_libraries.py:94:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/util/get_libraries.py:95:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_libraries.py:116:0: C0301: Line too long (107/100) (line-too-long)
spydrnet/util/get_libraries.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/get_libraries.py:94:0: R0913: Too many arguments (8/5) (too-many-arguments)
spydrnet/util/get_libraries.py:100:0: R0913: Too many arguments (7/5) (too-many-arguments)
spydrnet/util/get_libraries.py:100:0: R0914: Too many local variables (26/15) (too-many-locals)
spydrnet/util/get_libraries.py:103:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_libraries.py:103:4: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
spydrnet/util/get_libraries.py:103:4: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
spydrnet/util/get_libraries.py:103:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_libraries.py:100:0: R0912: Too many branches (60/12) (too-many-branches)
spydrnet/util/get_libraries.py:100:0: R0915: Too many statements (105/50) (too-many-statements)
************* Module spydrnet.util.get_instances
spydrnet/util/get_instances.py:1:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_instances.py:48:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_instances.py:53:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_instances.py:18:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/util/get_instances.py:19:0: C0301: Line too long (121/100) (line-too-long)
spydrnet/util/get_instances.py:20:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/get_instances.py:22:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/get_instances.py:23:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_instances.py:24:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_instances.py:25:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/util/get_instances.py:29:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_instances.py:30:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_instances.py:33:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_instances.py:36:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_instances.py:37:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_instances.py:38:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/util/get_instances.py:39:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_instances.py:40:0: C0301: Line too long (111/100) (line-too-long)
spydrnet/util/get_instances.py:42:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_instances.py:45:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_instances.py:46:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_instances.py:58:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_instances.py:68:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_instances.py:85:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_instances.py:91:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/util/get_instances.py:94:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/get_instances.py:95:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_instances.py:118:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/util/get_instances.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/get_instances.py:94:0: R0913: Too many arguments (8/5) (too-many-arguments)
spydrnet/util/get_instances.py:100:0: R0913: Too many arguments (7/5) (too-many-arguments)
spydrnet/util/get_instances.py:100:0: R0914: Too many local variables (27/15) (too-many-locals)
spydrnet/util/get_instances.py:103:4: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
spydrnet/util/get_instances.py:103:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_instances.py:103:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_instances.py:100:0: R0912: Too many branches (51/12) (too-many-branches)
spydrnet/util/get_instances.py:100:0: R0915: Too many statements (91/50) (too-many-statements)
************* Module spydrnet.util.get_wires
spydrnet/util/get_wires.py:29:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_wires.py:34:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_wires.py:16:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/util/get_wires.py:17:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_wires.py:18:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/get_wires.py:20:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/get_wires.py:23:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_wires.py:26:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_wires.py:27:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_wires.py:60:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/util/get_wires.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/get_wires.py:71:0: R0914: Too many local variables (19/15) (too-many-locals)
spydrnet/util/get_wires.py:74:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_wires.py:74:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
spydrnet/util/get_wires.py:74:4: R1702: Too many nested blocks (11/5) (too-many-nested-blocks)
spydrnet/util/get_wires.py:139:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_wires.py:139:4: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
spydrnet/util/get_wires.py:139:4: R1702: Too many nested blocks (10/5) (too-many-nested-blocks)
spydrnet/util/get_wires.py:139:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
spydrnet/util/get_wires.py:139:4: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
spydrnet/util/get_wires.py:71:0: R0912: Too many branches (68/12) (too-many-branches)
spydrnet/util/get_wires.py:71:0: R0915: Too many statements (114/50) (too-many-statements)
************* Module spydrnet.util.selection
spydrnet/util/selection.py:12:0: C0304: Final newline missing (missing-final-newline)
spydrnet/util/selection.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/selection.py:3:0: C0115: Missing class docstring (missing-class-docstring)
************* Module spydrnet.util.get_pins
spydrnet/util/get_pins.py:26:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_pins.py:31:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/util/get_pins.py:16:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/util/get_pins.py:17:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/get_pins.py:18:0: C0301: Line too long (107/100) (line-too-long)
spydrnet/util/get_pins.py:20:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_pins.py:23:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/get_pins.py:24:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/util/get_pins.py:43:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/util/get_pins.py:55:0: C0301: Line too long (112/100) (line-too-long)
spydrnet/util/get_pins.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/get_pins.py:68:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
spydrnet/util/get_pins.py:66:0: R0912: Too many branches (29/12) (too-many-branches)
spydrnet/util/get_pins.py:66:0: R0915: Too many statements (54/50) (too-many-statements)
************* Module spydrnet.util.tests.test_get_wires
spydrnet/util/tests/test_get_wires.py:109:0: C0301: Line too long (103/100) (line-too-long)
spydrnet/util/tests/test_get_wires.py:124:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/util/tests/test_get_wires.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/tests/test_get_wires.py:5:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/util/tests/test_get_wires.py:7:4: R0914: Too many local variables (24/15) (too-many-locals)
spydrnet/util/tests/test_get_wires.py:36:8: W0612: Unused variable 'bottom_floating_wire' (unused-variable)
spydrnet/util/tests/test_get_wires.py:53:8: W0612: Unused variable 'middle_floating_wire' (unused-variable)
spydrnet/util/tests/test_get_wires.py:70:8: W0612: Unused variable 'top_floating_wire' (unused-variable)
spydrnet/util/tests/test_get_wires.py:7:4: R0915: Too many statements (59/50) (too-many-statements)
spydrnet/util/tests/test_get_wires.py:77:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_wires.py:87:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_wires.py:91:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_wires.py:95:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_wires.py:99:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_wires.py:103:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_wires.py:108:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_wires.py:113:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_wires.py:118:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_wires.py:123:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_wires.py:127:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_wires.py:131:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_wires.py:136:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_wires.py:143:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_wires.py:150:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_wires.py:154:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.util.tests.test_get_hcables
spydrnet/util/tests/test_get_hcables.py:248:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/util/tests/test_get_hcables.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/tests/test_get_hcables.py:5:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/util/tests/test_get_hcables.py:12:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hcables.py:17:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hcables.py:22:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hcables.py:28:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hcables.py:35:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hcables.py:44:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hcables.py:53:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hcables.py:54:8: C0415: Import outside toplevel (spydrnet.util.hierarchical_reference.HRef) (import-outside-toplevel)
spydrnet/util/tests/test_get_hcables.py:59:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hcables.py:66:8: C0415: Import outside toplevel (spydrnet.util.hierarchical_reference.HRef) (import-outside-toplevel)
spydrnet/util/tests/test_get_hcables.py:75:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hcables.py:83:8: C0415: Import outside toplevel (spydrnet.util.hierarchical_reference.HRef) (import-outside-toplevel)
spydrnet/util/tests/test_get_hcables.py:91:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hcables.py:97:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hcables.py:102:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hcables.py:108:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hcables.py:120:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hcables.py:129:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hcables.py:134:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hcables.py:138:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hcables.py:149:8: W0612: Unused variable 'middle_wire' (unused-variable)
spydrnet/util/tests/test_get_hcables.py:165:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hcables.py:165:4: R0914: Too many local variables (31/15) (too-many-locals)
spydrnet/util/tests/test_get_hcables.py:235:8: W1503: Redundant use of assertTrue with constant value 'middle/middle_cable[1]' (redundant-unittest-assert)
spydrnet/util/tests/test_get_hcables.py:190:8: W0612: Unused variable 'bottom_floating_wire' (unused-variable)
spydrnet/util/tests/test_get_hcables.py:165:4: R0915: Too many statements (73/50) (too-many-statements)
************* Module spydrnet.util.tests.test_hierarchical_reference
spydrnet/util/tests/test_hierarchical_reference.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/tests/test_hierarchical_reference.py:6:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/util/tests/test_hierarchical_reference.py:7:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_hierarchical_reference.py:45:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_hierarchical_reference.py:50:8: C0415: Import outside toplevel (weakref) (import-outside-toplevel)
spydrnet/util/tests/test_hierarchical_reference.py:55:8: C0415: Import outside toplevel (gc) (import-outside-toplevel)
spydrnet/util/tests/test_hierarchical_reference.py:66:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_hierarchical_reference.py:66:4: R0915: Too many statements (70/50) (too-many-statements)
spydrnet/util/tests/test_hierarchical_reference.py:162:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_hierarchical_reference.py:182:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_hierarchical_reference.py:188:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_hierarchical_reference.py:201:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_hierarchical_reference.py:214:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_hierarchical_reference.py:232:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.util.tests.test_get_hwires
spydrnet/util/tests/test_get_hwires.py:14:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:23:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:38:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:46:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:52:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:65:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:67:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:79:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:82:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:87:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:91:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:96:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:104:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:106:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:114:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:123:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:145:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:148:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:216:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:222:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:233:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/util/tests/test_get_hwires.py:237:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:240:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/util/tests/test_get_hwires.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/tests/test_get_hwires.py:5:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/util/tests/test_get_hwires.py:12:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hwires.py:16:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hwires.py:20:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hwires.py:25:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hwires.py:32:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hwires.py:40:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hwires.py:48:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hwires.py:49:8: C0415: Import outside toplevel (spydrnet.util.hierarchical_reference.HRef) (import-outside-toplevel)
spydrnet/util/tests/test_get_hwires.py:48:4: R0201: Method could be a function (no-self-use)
spydrnet/util/tests/test_get_hwires.py:54:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hwires.py:61:8: C0415: Import outside toplevel (spydrnet.util.hierarchical_reference.HRef) (import-outside-toplevel)
spydrnet/util/tests/test_get_hwires.py:69:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hwires.py:76:8: C0415: Import outside toplevel (spydrnet.util.hierarchical_reference.HRef) (import-outside-toplevel)
spydrnet/util/tests/test_get_hwires.py:84:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hwires.py:89:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hwires.py:93:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hwires.py:98:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hwires.py:108:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hwires.py:116:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hwires.py:121:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hwires.py:121:4: R0201: Method could be a function (no-self-use)
spydrnet/util/tests/test_get_hwires.py:125:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hwires.py:136:8: W0612: Unused variable 'middle_wire' (unused-variable)
spydrnet/util/tests/test_get_hwires.py:125:4: R0201: Method could be a function (no-self-use)
spydrnet/util/tests/test_get_hwires.py:150:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hwires.py:150:4: R0914: Too many local variables (31/15) (too-many-locals)
spydrnet/util/tests/test_get_hwires.py:220:8: W0199: Assert called on a 2-item-tuple. Did you mean 'assert x,y'? (assert-on-tuple)
spydrnet/util/tests/test_get_hwires.py:175:8: W0612: Unused variable 'bottom_floating_wire' (unused-variable)
spydrnet/util/tests/test_get_hwires.py:150:4: R0201: Method could be a function (no-self-use)
spydrnet/util/tests/test_get_hwires.py:150:4: R0915: Too many statements (73/50) (too-many-statements)
************* Module spydrnet.util.tests.test_patterns
spydrnet/util/tests/test_patterns.py:21:0: C0305: Trailing newlines (trailing-newlines)
spydrnet/util/tests/test_patterns.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/tests/test_patterns.py:5:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/util/tests/test_patterns.py:6:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_patterns.py:13:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_patterns.py:19:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.util.tests.test_get_hports
spydrnet/util/tests/test_get_hports.py:33:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/util/tests/test_get_hports.py:210:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/util/tests/test_get_hports.py:213:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/tests/test_get_hports.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/tests/test_get_hports.py:5:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/util/tests/test_get_hports.py:11:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hports.py:15:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hports.py:19:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hports.py:23:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hports.py:28:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hports.py:32:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hports.py:37:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hports.py:46:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hports.py:55:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hports.py:56:8: C0415: Import outside toplevel (spydrnet.util.hierarchical_reference.HRef) (import-outside-toplevel)
spydrnet/util/tests/test_get_hports.py:61:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hports.py:67:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hports.py:81:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hports.py:88:8: C0415: Import outside toplevel (spydrnet.util.hierarchical_reference.HRef) (import-outside-toplevel)
spydrnet/util/tests/test_get_hports.py:96:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hports.py:101:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hports.py:105:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hports.py:109:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hports.py:119:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hports.py:127:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hports.py:131:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hports.py:135:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hports.py:135:4: R0914: Too many local variables (30/15) (too-many-locals)
spydrnet/util/tests/test_get_hports.py:202:8: W1503: Redundant use of assertTrue with constant value 'clock' (redundant-unittest-assert)
spydrnet/util/tests/test_get_hports.py:161:8: W0612: Unused variable 'bottom_floating_wire' (unused-variable)
spydrnet/util/tests/test_get_hports.py:177:8: W0612: Unused variable 'middle_floating_wire' (unused-variable)
spydrnet/util/tests/test_get_hports.py:193:8: W0612: Unused variable 'top_floating_wire' (unused-variable)
spydrnet/util/tests/test_get_hports.py:135:4: R0915: Too many statements (70/50) (too-many-statements)
spydrnet/util/tests/test_get_hports.py:5:0: R0904: Too many public methods (21/20) (too-many-public-methods)
************* Module spydrnet.util.tests.test_get_instances
spydrnet/util/tests/test_get_instances.py:47:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/tests/test_get_instances.py:81:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/util/tests/test_get_instances.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/tests/test_get_instances.py:5:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/util/tests/test_get_instances.py:42:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_instances.py:52:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_instances.py:56:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_instances.py:60:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_instances.py:64:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_instances.py:68:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_instances.py:72:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_instances.py:76:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_instances.py:80:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_instances.py:85:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_instances.py:89:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_instances.py:93:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_instances.py:97:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_instances.py:101:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_instances.py:105:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_instances.py:110:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.util.tests.test_get_definitions
spydrnet/util/tests/test_get_definitions.py:81:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:94:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:96:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:99:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:101:0: C0301: Line too long (103/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:108:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:109:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:113:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:117:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:120:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:121:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:128:0: C0301: Line too long (103/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:129:0: C0301: Line too long (103/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:134:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:139:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:144:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:148:0: C0301: Line too long (103/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:152:0: C0301: Line too long (103/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:155:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:156:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:161:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:164:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:165:0: C0301: Line too long (103/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:169:0: C0301: Line too long (103/100) (line-too-long)
spydrnet/util/tests/test_get_definitions.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/tests/test_get_definitions.py:5:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/util/tests/test_get_definitions.py:7:4: R0914: Too many local variables (24/15) (too-many-locals)
spydrnet/util/tests/test_get_definitions.py:36:8: W0612: Unused variable 'bottom_floating_wire' (unused-variable)
spydrnet/util/tests/test_get_definitions.py:53:8: W0612: Unused variable 'middle_floating_wire' (unused-variable)
spydrnet/util/tests/test_get_definitions.py:69:8: W0612: Unused variable 'top_floating_wire' (unused-variable)
spydrnet/util/tests/test_get_definitions.py:7:4: R0915: Too many statements (58/50) (too-many-statements)
spydrnet/util/tests/test_get_definitions.py:76:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_definitions.py:86:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_definitions.py:93:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_definitions.py:98:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_definitions.py:103:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_definitions.py:107:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_definitions.py:111:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_definitions.py:115:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_definitions.py:119:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_definitions.py:123:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_definitions.py:127:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_definitions.py:131:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_definitions.py:136:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_definitions.py:141:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_definitions.py:146:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_definitions.py:150:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_definitions.py:154:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_definitions.py:158:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_definitions.py:163:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_definitions.py:167:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_definitions.py:5:0: R0904: Too many public methods (21/20) (too-many-public-methods)
************* Module spydrnet.util.tests.test_get_libraries
spydrnet/util/tests/test_get_libraries.py:104:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/util/tests/test_get_libraries.py:111:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/util/tests/test_get_libraries.py:112:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/util/tests/test_get_libraries.py:115:0: C0301: Line too long (111/100) (line-too-long)
spydrnet/util/tests/test_get_libraries.py:136:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/util/tests/test_get_libraries.py:147:0: C0301: Line too long (103/100) (line-too-long)
spydrnet/util/tests/test_get_libraries.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/tests/test_get_libraries.py:5:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/util/tests/test_get_libraries.py:7:4: R0914: Too many local variables (24/15) (too-many-locals)
spydrnet/util/tests/test_get_libraries.py:36:8: W0612: Unused variable 'bottom_floating_wire' (unused-variable)
spydrnet/util/tests/test_get_libraries.py:52:8: W0612: Unused variable 'middle_floating_wire' (unused-variable)
spydrnet/util/tests/test_get_libraries.py:68:8: W0612: Unused variable 'top_floating_wire' (unused-variable)
spydrnet/util/tests/test_get_libraries.py:7:4: R0915: Too many statements (57/50) (too-many-statements)
spydrnet/util/tests/test_get_libraries.py:75:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_libraries.py:85:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_libraries.py:92:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_libraries.py:97:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_libraries.py:102:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_libraries.py:106:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_libraries.py:110:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_libraries.py:114:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_libraries.py:118:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_libraries.py:123:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_libraries.py:128:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_libraries.py:133:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_libraries.py:138:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_libraries.py:142:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_libraries.py:146:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_libraries.py:150:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_libraries.py:155:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_libraries.py:159:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.util.tests.test_get_hinstances
spydrnet/util/tests/test_get_hinstances.py:20:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/util/tests/test_get_hinstances.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/tests/test_get_hinstances.py:5:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/util/tests/test_get_hinstances.py:11:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hinstances.py:15:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hinstances.py:19:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hinstances.py:24:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hinstances.py:32:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hinstances.py:40:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hinstances.py:41:8: C0415: Import outside toplevel (spydrnet.util.hierarchical_reference.HRef) (import-outside-toplevel)
spydrnet/util/tests/test_get_hinstances.py:46:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hinstances.py:53:8: C0415: Import outside toplevel (spydrnet.util.hierarchical_reference.HRef) (import-outside-toplevel)
spydrnet/util/tests/test_get_hinstances.py:61:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hinstances.py:68:8: C0415: Import outside toplevel (spydrnet.util.hierarchical_reference.HRef) (import-outside-toplevel)
spydrnet/util/tests/test_get_hinstances.py:76:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hinstances.py:81:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hinstances.py:85:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hinstances.py:97:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hinstances.py:105:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hinstances.py:109:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hinstances.py:129:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.util.tests.test_get_netlists
spydrnet/util/tests/test_get_netlists.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/tests/test_get_netlists.py:5:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/util/tests/test_get_netlists.py:6:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_netlists.py:15:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_netlists.py:22:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.util.tests.test_get_pins
spydrnet/util/tests/test_get_pins.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/tests/test_get_pins.py:5:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/util/tests/test_get_pins.py:6:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_pins.py:16:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_pins.py:29:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_pins.py:39:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_pins.py:49:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_pins.py:66:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.util.tests.test_get_ports
spydrnet/util/tests/test_get_ports.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/tests/test_get_ports.py:5:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/util/tests/test_get_ports.py:6:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_ports.py:15:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_ports.py:24:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_ports.py:33:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_ports.py:43:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_ports.py:54:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_ports.py:60:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_ports.py:69:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_ports.py:83:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_ports.py:100:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.util.tests.test_get_hpins
spydrnet/util/tests/test_get_hpins.py:33:0: C0301: Line too long (112/100) (line-too-long)
spydrnet/util/tests/test_get_hpins.py:210:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/util/tests/test_get_hpins.py:213:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/util/tests/test_get_hpins.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/tests/test_get_hpins.py:5:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/util/tests/test_get_hpins.py:11:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hpins.py:15:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hpins.py:19:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hpins.py:23:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hpins.py:28:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hpins.py:32:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hpins.py:37:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hpins.py:46:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hpins.py:55:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hpins.py:56:8: C0415: Import outside toplevel (spydrnet.util.hierarchical_reference.HRef) (import-outside-toplevel)
spydrnet/util/tests/test_get_hpins.py:61:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hpins.py:67:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hpins.py:81:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hpins.py:88:8: C0415: Import outside toplevel (spydrnet.util.hierarchical_reference.HRef) (import-outside-toplevel)
spydrnet/util/tests/test_get_hpins.py:96:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hpins.py:101:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hpins.py:105:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hpins.py:109:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hpins.py:119:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hpins.py:127:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hpins.py:131:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hpins.py:135:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_hpins.py:135:4: R0914: Too many local variables (30/15) (too-many-locals)
spydrnet/util/tests/test_get_hpins.py:202:8: W1503: Redundant use of assertTrue with constant value 'clock' (redundant-unittest-assert)
spydrnet/util/tests/test_get_hpins.py:161:8: W0612: Unused variable 'bottom_floating_wire' (unused-variable)
spydrnet/util/tests/test_get_hpins.py:177:8: W0612: Unused variable 'middle_floating_wire' (unused-variable)
spydrnet/util/tests/test_get_hpins.py:193:8: W0612: Unused variable 'top_floating_wire' (unused-variable)
spydrnet/util/tests/test_get_hpins.py:135:4: R0915: Too many statements (70/50) (too-many-statements)
spydrnet/util/tests/test_get_hpins.py:5:0: R0904: Too many public methods (21/20) (too-many-public-methods)
************* Module spydrnet.util.tests.test_get_cables
spydrnet/util/tests/test_get_cables.py:82:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/util/tests/test_get_cables.py:146:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/util/tests/test_get_cables.py:151:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/util/tests/test_get_cables.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/util/tests/test_get_cables.py:5:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/util/tests/test_get_cables.py:7:4: R0914: Too many local variables (24/15) (too-many-locals)
spydrnet/util/tests/test_get_cables.py:36:8: W0612: Unused variable 'bottom_floating_wire' (unused-variable)
spydrnet/util/tests/test_get_cables.py:53:8: W0612: Unused variable 'middle_floating_wire' (unused-variable)
spydrnet/util/tests/test_get_cables.py:70:8: W0612: Unused variable 'top_floating_wire' (unused-variable)
spydrnet/util/tests/test_get_cables.py:7:4: R0915: Too many statements (59/50) (too-many-statements)
spydrnet/util/tests/test_get_cables.py:77:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_cables.py:87:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_cables.py:94:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_cables.py:104:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_cables.py:115:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_cables.py:120:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_cables.py:125:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_cables.py:130:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_cables.py:136:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_cables.py:140:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_cables.py:145:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_cables.py:150:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/util/tests/test_get_cables.py:154:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.ir.port
spydrnet/ir/port.py:16:0: C0301: Line too long (130/100) (line-too-long)
spydrnet/ir/port.py:32:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/ir/port.py:40:0: C0301: Line too long (128/100) (line-too-long)
spydrnet/ir/port.py:41:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/ir/port.py:43:0: C0301: Line too long (103/100) (line-too-long)
spydrnet/ir/port.py:89:0: C0301: Line too long (289/100) (line-too-long)
spydrnet/ir/port.py:115:0: C0301: Line too long (112/100) (line-too-long)
spydrnet/ir/port.py:116:0: C0301: Line too long (121/100) (line-too-long)
spydrnet/ir/port.py:127:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/ir/port.py:178:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/ir/port.py:190:53: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/port.py:204:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/ir/port.py:205:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/ir/port.py:211:41: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/port.py:226:0: C0301: Line too long (138/100) (line-too-long)
spydrnet/ir/port.py:281:0: C0304: Final newline missing (missing-final-newline)
spydrnet/ir/port.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/port.py:32:4: R0913: Too many arguments (7/5) (too-many-arguments)
spydrnet/ir/port.py:50:11: C0121: Comparison 'name != None' should be 'name is not None' (singleton-comparison)
spydrnet/ir/port.py:64:11: C0121: Comparison 'properties != None' should be 'properties is not None' (singleton-comparison)
spydrnet/ir/port.py:152:16: W0212: Access to a protected member _pins of a client class (protected-access)
spydrnet/ir/port.py:168:8: W0212: Access to a protected member _call_port_add_pin of a client class (protected-access)
spydrnet/ir/port.py:173:8: W0212: Access to a protected member _port of a client class (protected-access)
spydrnet/ir/port.py:213:8: W0212: Access to a protected member _call_port_remove_pin of a client class (protected-access)
spydrnet/ir/port.py:220:20: W0212: Access to a protected member _pins of a client class (protected-access)
spydrnet/ir/port.py:221:16: W0212: Access to a protected member _instance of a client class (protected-access)
spydrnet/ir/port.py:222:16: W0212: Access to a protected member _inner_pin of a client class (protected-access)
spydrnet/ir/port.py:223:8: W0212: Access to a protected member _port of a client class (protected-access)
spydrnet/ir/port.py:227:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/port.py:228:12: W0212: Access to a protected member _clone_rip_and_replace of a client class (protected-access)
spydrnet/ir/port.py:234:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/port.py:235:12: W0212: Access to a protected member _clone_rip of a client class (protected-access)
spydrnet/ir/port.py:244:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/port.py:246:8: W0212: Access to a protected member _direction of a client class (protected-access)
spydrnet/ir/port.py:248:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/port.py:249:28: W0212: Access to a protected member _clone of a client class (protected-access)
spydrnet/ir/port.py:250:8: W0212: Access to a protected member _pins of a client class (protected-access)
spydrnet/ir/port.py:251:8: W0212: Access to a protected member _definition of a client class (protected-access)
spydrnet/ir/port.py:252:8: W0212: Access to a protected member _is_downto of a client class (protected-access)
spydrnet/ir/port.py:253:8: W0212: Access to a protected member _is_scalar of a client class (protected-access)
spydrnet/ir/port.py:254:8: W0212: Access to a protected member _lower_index of a client class (protected-access)
spydrnet/ir/port.py:255:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/port.py:255:17: W0212: Access to a protected member _pins of a client class (protected-access)
spydrnet/ir/port.py:256:12: W0212: Access to a protected member _port of a client class (protected-access)
spydrnet/ir/port.py:257:8: W0212: Access to a protected member _data of a client class (protected-access)
spydrnet/ir/port.py:271:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/port.py:272:8: W0212: Access to a protected member _clone_rip of a client class (protected-access)
spydrnet/ir/port.py:7:0: W0611: Unused copy imported from copy (unused-import)
spydrnet/ir/port.py:7:0: W0611: Unused error imported from copy (unused-import)
spydrnet/ir/port.py:7:0: C0411: standard import "from copy import deepcopy, copy, error" should be placed before "from spydrnet.ir.bundle import Bundle" (wrong-import-order)
spydrnet/ir/port.py:9:0: C0411: standard import "from enum import Enum" should be placed before "from spydrnet.ir.bundle import Bundle" (wrong-import-order)
************* Module spydrnet.ir.pin
spydrnet/ir/pin.py:15:0: C0301: Line too long (107/100) (line-too-long)
spydrnet/ir/pin.py:27:0: C0304: Final newline missing (missing-final-newline)
spydrnet/ir/pin.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module spydrnet.ir.bundle
spydrnet/ir/bundle.py:21:58: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/bundle.py:29:47: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/bundle.py:51:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/ir/bundle.py:59:74: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/bundle.py:73:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/ir/bundle.py:74:0: C0301: Line too long (112/100) (line-too-long)
spydrnet/ir/bundle.py:75:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/ir/bundle.py:80:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/ir/bundle.py:92:52: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/bundle.py:100:52: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/bundle.py:107:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/ir/bundle.py:119:57: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/bundle.py:128:44: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/bundle.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/bundle.py:84:8: R1720: Unnecessary "else" after "raise" (no-else-raise)
spydrnet/ir/bundle.py:111:8: R1720: Unnecessary "else" after "raise" (no-else-raise)
************* Module spydrnet.ir.instance
spydrnet/ir/instance.py:11:48: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/instance.py:14:0: C0301: Line too long (166/100) (line-too-long)
spydrnet/ir/instance.py:17:0: C0301: Line too long (103/100) (line-too-long)
spydrnet/ir/instance.py:21:0: C0301: Line too long (170/100) (line-too-long)
spydrnet/ir/instance.py:86:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/ir/instance.py:87:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/ir/instance.py:88:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/ir/instance.py:118:61: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/instance.py:126:56: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/instance.py:128:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/ir/instance.py:137:60: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/instance.py:139:0: C0301: Line too long (137/100) (line-too-long)
spydrnet/ir/instance.py:168:0: C0301: Line too long (125/100) (line-too-long)
spydrnet/ir/instance.py:171:0: C0301: Line too long (112/100) (line-too-long)
spydrnet/ir/instance.py:181:78: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/instance.py:182:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/ir/instance.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/instance.py:40:11: C0121: Comparison 'name != None' should be 'name is not None' (singleton-comparison)
spydrnet/ir/instance.py:42:11: C0121: Comparison 'properties != None' should be 'properties is not None' (singleton-comparison)
spydrnet/ir/instance.py:53:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/instance.py:53:4: R0201: Method could be a function (no-self-use)
spydrnet/ir/instance.py:72:8: W0212: Access to a protected member _call_instance_reference of a client class (protected-access)
spydrnet/ir/instance.py:79:20: W0212: Access to a protected member _instance of a client class (protected-access)
spydrnet/ir/instance.py:80:20: W0212: Access to a protected member _inner_pin of a client class (protected-access)
spydrnet/ir/instance.py:83:16: W0212: Access to a protected member _references of a client class (protected-access)
spydrnet/ir/instance.py:89:16: W0212: Access to a protected member _references of a client class (protected-access)
spydrnet/ir/instance.py:93:24: W0212: Access to a protected member _inner_pin of a client class (protected-access)
spydrnet/ir/instance.py:100:12: W0212: Access to a protected member _references of a client class (protected-access)
spydrnet/ir/instance.py:108:8: C0415: Import outside toplevel (spydrnet.util.get_ports.get_ports) (import-outside-toplevel)
spydrnet/ir/instance.py:122:12: C0103: Variable name "op" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/instance.py:123:12: W0212: Access to a protected member _clone_rip_and_replace of a client class (protected-access)
spydrnet/ir/instance.py:132:12: C0103: Variable name "ip" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/instance.py:132:16: C0103: Variable name "op" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/instance.py:141:12: C0103: Variable name "op" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/instance.py:142:12: W0212: Access to a protected member _wire of a client class (protected-access)
spydrnet/ir/instance.py:143:8: W0212: Access to a protected member _references of a client class (protected-access)
spydrnet/ir/instance.py:151:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/instance.py:153:8: W0212: Access to a protected member _parent of a client class (protected-access)
spydrnet/ir/instance.py:155:28: W0212: Access to a protected member _clone of a client class (protected-access)
spydrnet/ir/instance.py:156:12: W0212: Access to a protected member _instance of a client class (protected-access)
spydrnet/ir/instance.py:157:12: W0212: Access to a protected member _pins of a client class (protected-access)
spydrnet/ir/instance.py:158:8: W0212: Access to a protected member _reference of a client class (protected-access)
spydrnet/ir/instance.py:159:8: W0212: Access to a protected member _data of a client class (protected-access)
spydrnet/ir/instance.py:174:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/instance.py:175:8: W0212: Access to a protected member _clone_rip of a client class (protected-access)
spydrnet/ir/instance.py:184:8: R1705: Unnecessary "elif" after "return" (no-else-return)
spydrnet/ir/instance.py:186:17: W0212: Access to a protected member _children of a client class (protected-access)
spydrnet/ir/instance.py:186:55: W0212: Access to a protected member _cables of a client class (protected-access)
spydrnet/ir/instance.py:6:0: W0611: Unused copy imported from copy (unused-import)
spydrnet/ir/instance.py:6:0: W0611: Unused error imported from copy (unused-import)
spydrnet/ir/instance.py:6:0: C0411: standard import "from copy import deepcopy, copy, error" should be placed before "from spydrnet.ir.first_class_element import FirstClassElement" (wrong-import-order)
spydrnet/ir/instance.py:7:0: C0411: standard import "from collections import OrderedDict" should be placed before "from spydrnet.ir.first_class_element import FirstClassElement" (wrong-import-order)
************* Module spydrnet.ir.netlist
spydrnet/ir/netlist.py:124:9: W0511: TODO: should We have a DRC that makes sure the instance is of a definition contained in netlist? I think no (fixme)
spydrnet/ir/netlist.py:147:9: W0511: TODO: should We have a DRC that makes sure the instance is of a definition contained in netlist? I think no (fixme)
spydrnet/ir/netlist.py:95:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/ir/netlist.py:118:0: C0301: Line too long (129/100) (line-too-long)
spydrnet/ir/netlist.py:124:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/ir/netlist.py:141:0: C0301: Line too long (129/100) (line-too-long)
spydrnet/ir/netlist.py:147:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/ir/netlist.py:174:58: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/netlist.py:224:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/ir/netlist.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/netlist.py:58:11: C0121: Comparison 'name != None' should be 'name is not None' (singleton-comparison)
spydrnet/ir/netlist.py:60:11: C0121: Comparison 'properties != None' should be 'properties is not None' (singleton-comparison)
spydrnet/ir/netlist.py:72:8: C0415: Import outside toplevel (spydrnet.composers.compose) (import-outside-toplevel)
spydrnet/ir/netlist.py:121:15: R1701: Consider merging these isinstance calls to isinstance(instance, (Definition, Instance)) (consider-merging-isinstance)
spydrnet/ir/netlist.py:123:8: W0212: Access to a protected member _call_netlist_top_instance of a client class (protected-access)
spydrnet/ir/netlist.py:144:15: R1701: Consider merging these isinstance calls to isinstance(instance, (Definition, Instance)) (consider-merging-isinstance)
spydrnet/ir/netlist.py:146:8: W0212: Access to a protected member _call_netlist_top_instance of a client class (protected-access)
spydrnet/ir/netlist.py:189:8: W0212: Access to a protected member _call_netlist_add_library of a client class (protected-access)
spydrnet/ir/netlist.py:194:8: W0212: Access to a protected member _netlist of a client class (protected-access)
spydrnet/ir/netlist.py:236:8: W0212: Access to a protected member _call_netlist_remove_library of a client class (protected-access)
spydrnet/ir/netlist.py:237:8: W0212: Access to a protected member _netlist of a client class (protected-access)
spydrnet/ir/netlist.py:242:25: W0212: Access to a protected member _definitions of a client class (protected-access)
spydrnet/ir/netlist.py:244:27: W0212: Access to a protected member _references of a client class (protected-access)
spydrnet/ir/netlist.py:247:16: W0212: Access to a protected member _references of a client class (protected-access)
spydrnet/ir/netlist.py:255:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/netlist.py:257:8: W0212: Access to a protected member _data of a client class (protected-access)
spydrnet/ir/netlist.py:261:33: W0212: Access to a protected member _clone of a client class (protected-access)
spydrnet/ir/netlist.py:262:8: W0212: Access to a protected member _libraries of a client class (protected-access)
spydrnet/ir/netlist.py:264:11: C0121: Comparison 'self._top_instance == None' should be 'self._top_instance is None' (singleton-comparison)
spydrnet/ir/netlist.py:265:12: W0212: Access to a protected member _top_instance of a client class (protected-access)
spydrnet/ir/netlist.py:268:16: W0212: Access to a protected member _top_instance of a client class (protected-access)
spydrnet/ir/netlist.py:270:26: W0212: Access to a protected member _clone of a client class (protected-access)
spydrnet/ir/netlist.py:271:16: W0212: Access to a protected member _clone_rip_and_replace_in_definition of a client class (protected-access)
spydrnet/ir/netlist.py:272:16: W0212: Access to a protected member _clone_rip_and_replace_in_library of a client class (protected-access)
spydrnet/ir/netlist.py:273:16: W0212: Access to a protected member _top_instance of a client class (protected-access)
spydrnet/ir/netlist.py:275:23: W0212: Access to a protected member _libraries of a client class (protected-access)
spydrnet/ir/netlist.py:276:12: W0212: Access to a protected member _netlist of a client class (protected-access)
spydrnet/ir/netlist.py:277:12: W0212: Access to a protected member _clone_rip_and_replace of a client class (protected-access)
spydrnet/ir/netlist.py:287:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/netlist.py:288:8: W0212: Access to a protected member _clone_rip of a client class (protected-access)
spydrnet/ir/netlist.py:7:0: W0611: Unused copy imported from copy (unused-import)
spydrnet/ir/netlist.py:7:0: W0611: Unused error imported from copy (unused-import)
spydrnet/ir/netlist.py:7:0: C0411: standard import "from copy import deepcopy, copy, error" should be placed before "from spydrnet.ir.first_class_element import FirstClassElement" (wrong-import-order)
************* Module spydrnet.ir.library
spydrnet/ir/library.py:70:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/ir/library.py:94:31: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/library.py:96:38: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/library.py:99:0: C0301: Line too long (124/100) (line-too-long)
spydrnet/ir/library.py:100:0: C0301: Line too long (145/100) (line-too-long)
spydrnet/ir/library.py:136:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/ir/library.py:152:0: C0301: Line too long (138/100) (line-too-long)
spydrnet/ir/library.py:153:0: C0301: Line too long (131/100) (line-too-long)
spydrnet/ir/library.py:158:47: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/library.py:199:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/ir/library.py:200:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/ir/library.py:201:0: C0301: Line too long (121/100) (line-too-long)
spydrnet/ir/library.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/library.py:32:11: C0121: Comparison 'name != None' should be 'name is not None' (singleton-comparison)
spydrnet/ir/library.py:35:11: C0121: Comparison 'properties != None' should be 'properties is not None' (singleton-comparison)
spydrnet/ir/library.py:101:8: W0212: Access to a protected member _call_library_add_definition of a client class (protected-access)
spydrnet/ir/library.py:106:8: W0212: Access to a protected member _library of a client class (protected-access)
spydrnet/ir/library.py:148:8: W0212: Access to a protected member _call_library_remove_definition of a client class (protected-access)
spydrnet/ir/library.py:149:8: W0212: Access to a protected member _library of a client class (protected-access)
spydrnet/ir/library.py:153:8: W0107: Unnecessary pass statement (unnecessary-pass)
spydrnet/ir/library.py:155:12: W0212: Access to a protected member _clone_rip_and_replace of a client class (protected-access)
spydrnet/ir/library.py:164:23: W0212: Access to a protected member _references of a client class (protected-access)
spydrnet/ir/library.py:167:28: W0212: Access to a protected member _children of a client class (protected-access)
spydrnet/ir/library.py:168:16: W0212: Access to a protected member _references of a client class (protected-access)
spydrnet/ir/library.py:168:16: W0212: Access to a protected member _reference of a client class (protected-access)
spydrnet/ir/library.py:170:12: W0212: Access to a protected member _references of a client class (protected-access)
spydrnet/ir/library.py:179:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/library.py:181:8: W0212: Access to a protected member _netlist of a client class (protected-access)
spydrnet/ir/library.py:182:8: W0212: Access to a protected member _data of a client class (protected-access)
spydrnet/ir/library.py:186:35: W0212: Access to a protected member _clone of a client class (protected-access)
spydrnet/ir/library.py:187:8: W0212: Access to a protected member _definitions of a client class (protected-access)
spydrnet/ir/library.py:189:26: W0212: Access to a protected member _definitions of a client class (protected-access)
spydrnet/ir/library.py:190:12: W0212: Access to a protected member _library of a client class (protected-access)
spydrnet/ir/library.py:191:12: W0212: Access to a protected member _clone_rip_and_replace of a client class (protected-access)
spydrnet/ir/library.py:206:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/library.py:207:8: W0212: Access to a protected member _clone_rip of a client class (protected-access)
spydrnet/ir/library.py:6:0: W0611: Unused copy imported from copy (unused-import)
spydrnet/ir/library.py:6:0: W0611: Unused error imported from copy (unused-import)
spydrnet/ir/library.py:6:0: C0411: standard import "from copy import deepcopy, copy, error" should be placed before "from spydrnet.ir.first_class_element import FirstClassElement" (wrong-import-order)
************* Module spydrnet.ir.cable
spydrnet/ir/cable.py:12:0: C0301: Line too long (162/100) (line-too-long)
spydrnet/ir/cable.py:16:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/ir/cable.py:24:0: C0301: Line too long (128/100) (line-too-long)
spydrnet/ir/cable.py:25:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/ir/cable.py:69:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/ir/cable.py:93:0: C0301: Line too long (103/100) (line-too-long)
spydrnet/ir/cable.py:98:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/ir/cable.py:147:0: C0301: Line too long (138/100) (line-too-long)
spydrnet/ir/cable.py:152:0: C0301: Line too long (128/100) (line-too-long)
spydrnet/ir/cable.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/cable.py:16:4: R0913: Too many arguments (6/5) (too-many-arguments)
spydrnet/ir/cable.py:32:11: C0121: Comparison 'name != None' should be 'name is not None' (singleton-comparison)
spydrnet/ir/cable.py:44:11: C0121: Comparison 'properties != None' should be 'properties is not None' (singleton-comparison)
spydrnet/ir/cable.py:104:8: W0212: Access to a protected member _call_cable_add_wire of a client class (protected-access)
spydrnet/ir/cable.py:109:8: W0212: Access to a protected member _cable of a client class (protected-access)
spydrnet/ir/cable.py:143:8: W0212: Access to a protected member _call_cable_remove_wire of a client class (protected-access)
spydrnet/ir/cable.py:144:8: W0212: Access to a protected member _cable of a client class (protected-access)
spydrnet/ir/cable.py:148:12: C0103: Variable name "w" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/cable.py:149:12: W0212: Access to a protected member _clone_rip_and_replace of a client class (protected-access)
spydrnet/ir/cable.py:153:12: C0103: Variable name "w" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/cable.py:154:12: W0212: Access to a protected member _clone_rip of a client class (protected-access)
spydrnet/ir/cable.py:155:12: W0212: Access to a protected member _cable of a client class (protected-access)
spydrnet/ir/cable.py:162:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/cable.py:165:12: C0103: Variable name "w" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/cable.py:166:29: W0212: Access to a protected member _clone of a client class (protected-access)
spydrnet/ir/cable.py:167:8: W0212: Access to a protected member _wires of a client class (protected-access)
spydrnet/ir/cable.py:168:12: C0103: Variable name "w" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/cable.py:168:17: W0212: Access to a protected member _wires of a client class (protected-access)
spydrnet/ir/cable.py:169:12: W0212: Access to a protected member _cable of a client class (protected-access)
spydrnet/ir/cable.py:170:8: W0212: Access to a protected member _definition of a client class (protected-access)
spydrnet/ir/cable.py:171:8: W0212: Access to a protected member _is_downto of a client class (protected-access)
spydrnet/ir/cable.py:172:8: W0212: Access to a protected member _is_scalar of a client class (protected-access)
spydrnet/ir/cable.py:173:8: W0212: Access to a protected member _lower_index of a client class (protected-access)
spydrnet/ir/cable.py:174:8: W0212: Access to a protected member _data of a client class (protected-access)
spydrnet/ir/cable.py:187:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/cable.py:188:8: W0212: Access to a protected member _clone_rip of a client class (protected-access)
spydrnet/ir/cable.py:6:0: W0611: Unused copy imported from copy (unused-import)
spydrnet/ir/cable.py:6:0: W0611: Unused error imported from copy (unused-import)
spydrnet/ir/cable.py:6:0: C0411: standard import "from copy import deepcopy, copy, error" should be placed before "from spydrnet.ir.bundle import Bundle" (wrong-import-order)
************* Module spydrnet.ir.__init__
spydrnet/ir/__init__.py:13:0: C0304: Final newline missing (missing-final-newline)
************* Module spydrnet.ir
spydrnet/ir/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module spydrnet.ir.element
spydrnet/ir/element.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module spydrnet.ir.first_class_element
spydrnet/ir/first_class_element.py:11:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/ir/first_class_element.py:14:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/ir/first_class_element.py:15:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/ir/first_class_element.py:16:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/ir/first_class_element.py:18:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/ir/first_class_element.py:19:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/ir/first_class_element.py:20:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/ir/first_class_element.py:23:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/ir/first_class_element.py:24:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/ir/first_class_element.py:27:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/ir/first_class_element.py:28:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/ir/first_class_element.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/first_class_element.py:91:8: W0212: Access to a protected member _call_dictionary_pop of a client class (protected-access)
************* Module spydrnet.ir.wire
spydrnet/ir/wire.py:33:0: C0301: Line too long (103/100) (line-too-long)
spydrnet/ir/wire.py:112:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/ir/wire.py:113:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/ir/wire.py:126:0: C0301: Line too long (138/100) (line-too-long)
spydrnet/ir/wire.py:155:41: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/wire.py:172:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/wire.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/wire.py:44:8: W0212: Access to a protected member _call_wire_connect_pin of a client class (protected-access)
spydrnet/ir/wire.py:54:12: W0212: Access to a protected member _wire of a client class (protected-access)
spydrnet/ir/wire.py:62:8: W0212: Access to a protected member _wire of a client class (protected-access)
spydrnet/ir/wire.py:122:8: W0212: Access to a protected member _call_wire_disconnect_pin of a client class (protected-access)
spydrnet/ir/wire.py:123:8: W0212: Access to a protected member _wire of a client class (protected-access)
spydrnet/ir/wire.py:128:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/wire.py:132:8: W0107: Unnecessary pass statement (unnecessary-pass)
spydrnet/ir/wire.py:139:8: W0107: Unnecessary pass statement (unnecessary-pass)
spydrnet/ir/wire.py:147:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/wire.py:149:8: W0212: Access to a protected member _cable of a client class (protected-access)
spydrnet/ir/wire.py:151:8: W0212: Access to a protected member _pins of a client class (protected-access)
spydrnet/ir/wire.py:162:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/wire.py:163:8: W0212: Access to a protected member _clone_rip of a client class (protected-access)
spydrnet/ir/wire.py:5:0: W0611: Unused deepcopy imported from copy (unused-import)
spydrnet/ir/wire.py:5:0: W0611: Unused error imported from copy (unused-import)
spydrnet/ir/wire.py:5:0: C0411: standard import "from copy import copy, deepcopy, error" should be placed before "from spydrnet.ir.element import Element" (wrong-import-order)
************* Module spydrnet.ir.definition
spydrnet/ir/definition.py:76:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/ir/definition.py:89:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/ir/definition.py:100:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/ir/definition.py:113:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/ir/definition.py:124:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/ir/definition.py:139:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/ir/definition.py:145:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/ir/definition.py:153:0: C0301: Line too long (128/100) (line-too-long)
spydrnet/ir/definition.py:154:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/ir/definition.py:156:0: C0301: Line too long (103/100) (line-too-long)
spydrnet/ir/definition.py:216:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/ir/definition.py:265:0: C0301: Line too long (107/100) (line-too-long)
spydrnet/ir/definition.py:327:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/ir/definition.py:343:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/ir/definition.py:351:0: C0301: Line too long (128/100) (line-too-long)
spydrnet/ir/definition.py:352:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/ir/definition.py:409:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/ir/definition.py:427:0: C0301: Line too long (129/100) (line-too-long)
spydrnet/ir/definition.py:429:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/ir/definition.py:430:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/ir/definition.py:430:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/ir/definition.py:504:0: C0301: Line too long (132/100) (line-too-long)
spydrnet/ir/definition.py:505:0: C0301: Line too long (165/100) (line-too-long)
spydrnet/ir/definition.py:513:0: C0301: Line too long (217/100) (line-too-long)
spydrnet/ir/definition.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/definition.py:38:11: C0121: Comparison 'name != None' should be 'name is not None' (singleton-comparison)
spydrnet/ir/definition.py:41:11: C0121: Comparison 'properties != None' should be 'properties is not None' (singleton-comparison)
spydrnet/ir/definition.py:145:4: R0913: Too many arguments (7/5) (too-many-arguments)
spydrnet/ir/definition.py:178:8: W0212: Access to a protected member _call_definition_add_port of a client class (protected-access)
spydrnet/ir/definition.py:183:8: W0212: Access to a protected member _definition of a client class (protected-access)
spydrnet/ir/definition.py:186:16: W0212: Access to a protected member _pins of a client class (protected-access)
spydrnet/ir/definition.py:230:8: W0212: Access to a protected member _call_definition_remove_port of a client class (protected-access)
spydrnet/ir/definition.py:237:20: W0212: Access to a protected member _pins of a client class (protected-access)
spydrnet/ir/definition.py:238:16: W0212: Access to a protected member _instance of a client class (protected-access)
spydrnet/ir/definition.py:239:16: W0212: Access to a protected member _inner_pin of a client class (protected-access)
spydrnet/ir/definition.py:240:8: W0212: Access to a protected member _definition of a client class (protected-access)
spydrnet/ir/definition.py:291:8: W0212: Access to a protected member _call_definition_add_child of a client class (protected-access)
spydrnet/ir/definition.py:296:8: W0212: Access to a protected member _parent of a client class (protected-access)
spydrnet/ir/definition.py:340:8: W0212: Access to a protected member _call_definition_remove_child of a client class (protected-access)
spydrnet/ir/definition.py:341:8: W0212: Access to a protected member _parent of a client class (protected-access)
spydrnet/ir/definition.py:343:4: R0913: Too many arguments (6/5) (too-many-arguments)
spydrnet/ir/definition.py:373:8: W0212: Access to a protected member _call_definition_add_cable of a client class (protected-access)
spydrnet/ir/definition.py:378:8: W0212: Access to a protected member _definition of a client class (protected-access)
spydrnet/ir/definition.py:423:8: W0212: Access to a protected member _call_definition_remove_cable of a client class (protected-access)
spydrnet/ir/definition.py:424:8: W0212: Access to a protected member _definition of a client class (protected-access)
spydrnet/ir/definition.py:443:16: W0212: Access to a protected member _reference of a client class (protected-access)
spydrnet/ir/definition.py:444:16: W0212: Access to a protected member _clone_rip_and_replace_in_library of a client class (protected-access)
spydrnet/ir/definition.py:452:12: W0212: Access to a protected member _references of a client class (protected-access)
spydrnet/ir/definition.py:452:12: W0212: Access to a protected member _reference of a client class (protected-access)
spydrnet/ir/definition.py:461:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/definition.py:463:8: W0212: Access to a protected member _data of a client class (protected-access)
spydrnet/ir/definition.py:464:8: W0212: Access to a protected member _library of a client class (protected-access)
spydrnet/ir/definition.py:467:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/definition.py:468:29: W0212: Access to a protected member _clone of a client class (protected-access)
spydrnet/ir/definition.py:469:8: W0212: Access to a protected member _ports of a client class (protected-access)
spydrnet/ir/definition.py:472:12: C0103: Variable name "ca" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/definition.py:473:30: W0212: Access to a protected member _clone of a client class (protected-access)
spydrnet/ir/definition.py:474:8: W0212: Access to a protected member _cables of a client class (protected-access)
spydrnet/ir/definition.py:477:12: C0103: Variable name "ch" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/definition.py:478:32: W0212: Access to a protected member _clone of a client class (protected-access)
spydrnet/ir/definition.py:479:8: W0212: Access to a protected member _children of a client class (protected-access)
spydrnet/ir/definition.py:481:8: W0212: Access to a protected member _references of a client class (protected-access)
spydrnet/ir/definition.py:483:20: W0212: Access to a protected member _ports of a client class (protected-access)
spydrnet/ir/definition.py:484:12: W0212: Access to a protected member _definition of a client class (protected-access)
spydrnet/ir/definition.py:485:12: W0212: Access to a protected member _clone_rip_and_replace of a client class (protected-access)
spydrnet/ir/definition.py:487:21: W0212: Access to a protected member _cables of a client class (protected-access)
spydrnet/ir/definition.py:488:12: W0212: Access to a protected member _definition of a client class (protected-access)
spydrnet/ir/definition.py:489:12: W0212: Access to a protected member _clone_rip_and_replace of a client class (protected-access)
spydrnet/ir/definition.py:491:24: W0212: Access to a protected member _children of a client class (protected-access)
spydrnet/ir/definition.py:492:12: W0212: Access to a protected member _parent of a client class (protected-access)
spydrnet/ir/definition.py:493:12: W0212: Access to a protected member _clone_rip_and_replace_in_definition of a client class (protected-access)
spydrnet/ir/definition.py:508:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/definition.py:509:8: W0212: Access to a protected member _clone_rip of a client class (protected-access)
spydrnet/ir/definition.py:10:0: W0611: Unused error imported from copy (unused-import)
spydrnet/ir/definition.py:10:0: C0411: standard import "from copy import deepcopy, copy, error" should be placed before "from spydrnet.ir.first_class_element import FirstClassElement" (wrong-import-order)
************* Module spydrnet.ir.outerpin
spydrnet/ir/outerpin.py:7:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/ir/outerpin.py:32:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/ir/outerpin.py:32:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/ir/outerpin.py:56:0: C0301: Line too long (138/100) (line-too-long)
spydrnet/ir/outerpin.py:58:0: C0301: Line too long (103/100) (line-too-long)
spydrnet/ir/outerpin.py:62:47: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/outerpin.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/outerpin.py:57:11: C0121: Comparison 'self._wire != None' should be 'self._wire is not None' (singleton-comparison)
spydrnet/ir/outerpin.py:75:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/outerpin.py:77:8: W0212: Access to a protected member _instance of a client class (protected-access)
spydrnet/ir/outerpin.py:78:8: W0212: Access to a protected member _inner_pin of a client class (protected-access)
spydrnet/ir/outerpin.py:79:8: W0212: Access to a protected member _wire of a client class (protected-access)
spydrnet/ir/outerpin.py:91:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/outerpin.py:92:8: W0212: Access to a protected member _clone_rip of a client class (protected-access)
spydrnet/ir/outerpin.py:2:0: W0611: Unused deepcopy imported from copy (unused-import)
spydrnet/ir/outerpin.py:2:0: W0611: Unused copy imported from copy (unused-import)
spydrnet/ir/outerpin.py:2:0: W0611: Unused error imported from copy (unused-import)
spydrnet/ir/outerpin.py:2:0: C0411: standard import "from copy import deepcopy, copy, error" should be placed before "from spydrnet.ir.pin import Pin" (wrong-import-order)
************* Module spydrnet.ir.innerpin
spydrnet/ir/innerpin.py:25:0: C0301: Line too long (138/100) (line-too-long)
spydrnet/ir/innerpin.py:27:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/ir/innerpin.py:31:0: C0301: Line too long (128/100) (line-too-long)
spydrnet/ir/innerpin.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/innerpin.py:26:11: C0121: Comparison 'self._wire != None' should be 'self._wire is not None' (singleton-comparison)
spydrnet/ir/innerpin.py:40:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/innerpin.py:42:8: W0212: Access to a protected member _wire of a client class (protected-access)
spydrnet/ir/innerpin.py:43:8: W0212: Access to a protected member _port of a client class (protected-access)
spydrnet/ir/innerpin.py:56:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/innerpin.py:57:8: W0212: Access to a protected member _clone_rip of a client class (protected-access)
spydrnet/ir/innerpin.py:2:0: W0611: Unused deepcopy imported from copy (unused-import)
spydrnet/ir/innerpin.py:2:0: W0611: Unused copy imported from copy (unused-import)
spydrnet/ir/innerpin.py:2:0: W0611: Unused error imported from copy (unused-import)
spydrnet/ir/innerpin.py:2:0: C0411: standard import "from copy import deepcopy, copy, error" should be placed before "from spydrnet.ir.pin import Pin" (wrong-import-order)
************* Module spydrnet.ir.tests.test_library
spydrnet/ir/tests/test_library.py:61:0: C0304: Final newline missing (missing-final-newline)
spydrnet/ir/tests/test_library.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/tests/test_library.py:7:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/tests/test_library.py:11:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_library.py:17:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_library.py:25:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_library.py:30:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_library.py:43:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_library.py:50:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_library.py:54:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.ir.tests.test_print
spydrnet/ir/tests/test_print.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/tests/test_print.py:6:0: C0115: Missing class docstring (missing-class-docstring)
************* Module spydrnet.ir.tests.test_netlist
spydrnet/ir/tests/test_netlist.py:78:0: C0304: Final newline missing (missing-final-newline)
spydrnet/ir/tests/test_netlist.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/tests/test_netlist.py:7:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/tests/test_netlist.py:11:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_netlist.py:17:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_netlist.py:27:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_netlist.py:35:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_netlist.py:43:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_netlist.py:48:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_netlist.py:54:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_netlist.py:62:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_netlist.py:67:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.ir.tests.test_port
spydrnet/ir/tests/test_port.py:115:0: C0304: Final newline missing (missing-final-newline)
spydrnet/ir/tests/test_port.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/tests/test_port.py:7:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/tests/test_port.py:11:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_port.py:17:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_port.py:23:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_port.py:30:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_port.py:31:12: C0103: Variable name "ii" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_port.py:43:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_port.py:46:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_port.py:51:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_port.py:56:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_port.py:63:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_port.py:70:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_port.py:74:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_port.py:83:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_port.py:96:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_port.py:100:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_port.py:113:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.ir.tests.test_instance
spydrnet/ir/tests/test_instance.py:149:0: C0305: Trailing newlines (trailing-newlines)
spydrnet/ir/tests/test_instance.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/tests/test_instance.py:7:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/tests/test_instance.py:11:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_instance.py:16:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_instance.py:22:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_instance.py:52:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_instance.py:82:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_instance.py:82:4: R0914: Too many local variables (17/15) (too-many-locals)
spydrnet/ir/tests/test_instance.py:113:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_instance.py:133:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.ir.tests.test_pin
spydrnet/ir/tests/test_pin.py:22:0: C0304: Final newline missing (missing-final-newline)
spydrnet/ir/tests/test_pin.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/tests/test_pin.py:7:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/tests/test_pin.py:11:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_pin.py:17:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_pin.py:21:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.ir.tests.test_element
spydrnet/ir/tests/test_element.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/tests/test_element.py:6:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/tests/test_element.py:10:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_element.py:16:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_element.py:28:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_element.py:33:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_element.py:43:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.ir.tests
spydrnet/ir/tests/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module spydrnet.ir.tests.test_definition
spydrnet/ir/tests/test_definition.py:155:0: C0301: Line too long (112/100) (line-too-long)
spydrnet/ir/tests/test_definition.py:157:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/ir/tests/test_definition.py:160:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/ir/tests/test_definition.py:162:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/ir/tests/test_definition.py:163:0: C0304: Final newline missing (missing-final-newline)
spydrnet/ir/tests/test_definition.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/tests/test_definition.py:7:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/tests/test_definition.py:11:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:18:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:22:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:29:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:34:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:41:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:48:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:52:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:67:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:74:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:79:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:86:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:93:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:97:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:106:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:113:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:118:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:125:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:132:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:136:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:152:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_definition.py:153:8: W0106: Expression "(self.assertTrue(self.definition.is_leaf()), 'Empty definition is not considered a leaf cell')" is assigned to nothing (expression-not-assigned)
spydrnet/ir/tests/test_definition.py:155:8: W0106: Expression "(self.assertTrue(self.definition.is_leaf()), 'Empty definition with a port is not considered a leaf cell')" is assigned to nothing (expression-not-assigned)
spydrnet/ir/tests/test_definition.py:157:8: W0106: Expression "(self.assertFalse(self.definition.is_leaf()), 'Definition with a cable is considered a leaf cell')" is assigned to nothing (expression-not-assigned)
spydrnet/ir/tests/test_definition.py:160:8: W0106: Expression "(self.assertFalse(self.definition.is_leaf()), 'Definition with a child instance is considered a leaf cell')" is assigned to nothing (expression-not-assigned)
spydrnet/ir/tests/test_definition.py:162:8: W0106: Expression "(self.assertFalse(self.definition.is_leaf()), 'Definition with a cable and child instance is considered a leaf cell')" is assigned to nothing (expression-not-assigned)
spydrnet/ir/tests/test_definition.py:7:0: R0904: Too many public methods (22/20) (too-many-public-methods)
************* Module spydrnet.ir.tests.test_bundle
spydrnet/ir/tests/test_bundle.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/tests/test_bundle.py:8:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/tests/test_bundle.py:12:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_bundle.py:18:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_bundle.py:22:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_bundle.py:26:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_bundle.py:31:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_bundle.py:36:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_bundle.py:37:47: W0212: Access to a protected member _items of a client class (protected-access)
************* Module spydrnet.ir.tests.test_shortcuts
spydrnet/ir/tests/test_shortcuts.py:24:74: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/tests/test_shortcuts.py:31:124: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/tests/test_shortcuts.py:31:0: C0301: Line too long (124/100) (line-too-long)
spydrnet/ir/tests/test_shortcuts.py:97:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/ir/tests/test_shortcuts.py:121:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/ir/tests/test_shortcuts.py:122:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/ir/tests/test_shortcuts.py:126:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/ir/tests/test_shortcuts.py:168:0: C0305: Trailing newlines (trailing-newlines)
spydrnet/ir/tests/test_shortcuts.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/tests/test_shortcuts.py:18:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/tests/test_shortcuts.py:19:4: C0103: Method name "test_hRef_shortcut" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_shortcuts.py:19:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_shortcuts.py:23:8: C0103: Variable name "hr" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_shortcuts.py:27:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_shortcuts.py:33:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_shortcuts.py:42:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_shortcuts.py:54:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_shortcuts.py:55:8: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_shortcuts.py:57:8: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_shortcuts.py:59:8: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_shortcuts.py:63:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_shortcuts.py:65:8: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_shortcuts.py:68:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_shortcuts.py:69:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_shortcuts.py:75:8: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_shortcuts.py:82:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_shortcuts.py:83:8: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_shortcuts.py:90:8: C0103: Variable name "p2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_shortcuts.py:96:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_shortcuts.py:98:8: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_shortcuts.py:101:8: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_shortcuts.py:104:8: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_shortcuts.py:110:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_shortcuts.py:113:8: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_shortcuts.py:116:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_shortcuts.py:117:8: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_shortcuts.py:124:8: C0103: Variable name "l2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_shortcuts.py:128:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_shortcuts.py:129:8: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_shortcuts.py:156:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_shortcuts.py:157:8: C0103: Variable name "n" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/tests/test_shortcuts.py:8:0: W0611: Unused FirstClassElement imported from spydrnet.ir.first_class_element (unused-import)
************* Module spydrnet.ir.tests.test_innerpin
spydrnet/ir/tests/test_innerpin.py:22:0: C0304: Final newline missing (missing-final-newline)
spydrnet/ir/tests/test_innerpin.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/tests/test_innerpin.py:7:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/tests/test_innerpin.py:11:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_innerpin.py:17:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_innerpin.py:21:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.ir.tests.test_wire
spydrnet/ir/tests/test_wire.py:29:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/ir/tests/test_wire.py:31:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/ir/tests/test_wire.py:59:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/ir/tests/test_wire.py:79:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/ir/tests/test_wire.py:84:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/ir/tests/test_wire.py:95:0: C0304: Final newline missing (missing-final-newline)
spydrnet/ir/tests/test_wire.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/tests/test_wire.py:7:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/tests/test_wire.py:7:0: R0902: Too many instance attributes (10/7) (too-many-instance-attributes)
spydrnet/ir/tests/test_wire.py:21:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_wire.py:26:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_wire.py:33:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_wire.py:44:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_wire.py:58:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_wire.py:72:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_wire.py:88:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_wire.py:93:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.ir.tests.test_cable
spydrnet/ir/tests/test_cable.py:50:0: C0304: Final newline missing (missing-final-newline)
spydrnet/ir/tests/test_cable.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/tests/test_cable.py:6:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/tests/test_cable.py:10:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_cable.py:11:25: W0212: Access to a protected member _items of a client class (protected-access)
spydrnet/ir/tests/test_cable.py:11:46: W0212: Access to a protected member _wires of a client class (protected-access)
spydrnet/ir/tests/test_cable.py:13:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_cable.py:19:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_cable.py:26:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_cable.py:31:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_cable.py:37:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_cable.py:43:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.ir.tests.test_outerpin
spydrnet/ir/tests/test_outerpin.py:33:0: C0304: Final newline missing (missing-final-newline)
spydrnet/ir/tests/test_outerpin.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/tests/test_outerpin.py:7:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/tests/test_outerpin.py:11:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_outerpin.py:15:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/tests/test_outerpin.py:26:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.ir.views.setview
spydrnet/ir/views/setview.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/views/setview.py:1:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/views/setview.py:73:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/setview.py:76:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/setview.py:79:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/setview.py:82:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/setview.py:85:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/setview.py:88:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/setview.py:91:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/setview.py:94:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.ir.views.listview
spydrnet/ir/views/listview.py:82:0: C0304: Final newline missing (missing-final-newline)
spydrnet/ir/views/listview.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/views/listview.py:1:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/views/listview.py:54:4: C0103: Argument name "n" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/views/listview.py:75:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/listview.py:78:20: W0622: Redefining built-in 'object' (redefined-builtin)
spydrnet/ir/views/listview.py:78:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/listview.py:81:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.ir.views.dictview
spydrnet/ir/views/dictview.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/views/dictview.py:1:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/views/dictview.py:38:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/dictview.py:41:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/dictview.py:44:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/dictview.py:47:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/dictview.py:50:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/dictview.py:53:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.ir.views.outerpinsview
spydrnet/ir/views/outerpinsview.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/views/outerpinsview.py:5:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/views/outerpinsview.py:7:4: W0235: Useless super delegation in method '__init__' (useless-super-delegation)
************* Module spydrnet.ir.views.tests.test_setview
spydrnet/ir/views/tests/test_setview.py:97:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/ir/views/tests/test_setview.py:101:0: C0305: Trailing newlines (trailing-newlines)
spydrnet/ir/views/tests/test_setview.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/views/tests/test_setview.py:6:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/views/tests/test_setview.py:10:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:14:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:18:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:22:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:27:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:31:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:35:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:39:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:42:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:45:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:49:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:53:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:57:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:61:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:65:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:69:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:72:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:75:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:78:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:81:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:84:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:87:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:90:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:93:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:96:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:99:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_setview.py:6:0: R0904: Too many public methods (27/20) (too-many-public-methods)
************* Module spydrnet.ir.views.tests.test_dictview
spydrnet/ir/views/tests/test_dictview.py:56:0: C0301: Line too long (105/100) (line-too-long)
spydrnet/ir/views/tests/test_dictview.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/views/tests/test_dictview.py:4:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/views/tests/test_dictview.py:12:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_dictview.py:18:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_dictview.py:21:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_dictview.py:24:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_dictview.py:30:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_dictview.py:33:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_dictview.py:36:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_dictview.py:40:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_dictview.py:41:12: C0103: Variable name "ii" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/views/tests/test_dictview.py:44:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_dictview.py:45:12: C0103: Variable name "ii" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/views/tests/test_dictview.py:45:16: C0103: Variable name "jj" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/views/tests/test_dictview.py:48:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_dictview.py:49:12: C0103: Variable name "ii" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/views/tests/test_dictview.py:52:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_dictview.py:55:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_dictview.py:58:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_dictview.py:59:12: C0103: Variable name "ii" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/views/tests/test_dictview.py:59:16: C0103: Variable name "jj" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/views/tests/test_dictview.py:62:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_dictview.py:63:12: C0103: Variable name "ii" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/views/tests/test_dictview.py:63:16: C0103: Variable name "jj" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/views/tests/test_dictview.py:66:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_dictview.py:67:12: C0103: Variable name "ii" doesn't conform to snake_case naming style (invalid-name)
spydrnet/ir/views/tests/test_dictview.py:67:16: C0103: Variable name "jj" doesn't conform to snake_case naming style (invalid-name)
************* Module spydrnet.ir.views.tests.test_listview
spydrnet/ir/views/tests/test_listview.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/views/tests/test_listview.py:6:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/views/tests/test_listview.py:10:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:13:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:16:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:22:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:28:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:31:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:34:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:37:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:40:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:43:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:46:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:50:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:59:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:63:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:66:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:70:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:74:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:78:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:82:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:85:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:88:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_listview.py:6:0: R0904: Too many public methods (22/20) (too-many-public-methods)
************* Module spydrnet.ir.views.tests.test_outerpinsview
spydrnet/ir/views/tests/test_outerpinsview.py:16:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/ir/views/tests/test_outerpinsview.py:19:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/ir/views/tests/test_outerpinsview.py:23:0: C0301: Line too long (112/100) (line-too-long)
spydrnet/ir/views/tests/test_outerpinsview.py:24:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/ir/views/tests/test_outerpinsview.py:34:0: C0301: Line too long (119/100) (line-too-long)
spydrnet/ir/views/tests/test_outerpinsview.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/ir/views/tests/test_outerpinsview.py:5:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/ir/views/tests/test_outerpinsview.py:14:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_outerpinsview.py:18:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_outerpinsview.py:22:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_outerpinsview.py:27:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_outerpinsview.py:30:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/ir/views/tests/test_outerpinsview.py:33:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.plugins
spydrnet/plugins/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module spydrnet.plugins.tests.test_namespace_manager
spydrnet/plugins/tests/test_namespace_manager.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/plugins/tests/test_namespace_manager.py:5:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/plugins/tests/test_namespace_manager.py:7:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.plugins.namespace_manager.default_namespace
spydrnet/plugins/namespace_manager/default_namespace.py:8:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/plugins/namespace_manager/default_namespace.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/plugins/namespace_manager/default_namespace.py:4:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/plugins/namespace_manager/default_namespace.py:18:38: W0613: Unused argument 'element' (unused-argument)
spydrnet/plugins/namespace_manager/default_namespace.py:27:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/default_namespace.py:27:27: W0613: Unused argument 'key' (unused-argument)
spydrnet/plugins/namespace_manager/default_namespace.py:27:32: W0613: Unused argument 'value' (unused-argument)
spydrnet/plugins/namespace_manager/default_namespace.py:31:4: R0912: Too many branches (23/12) (too-many-branches)
spydrnet/plugins/namespace_manager/default_namespace.py:81:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/default_namespace.py:89:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/default_namespace.py:100:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/default_namespace.py:112:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/default_namespace.py:122:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/default_namespace.py:122:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
************* Module spydrnet.plugins.namespace_manager.edif_namespace
spydrnet/plugins/namespace_manager/edif_namespace.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/plugins/namespace_manager/edif_namespace.py:1:0: E0611: No name 'default_namespace' in module 'NamespaceManager' (no-name-in-module)
spydrnet/plugins/namespace_manager/edif_namespace.py:4:0: E0611: No name 'default_namespace' in module 'NamespaceManager' (no-name-in-module)
spydrnet/plugins/namespace_manager/edif_namespace.py:4:0: W0404: Reimport 'DefaultNamespace' (imported line 1) (reimported)
spydrnet/plugins/namespace_manager/edif_namespace.py:7:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/plugins/namespace_manager/edif_namespace.py:28:4: C0103: Method name "_check_EDIF_identifier" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/edif_namespace.py:31:8: R1705: Unnecessary "else" after "return" (no-else-return)
spydrnet/plugins/namespace_manager/edif_namespace.py:43:4: R0911: Too many return statements (11/6) (too-many-return-statements)
spydrnet/plugins/namespace_manager/edif_namespace.py:43:4: R0912: Too many branches (38/12) (too-many-branches)
spydrnet/plugins/namespace_manager/edif_namespace.py:43:4: R0915: Too many statements (58/50) (too-many-statements)
spydrnet/plugins/namespace_manager/edif_namespace.py:123:4: W0231: __init__ method from base class 'DefaultNamespace' is not called (super-init-not-called)
spydrnet/plugins/namespace_manager/edif_namespace.py:182:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
spydrnet/plugins/namespace_manager/edif_namespace.py:3:0: C0411: standard import "import re" should be placed before "from spydrnet.plugins.namespace_manager.default_namespace import DefaultNamespace" (wrong-import-order)
************* Module spydrnet.plugins.namespace_manager.__init__
spydrnet/plugins/namespace_manager/__init__.py:93:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/plugins/namespace_manager/__init__.py:95:0: C0301: Line too long (152/100) (line-too-long)
spydrnet/plugins/namespace_manager/__init__.py:98:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/plugins/namespace_manager/__init__.py:118:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/plugins/namespace_manager/__init__.py:131:0: C0301: Line too long (109/100) (line-too-long)
spydrnet/plugins/namespace_manager/__init__.py:146:0: C0301: Line too long (116/100) (line-too-long)
************* Module spydrnet.plugins.namespace_manager
spydrnet/plugins/namespace_manager/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/plugins/namespace_manager/__init__.py:4:0: E0611: No name 'default_namespace' in module 'NamespaceManager' (no-name-in-module)
spydrnet/plugins/namespace_manager/__init__.py:5:0: E0611: No name 'edif_namespace' in module 'NamespaceManager' (no-name-in-module)
spydrnet/plugins/namespace_manager/__init__.py:17:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/plugins/namespace_manager/__init__.py:36:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/__init__.py:36:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
spydrnet/plugins/namespace_manager/__init__.py:137:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/__init__.py:158:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/__init__.py:164:20: R1704: Redefining argument with the local name 'key' (redefined-argument-from-local)
spydrnet/plugins/namespace_manager/__init__.py:171:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/__init__.py:184:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/__init__.py:203:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/__init__.py:231:4: R0201: Method could be a function (no-self-use)
spydrnet/plugins/namespace_manager/__init__.py:239:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/__init__.py:17:0: R0904: Too many public methods (28/20) (too-many-public-methods)
spydrnet/plugins/namespace_manager/__init__.py:8:0: C0411: standard import "import weakref" should be placed before "from spydrnet.callback.callback_listener import CallbackListener" (wrong-import-order)
************* Module spydrnet.plugins.namespace_manager.tests.test_edif_namespace
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:255:5: W0511: TODO: rename an object (fixme)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:256:5: W0511: TODO: orphan an object and see what happens (fixme)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:5:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:16:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:16:4: R0201: Method could be a function (no-self-use)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:20:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:25:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:30:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:42:8: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:43:8: C0103: Variable name "p1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:44:8: C0103: Variable name "i1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:45:8: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:46:8: C0103: Variable name "p2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:47:8: C0103: Variable name "i2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:55:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:56:8: W0612: Unused variable 'netlist' (unused-variable)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:63:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:71:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:78:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:88:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:96:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:104:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:111:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:125:8: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:129:8: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:138:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:150:8: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:151:8: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:152:8: C0103: Variable name "p1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:153:8: C0103: Variable name "p2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:154:8: C0103: Variable name "i1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:155:8: C0103: Variable name "i2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:166:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:173:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:182:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:189:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:191:8: C0103: Variable name "d1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:196:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:200:8: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:201:8: C0103: Variable name "p1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:202:8: C0103: Variable name "i1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:209:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:215:8: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:217:8: C0103: Variable name "p1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:219:8: C0103: Variable name "i1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:227:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:239:8: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:240:8: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:241:8: C0103: Variable name "p1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:242:8: C0103: Variable name "p2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:243:8: C0103: Variable name "i1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:244:8: C0103: Variable name "i2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/plugins/namespace_manager/tests/test_edif_namespace.py:5:0: R0904: Too many public methods (22/20) (too-many-public-methods)
************* Module spydrnet.tests.test_flatten
spydrnet/tests/test_flatten.py:217:5: W0511: #TODO put this code somewhere where people can use it to visualize simple netlists (fixme)
spydrnet/tests/test_flatten.py:108:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_flatten.py:113:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_flatten.py:114:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_flatten.py:124:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_flatten.py:125:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_flatten.py:142:0: W0311: Bad indentation. Found 11 spaces, expected 12 (bad-indentation)
spydrnet/tests/test_flatten.py:143:0: W0311: Bad indentation. Found 11 spaces, expected 12 (bad-indentation)
spydrnet/tests/test_flatten.py:144:0: W0311: Bad indentation. Found 11 spaces, expected 12 (bad-indentation)
spydrnet/tests/test_flatten.py:145:0: W0311: Bad indentation. Found 11 spaces, expected 12 (bad-indentation)
spydrnet/tests/test_flatten.py:146:0: W0311: Bad indentation. Found 11 spaces, expected 12 (bad-indentation)
spydrnet/tests/test_flatten.py:147:0: W0311: Bad indentation. Found 11 spaces, expected 12 (bad-indentation)
spydrnet/tests/test_flatten.py:148:0: W0311: Bad indentation. Found 11 spaces, expected 12 (bad-indentation)
spydrnet/tests/test_flatten.py:149:0: W0311: Bad indentation. Found 11 spaces, expected 12 (bad-indentation)
spydrnet/tests/test_flatten.py:157:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_flatten.py:201:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_flatten.py:209:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_flatten.py:228:51: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_flatten.py:230:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_flatten.py:273:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_flatten.py:277:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_flatten.py:278:0: C0304: Final newline missing (missing-final-newline)
spydrnet/tests/test_flatten.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/tests/test_flatten.py:4:0: W0401: Wildcard import spydrnet.ir (wildcard-import)
spydrnet/tests/test_flatten.py:8:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/tests/test_flatten.py:9:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_flatten.py:9:4: R0914: Too many local variables (16/15) (too-many-locals)
spydrnet/tests/test_flatten.py:10:8: C0103: Variable name "nl" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_flatten.py:12:8: C0103: Variable name "d1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_flatten.py:14:8: C0103: Variable name "d2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_flatten.py:16:8: C0103: Variable name "d3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_flatten.py:31:8: C0103: Variable name "d4" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_flatten.py:9:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_flatten.py:52:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_flatten.py:52:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_flatten.py:92:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_flatten.py:92:4: R0913: Too many arguments (6/5) (too-many-arguments)
spydrnet/tests/test_flatten.py:92:4: R0914: Too many local variables (20/15) (too-many-locals)
spydrnet/tests/test_flatten.py:92:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_flatten.py:153:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_flatten.py:153:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_flatten.py:181:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_flatten.py:182:8: C0103: Variable name "nl" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_flatten.py:233:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_flatten.py:238:16: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_flatten.py:241:20: C0103: Variable name "w" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_flatten.py:242:24: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_flatten.py:233:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_flatten.py:253:4: C0103: Argument name "nl" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_flatten.py:253:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_flatten.py:254:8: C0103: Variable name "ti" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_flatten.py:255:8: C0103: Variable name "td" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_flatten.py:253:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_flatten.py:263:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_flatten.py:264:8: C0103: Variable name "nl" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_flatten.py:270:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_flatten.py:271:8: C0103: Variable name "nl" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_flatten.py:3:0: W0611: Unused spydrnet imported as sdn (unused-import)
spydrnet/tests/test_flatten.py:4:0: W0614: Unused import Element from wildcard import (unused-wildcard-import)
spydrnet/tests/test_flatten.py:4:0: W0614: Unused import FirstClassElement from wildcard import (unused-wildcard-import)
spydrnet/tests/test_flatten.py:4:0: W0614: Unused import Library from wildcard import (unused-wildcard-import)
spydrnet/tests/test_flatten.py:4:0: W0614: Unused import Definition from wildcard import (unused-wildcard-import)
spydrnet/tests/test_flatten.py:4:0: W0614: Unused import Port from wildcard import (unused-wildcard-import)
spydrnet/tests/test_flatten.py:4:0: W0614: Unused import Cable from wildcard import (unused-wildcard-import)
spydrnet/tests/test_flatten.py:4:0: W0614: Unused import Wire from wildcard import (unused-wildcard-import)
spydrnet/tests/test_flatten.py:4:0: W0614: Unused import InnerPin from wildcard import (unused-wildcard-import)
spydrnet/tests/test_flatten.py:4:0: W0614: Unused import Bundle from wildcard import (unused-wildcard-import)
spydrnet/tests/test_flatten.py:4:0: W0614: Unused import Pin from wildcard import (unused-wildcard-import)
************* Module spydrnet.tests.test_example_netlist_functionality
spydrnet/tests/test_example_netlist_functionality.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/tests/test_example_netlist_functionality.py:7:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/tests/test_example_netlist_functionality.py:8:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_example_netlist_functionality.py:17:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_example_netlist_functionality.py:3:0: C0411: standard import "import glob" should be placed before "import spydrnet as sdn" (wrong-import-order)
spydrnet/tests/test_example_netlist_functionality.py:4:0: C0411: standard import "import os" should be placed before "import spydrnet as sdn" (wrong-import-order)
************* Module spydrnet.tests.test_uniquify
spydrnet/tests/test_uniquify.py:79:5: W0511: #TODO put this code somewhere where people can use it to visualize simple netlists (fixme)
spydrnet/tests/test_uniquify.py:51:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/tests/test_uniquify.py:57:0: C0301: Line too long (114/100) (line-too-long)
spydrnet/tests/test_uniquify.py:76:0: C0301: Line too long (123/100) (line-too-long)
spydrnet/tests/test_uniquify.py:90:51: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_uniquify.py:92:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_uniquify.py:127:0: C0304: Final newline missing (missing-final-newline)
spydrnet/tests/test_uniquify.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/tests/test_uniquify.py:7:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/tests/test_uniquify.py:8:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_uniquify.py:8:4: R0914: Too many local variables (16/15) (too-many-locals)
spydrnet/tests/test_uniquify.py:9:8: C0103: Variable name "nl" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:11:8: C0103: Variable name "d1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:12:8: C0103: Variable name "d2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:13:8: C0103: Variable name "d3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:21:8: C0103: Variable name "d4" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:8:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_uniquify.py:37:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_uniquify.py:44:12: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:47:16: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:37:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_uniquify.py:61:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_uniquify.py:62:8: C0103: Variable name "nl" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:64:8: C0103: Variable name "d1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:65:8: C0103: Variable name "d2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:66:8: C0103: Variable name "d3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:67:8: C0103: Variable name "i1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:68:8: C0103: Variable name "i2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:98:8: C0103: Variable name "nl" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:100:8: C0103: Variable name "d1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:102:8: C0103: Variable name "d2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:104:8: C0103: Variable name "d3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:106:8: C0103: Variable name "i1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:108:8: C0103: Variable name "i2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:112:8: C0103: Variable name "i3" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:123:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_uniquify.py:124:8: C0103: Variable name "nl" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_uniquify.py:3:0: W0611: Unused spydrnet imported as sdn (unused-import)
spydrnet/tests/test_uniquify.py:4:0: W0611: Unused Definition imported from spydrnet (unused-import)
************* Module spydrnet.tests.test_clone
spydrnet/tests/test_clone.py:396:14: W0511: TODO (fixme)
spydrnet/tests/test_clone.py:9:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_clone.py:15:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_clone.py:93:79: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_clone.py:102:79: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_clone.py:134:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_clone.py:248:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_clone.py:281:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_clone.py:306:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_clone.py:307:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_clone.py:373:89: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_clone.py:374:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_clone.py:383:89: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_clone.py:393:89: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/tests/test_clone.py:403:0: C0304: Final newline missing (missing-final-newline)
spydrnet/tests/test_clone.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/tests/test_clone.py:4:0: W0401: Wildcard import spydrnet.ir (wildcard-import)
spydrnet/tests/test_clone.py:8:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/tests/test_clone.py:12:8: C0103: Variable name "nl" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:19:4: C0103: Argument name "n1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:19:4: C0103: Argument name "n2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:19:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_clone.py:23:4: R0914: Too many local variables (20/15) (too-many-locals)
spydrnet/tests/test_clone.py:23:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_clone.py:58:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:58:4: R0913: Too many arguments (7/5) (too-many-arguments)
spydrnet/tests/test_clone.py:60:8: C0103: Variable name "p1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:66:8: C0103: Variable name "p2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:72:15: C0121: Comparison 'p2.definition == None' should be 'p2.definition is None' (singleton-comparison)
spydrnet/tests/test_clone.py:58:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_clone.py:77:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:86:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:95:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:104:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:115:15: C0121: Comparison 'def3.library == None' should be 'def3.library is None' (singleton-comparison)
spydrnet/tests/test_clone.py:119:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:121:12: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:123:12: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:104:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_clone.py:128:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:132:15: C0121: Comparison 'pin2.wire == None' should be 'pin2.wire is None' (singleton-comparison)
spydrnet/tests/test_clone.py:133:15: C0121: Comparison 'pin2.port == None' should be 'pin2.port is None' (singleton-comparison)
spydrnet/tests/test_clone.py:128:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_clone.py:135:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:143:15: C0121: Comparison 'inst2.parent == None' should be 'inst2.parent is None' (singleton-comparison)
spydrnet/tests/test_clone.py:146:12: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:135:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_clone.py:150:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:161:15: C0121: Comparison 'lib3.netlist == None' should be 'lib3.netlist is None' (singleton-comparison)
spydrnet/tests/test_clone.py:163:12: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:150:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_clone.py:179:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:179:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_clone.py:191:4: C0103: Argument name "r1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:191:4: C0103: Argument name "e" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:191:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:191:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_clone.py:196:4: C0103: Argument name "r1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:196:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:199:12: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:201:16: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:203:20: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:206:27: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:209:20: C0103: Variable name "r" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:211:20: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:213:24: C0103: Variable name "w" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:215:20: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:217:24: C0103: Variable name "pi" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:220:4: C0103: Argument name "r1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:220:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:223:12: C0103: Variable name "l" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:225:16: C0103: Variable name "d" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:227:20: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:230:27: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:233:20: C0103: Variable name "r" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:235:20: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:237:24: C0103: Variable name "w" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:239:20: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:241:24: C0103: Variable name "pi" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:220:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_clone.py:244:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:245:8: C0103: Variable name "r1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:249:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:249:4: R0914: Too many local variables (22/15) (too-many-locals)
spydrnet/tests/test_clone.py:282:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:294:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:308:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:316:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:323:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:333:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:334:8: C0103: Variable name "op" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:337:8: W0212: Access to a protected member _wire of a client class (protected-access)
spydrnet/tests/test_clone.py:338:8: W0212: Access to a protected member _inner_pin of a client class (protected-access)
spydrnet/tests/test_clone.py:340:15: C0121: Comparison 'op2.wire == None' should be 'op2.wire is None' (singleton-comparison)
spydrnet/tests/test_clone.py:341:15: C0121: Comparison 'op2.instance == None' should be 'op2.instance is None' (singleton-comparison)
spydrnet/tests/test_clone.py:342:15: C0121: Comparison 'op2.inner_pin == None' should be 'op2.inner_pin is None' (singleton-comparison)
spydrnet/tests/test_clone.py:333:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_clone.py:344:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:344:4: R0913: Too many arguments (8/5) (too-many-arguments)
spydrnet/tests/test_clone.py:346:8: C0103: Variable name "p1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:353:8: C0103: Variable name "p2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/tests/test_clone.py:360:15: C0121: Comparison 'p2.definition == None' should be 'p2.definition is None' (singleton-comparison)
spydrnet/tests/test_clone.py:363:19: C0121: Comparison 'pin.wire == None' should be 'pin.wire is None' (singleton-comparison)
spydrnet/tests/test_clone.py:344:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_clone.py:365:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:375:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:385:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:395:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:398:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_clone.py:403:15: C0121: Comparison 'wire2.cable == None' should be 'wire2.cable is None' (singleton-comparison)
spydrnet/tests/test_clone.py:398:4: R0201: Method could be a function (no-self-use)
spydrnet/tests/test_clone.py:8:0: R0904: Too many public methods (26/20) (too-many-public-methods)
spydrnet/tests/test_clone.py:4:0: W0614: Unused import Element from wildcard import (unused-wildcard-import)
spydrnet/tests/test_clone.py:4:0: W0614: Unused import FirstClassElement from wildcard import (unused-wildcard-import)
spydrnet/tests/test_clone.py:4:0: W0614: Unused import Bundle from wildcard import (unused-wildcard-import)
spydrnet/tests/test_clone.py:4:0: W0614: Unused import Pin from wildcard import (unused-wildcard-import)
************* Module spydrnet.tests.test_util
spydrnet/tests/test_util.py:22:0: C0305: Trailing newlines (trailing-newlines)
spydrnet/tests/test_util.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/tests/test_util.py:6:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/tests/test_util.py:7:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_util.py:16:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/tests/test_util.py:18:8: W0612: Unused variable 'library1' (unused-variable)
spydrnet/tests/test_util.py:20:8: W0612: Unused variable 'library2' (unused-variable)
spydrnet/tests/test_util.py:16:4: R0201: Method could be a function (no-self-use)
************* Module spydrnet.tests.test_verilog_to_edif
spydrnet/tests/test_verilog_to_edif.py:8:0: C0304: Final newline missing (missing-final-newline)
spydrnet/tests/test_verilog_to_edif.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/tests/test_verilog_to_edif.py:6:0: C0115: Missing class docstring (missing-class-docstring)
************* Module spydrnet.global_state.global_service
spydrnet/global_state/global_service.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/global_state/global_service.py:4:0: C0103: Constant name "_registered_hierarchical_lookup" doesn't conform to UPPER_CASE naming style (invalid-name)
spydrnet/global_state/global_service.py:7:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_service.py:8:4: R1720: Unnecessary "else" after "raise" (no-else-raise)
spydrnet/global_state/global_service.py:15:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_service.py:20:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_service.py:21:4: R1705: Unnecessary "else" after "return" (no-else-return)
spydrnet/global_state/global_service.py:20:0: R0911: Too many return statements (7/6) (too-many-return-statements)
spydrnet/global_state/global_service.py:20:0: R0912: Too many branches (19/12) (too-many-branches)
************* Module spydrnet.global_state.global_callback
spydrnet/global_state/global_callback.py:274:5: W0511: TODO: look into inlining this function perhaps, not not be necessary since is won't be called often. (fixme)
spydrnet/global_state/global_callback.py:388:5: W0511: TODO: look into inlining this function perhaps, may not be necessary since it won't be called often. (fixme)
spydrnet/global_state/global_callback.py:274:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/global_state/global_callback.py:388:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/global_state/global_callback.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/global_state/global_callback.py:165:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:169:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:173:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:177:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:181:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:185:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:189:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:193:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:197:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:201:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:205:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:209:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:213:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:217:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:221:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:225:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:229:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:233:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:237:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:241:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:245:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:249:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:253:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:257:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:261:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:265:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:269:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:279:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:283:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:287:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:291:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:295:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:299:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:303:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:307:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:311:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:315:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:319:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:323:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:327:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:331:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:335:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:339:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:343:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:347:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:351:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:355:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:359:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:363:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:367:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:371:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:375:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:379:0: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/global_callback.py:383:0: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.global_state.tests.test_global_callback
spydrnet/global_state/tests/test_global_callback.py:25:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/global_state/tests/test_global_callback.py:26:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/global_state/tests/test_global_callback.py:27:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/global_state/tests/test_global_callback.py:31:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/global_state/tests/test_global_callback.py:32:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/global_state/tests/test_global_callback.py:33:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
spydrnet/global_state/tests/test_global_callback.py:36:0: C0301: Line too long (139/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:39:0: C0301: Line too long (151/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:42:0: C0301: Line too long (159/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:45:0: C0301: Line too long (171/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:48:0: C0301: Line too long (163/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:51:0: C0301: Line too long (175/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:54:0: C0301: Line too long (163/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:57:0: C0301: Line too long (175/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:60:0: C0301: Line too long (155/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:63:0: C0301: Line too long (171/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:66:0: C0301: Line too long (183/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:69:0: C0301: Line too long (163/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:72:0: C0301: Line too long (159/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:75:0: C0301: Line too long (171/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:78:0: C0301: Line too long (131/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:81:0: C0301: Line too long (143/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:84:0: C0301: Line too long (147/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:87:0: C0301: Line too long (159/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:90:0: C0301: Line too long (151/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:93:0: C0301: Line too long (139/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:94:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/global_state/tests/test_global_callback.py:96:0: C0301: Line too long (139/100) (line-too-long)
spydrnet/global_state/tests/test_global_callback.py:126:0: C0304: Final newline missing (missing-final-newline)
spydrnet/global_state/tests/test_global_callback.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/global_state/tests/test_global_callback.py:7:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/global_state/tests/test_global_callback.py:23:4: C0103: Argument name "a1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/global_state/tests/test_global_callback.py:23:4: C0103: Argument name "a2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/global_state/tests/test_global_callback.py:23:4: C0103: Argument name "ka" doesn't conform to snake_case naming style (invalid-name)
spydrnet/global_state/tests/test_global_callback.py:23:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:29:4: C0103: Argument name "a1" doesn't conform to snake_case naming style (invalid-name)
spydrnet/global_state/tests/test_global_callback.py:29:4: C0103: Argument name "a2" doesn't conform to snake_case naming style (invalid-name)
spydrnet/global_state/tests/test_global_callback.py:29:4: C0103: Argument name "ka" doesn't conform to snake_case naming style (invalid-name)
spydrnet/global_state/tests/test_global_callback.py:29:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:35:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:36:27: W0212: Access to a protected member _container_cable_add_wire of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:36:85: W0212: Access to a protected member _call_cable_add_wire of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:38:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:39:27: W0212: Access to a protected member _container_cable_remove_wire of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:39:91: W0212: Access to a protected member _call_cable_remove_wire of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:41:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:42:27: W0212: Access to a protected member _container_definition_add_port of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:42:95: W0212: Access to a protected member _call_definition_add_port of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:44:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:45:27: W0212: Access to a protected member _container_definition_remove_port of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:45:101: W0212: Access to a protected member _call_definition_remove_port of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:47:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:48:27: W0212: Access to a protected member _container_definition_add_child of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:48:97: W0212: Access to a protected member _call_definition_add_child of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:50:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:51:27: W0212: Access to a protected member _container_definition_remove_child of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:51:103: W0212: Access to a protected member _call_definition_remove_child of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:53:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:54:27: W0212: Access to a protected member _container_definition_add_cable of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:54:97: W0212: Access to a protected member _call_definition_add_cable of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:56:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:57:27: W0212: Access to a protected member _container_definition_remove_cable of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:57:103: W0212: Access to a protected member _call_definition_remove_cable of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:59:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:60:27: W0212: Access to a protected member _container_instance_reference of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:60:93: W0212: Access to a protected member _call_instance_reference of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:62:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:63:27: W0212: Access to a protected member _container_library_add_definition of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:63:101: W0212: Access to a protected member _call_library_add_definition of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:65:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:66:27: W0212: Access to a protected member _container_library_remove_definition of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:66:107: W0212: Access to a protected member _call_library_remove_definition of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:68:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:69:27: W0212: Access to a protected member _container_netlist_top_instance of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:69:97: W0212: Access to a protected member _call_netlist_top_instance of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:71:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:72:27: W0212: Access to a protected member _container_netlist_add_library of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:72:95: W0212: Access to a protected member _call_netlist_add_library of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:74:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:75:27: W0212: Access to a protected member _container_netlist_remove_library of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:75:101: W0212: Access to a protected member _call_netlist_remove_library of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:77:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:78:27: W0212: Access to a protected member _container_port_add_pin of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:78:81: W0212: Access to a protected member _call_port_add_pin of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:80:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:81:27: W0212: Access to a protected member _container_port_remove_pin of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:81:87: W0212: Access to a protected member _call_port_remove_pin of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:83:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:84:27: W0212: Access to a protected member _container_wire_connect_pin of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:84:89: W0212: Access to a protected member _call_wire_connect_pin of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:86:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:87:27: W0212: Access to a protected member _container_wire_disconnect_pin of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:87:95: W0212: Access to a protected member _call_wire_disconnect_pin of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:89:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:90:27: W0212: Access to a protected member _container_dictionary_delete of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:90:91: W0212: Access to a protected member _call_dictionary_delete of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:92:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:93:27: W0212: Access to a protected member _container_dictionary_pop of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:93:85: W0212: Access to a protected member _call_dictionary_pop of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:95:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_callback.py:96:27: W0212: Access to a protected member _container_dictionary_set of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:96:85: W0212: Access to a protected member _call_dictionary_set of a client class (protected-access)
spydrnet/global_state/tests/test_global_callback.py:7:0: R0904: Too many public methods (27/20) (too-many-public-methods)
************* Module spydrnet.global_state.tests.test_global_service
spydrnet/global_state/tests/test_global_service.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/global_state/tests/test_global_service.py:4:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/global_state/tests/test_global_service.py:14:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_service.py:15:8: C0415: Import outside toplevel (spydrnet.global_state.global_service.register_lookup) (import-outside-toplevel)
spydrnet/global_state/tests/test_global_service.py:19:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_service.py:31:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_service.py:52:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/global_state/tests/test_global_service.py:68:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.testing.__init__
spydrnet/testing/__init__.py:2:0: C0304: Final newline missing (missing-final-newline)
************* Module spydrnet.testing
spydrnet/testing/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module spydrnet.testing.test
spydrnet/testing/test.py:3:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/testing/test.py:8:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/testing/test.py:30:0: C0325: Unnecessary parens after 'return' keyword (superfluous-parens)
spydrnet/testing/test.py:34:0: C0304: Final newline missing (missing-final-newline)
spydrnet/testing/test.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/testing/test.py:13:4: C0415: Import outside toplevel (pytest) (import-outside-toplevel)
spydrnet/testing/test.py:13:4: E0401: Unable to import 'pytest' (import-error)
************* Module spydrnet.shortcuts.getter
spydrnet/shortcuts/getter.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/shortcuts/getter.py:1:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/shortcuts/getter.py:9:8: C0415: Import outside toplevel (spydrnet.util.get_netlists) (import-outside-toplevel)
spydrnet/shortcuts/getter.py:17:8: C0415: Import outside toplevel (spydrnet.util.get_libraries) (import-outside-toplevel)
spydrnet/shortcuts/getter.py:25:8: C0415: Import outside toplevel (spydrnet.util.get_definitions) (import-outside-toplevel)
spydrnet/shortcuts/getter.py:33:8: C0415: Import outside toplevel (spydrnet.util.get_instances) (import-outside-toplevel)
spydrnet/shortcuts/getter.py:41:8: C0415: Import outside toplevel (spydrnet.util.get_ports) (import-outside-toplevel)
spydrnet/shortcuts/getter.py:49:8: C0415: Import outside toplevel (spydrnet.util.get_pins) (import-outside-toplevel)
spydrnet/shortcuts/getter.py:57:8: C0415: Import outside toplevel (spydrnet.util.get_cables) (import-outside-toplevel)
spydrnet/shortcuts/getter.py:65:8: C0415: Import outside toplevel (spydrnet.util.get_wires) (import-outside-toplevel)
spydrnet/shortcuts/getter.py:73:8: C0415: Import outside toplevel (spydrnet.util.get_hinstances) (import-outside-toplevel)
spydrnet/shortcuts/getter.py:81:8: C0415: Import outside toplevel (spydrnet.util.get_hports) (import-outside-toplevel)
spydrnet/shortcuts/getter.py:89:8: C0415: Import outside toplevel (spydrnet.util.get_hpins) (import-outside-toplevel)
spydrnet/shortcuts/getter.py:97:8: C0415: Import outside toplevel (spydrnet.util.get_hcables) (import-outside-toplevel)
spydrnet/shortcuts/getter.py:105:8: C0415: Import outside toplevel (spydrnet.util.get_hwires) (import-outside-toplevel)
************* Module spydrnet.compare.compare_netlists
spydrnet/compare/compare_netlists.py:19:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/compare/compare_netlists.py:44:0: C0301: Line too long (110/100) (line-too-long)
spydrnet/compare/compare_netlists.py:67:0: C0301: Line too long (102/100) (line-too-long)
spydrnet/compare/compare_netlists.py:69:0: C0301: Line too long (120/100) (line-too-long)
spydrnet/compare/compare_netlists.py:106:0: C0301: Line too long (107/100) (line-too-long)
spydrnet/compare/compare_netlists.py:152:0: C0301: Line too long (113/100) (line-too-long)
spydrnet/compare/compare_netlists.py:158:0: C0301: Line too long (106/100) (line-too-long)
spydrnet/compare/compare_netlists.py:206:0: C0301: Line too long (117/100) (line-too-long)
spydrnet/compare/compare_netlists.py:209:0: C0301: Line too long (108/100) (line-too-long)
spydrnet/compare/compare_netlists.py:219:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/compare/compare_netlists.py:228:0: C0301: Line too long (104/100) (line-too-long)
spydrnet/compare/compare_netlists.py:246:0: C0301: Line too long (111/100) (line-too-long)
spydrnet/compare/compare_netlists.py:269:0: C0301: Line too long (115/100) (line-too-long)
spydrnet/compare/compare_netlists.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/compare/compare_netlists.py:5:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/compare/compare_netlists.py:12:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/compare_netlists.py:15:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/compare_netlists.py:22:12: C0121: Comparison 'self.ir_composer.top_instance != None' should be 'self.ir_composer.top_instance is not None' (singleton-comparison)
spydrnet/compare/compare_netlists.py:22:53: C0121: Comparison 'self.ir_orig.top_instance != None' should be 'self.ir_orig.top_instance is not None' (singleton-comparison)
spydrnet/compare/compare_netlists.py:30:12: R1724: Unnecessary "else" after "continue" (no-else-continue)
spydrnet/compare/compare_netlists.py:30:15: C0121: Comparison 'orig_library.name == None' should be 'orig_library.name is None' (singleton-comparison)
spydrnet/compare/compare_netlists.py:40:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/compare_netlists.py:54:12: R1724: Unnecessary "else" after "continue" (no-else-continue)
spydrnet/compare/compare_netlists.py:54:15: C0121: Comparison 'orig_definition.name == None' should be 'orig_definition.name is None' (singleton-comparison)
spydrnet/compare/compare_netlists.py:65:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/compare_netlists.py:65:4: R0914: Too many local variables (20/15) (too-many-locals)
spydrnet/compare/compare_netlists.py:78:12: R1724: Unnecessary "else" after "continue" (no-else-continue)
spydrnet/compare/compare_netlists.py:78:15: C0121: Comparison 'orig_port.name == None' should be 'orig_port.name is None' (singleton-comparison)
spydrnet/compare/compare_netlists.py:94:12: R1724: Unnecessary "else" after "continue" (no-else-continue)
spydrnet/compare/compare_netlists.py:94:15: C0121: Comparison 'orig_cable.name == None' should be 'orig_cable.name is None' (singleton-comparison)
spydrnet/compare/compare_netlists.py:109:12: R1724: Unnecessary "else" after "continue" (no-else-continue)
spydrnet/compare/compare_netlists.py:109:15: C0121: Comparison 'orig_instance.name == None' should be 'orig_instance.name is None' (singleton-comparison)
spydrnet/compare/compare_netlists.py:114:16: R1724: Unnecessary "else" after "continue" (no-else-continue)
spydrnet/compare/compare_netlists.py:133:8: C0103: Variable name "ci" doesn't conform to snake_case naming style (invalid-name)
spydrnet/compare/compare_netlists.py:140:12: C0103: Variable name "ci" doesn't conform to snake_case naming style (invalid-name)
spydrnet/compare/compare_netlists.py:142:8: C0103: Variable name "oi" doesn't conform to snake_case naming style (invalid-name)
spydrnet/compare/compare_netlists.py:149:12: C0103: Variable name "oi" doesn't conform to snake_case naming style (invalid-name)
spydrnet/compare/compare_netlists.py:151:8: C0206: Consider iterating with .items() (consider-using-dict-items)
spydrnet/compare/compare_netlists.py:151:17: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
spydrnet/compare/compare_netlists.py:65:4: R0912: Too many branches (18/12) (too-many-branches)
spydrnet/compare/compare_netlists.py:155:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/compare_netlists.py:170:23: C0123: Use isinstance() rather than type() for a typecheck. (unidiomatic-typecheck)
spydrnet/compare/compare_netlists.py:177:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/compare_netlists.py:190:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/compare_netlists.py:194:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/compare_netlists.py:215:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/compare_netlists.py:225:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/compare_netlists.py:251:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/compare_netlists.py:268:16: C0121: Comparison 'instances_orig.reference == None' should be 'instances_orig.reference is None' (singleton-comparison)
spydrnet/compare/compare_netlists.py:268:53: C0121: Comparison 'instances_composer.reference == None' should be 'instances_composer.reference is None' (singleton-comparison)
spydrnet/compare/compare_netlists.py:278:12: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)
spydrnet/compare/compare_netlists.py:278:16: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
spydrnet/compare/compare_netlists.py:279:25: W0612: Unused variable 'value' (unused-variable)
spydrnet/compare/compare_netlists.py:284:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/compare_netlists.py:285:11: C0121: Comparison 'obj == None' should be 'obj is None' (singleton-comparison)
spydrnet/compare/compare_netlists.py:292:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/compare_netlists.py:293:11: C0121: Comparison 'obj == None' should be 'obj is None' (singleton-comparison)
spydrnet/compare/compare_netlists.py:292:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
************* Module spydrnet.compare.tests.test_compare_netlists
spydrnet/compare/tests/test_compare_netlists.py:15:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/compare/tests/test_compare_netlists.py:16:0: C0301: Line too long (116/100) (line-too-long)
spydrnet/compare/tests/test_compare_netlists.py:17:0: C0301: Line too long (122/100) (line-too-long)
spydrnet/compare/tests/test_compare_netlists.py:59:0: C0301: Line too long (129/100) (line-too-long)
spydrnet/compare/tests/test_compare_netlists.py:77:0: C0301: Line too long (118/100) (line-too-long)
spydrnet/compare/tests/test_compare_netlists.py:84:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/compare/tests/test_compare_netlists.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/compare/tests/test_compare_netlists.py:11:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/compare/tests/test_compare_netlists.py:20:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/tests/test_compare_netlists.py:21:12: C0103: Variable name "ii" doesn't conform to snake_case naming style (invalid-name)
spydrnet/compare/tests/test_compare_netlists.py:26:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/tests/test_compare_netlists.py:27:12: C0103: Variable name "ii" doesn't conform to snake_case naming style (invalid-name)
spydrnet/compare/tests/test_compare_netlists.py:33:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/tests/test_compare_netlists.py:34:12: C0103: Variable name "ii" doesn't conform to snake_case naming style (invalid-name)
spydrnet/compare/tests/test_compare_netlists.py:40:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/tests/test_compare_netlists.py:41:12: C0103: Variable name "ii" doesn't conform to snake_case naming style (invalid-name)
spydrnet/compare/tests/test_compare_netlists.py:47:4: C0103: Argument name "ii" doesn't conform to snake_case naming style (invalid-name)
spydrnet/compare/tests/test_compare_netlists.py:47:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/tests/test_compare_netlists.py:65:16: C0103: Variable name "e" doesn't conform to snake_case naming style (invalid-name)
spydrnet/compare/tests/test_compare_netlists.py:70:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/tests/test_compare_netlists.py:71:12: C0103: Variable name "ii" doesn't conform to snake_case naming style (invalid-name)
spydrnet/compare/tests/test_compare_netlists.py:78:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/tests/test_compare_netlists.py:79:12: C0103: Variable name "ii" doesn't conform to snake_case naming style (invalid-name)
spydrnet/compare/tests/test_compare_netlists.py:85:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/compare/tests/test_compare_netlists.py:85:4: R0201: Method could be a function (no-self-use)
************* Module spydrnet.compare.tests.test_composers
spydrnet/compare/tests/test_composers.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/compare/tests/test_composers.py:4:0: C0115: Missing class docstring (missing-class-docstring)
spydrnet/compare/tests/test_composers.py:5:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module spydrnet.callback.callback_listener
spydrnet/callback/callback_listener.py:10:0: C0301: Line too long (131/100) (line-too-long)
spydrnet/callback/callback_listener.py:87:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/callback/callback_listener.py:146:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/callback/callback_listener.py:178:0: C0303: Trailing whitespace (trailing-whitespace)
spydrnet/callback/callback_listener.py:309:0: C0301: Line too long (101/100) (line-too-long)
spydrnet/callback/callback_listener.py:421:0: C0304: Final newline missing (missing-final-newline)
spydrnet/callback/callback_listener.py:1:0: C0114: Missing module docstring (missing-module-docstring)
spydrnet/callback/callback_listener.py:16:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:19:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:22:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:25:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:28:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:31:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:34:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:37:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:40:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:43:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:46:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:49:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:52:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:55:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:58:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:61:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:64:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:67:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:70:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:73:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:76:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:79:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:82:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:85:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:88:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:91:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:94:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:97:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:97:4: R0912: Too many branches (27/12) (too-many-branches)
spydrnet/callback/callback_listener.py:97:4: R0915: Too many statements (55/50) (too-many-statements)
spydrnet/callback/callback_listener.py:179:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:182:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:185:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:188:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:191:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:194:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:197:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:200:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:203:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:206:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:209:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:212:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:215:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:218:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:221:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:224:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:227:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:230:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:233:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:236:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:239:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:242:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:245:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:248:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:251:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:254:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:257:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:260:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:260:4: R0912: Too many branches (27/12) (too-many-branches)
spydrnet/callback/callback_listener.py:260:4: R0915: Too many statements (55/50) (too-many-statements)
spydrnet/callback/callback_listener.py:342:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:345:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:348:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:351:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:354:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:357:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:360:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:363:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:366:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:369:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:372:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:375:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:378:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:381:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:384:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:387:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:390:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:393:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:396:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:399:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:402:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:405:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:408:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:411:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:414:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:417:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:420:4: C0116: Missing function or method docstring (missing-function-docstring)
spydrnet/callback/callback_listener.py:4:0: R0904: Too many public methods (83/20) (too-many-public-methods)
************* Module spydrnet.callback.__init__
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.ir -> spydrnet.ir.port -> spydrnet.ir.bundle -> spydrnet.ir.first_class_element -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances -> spydrnet.util.hierarchical_reference) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet.ir -> spydrnet.ir.port -> spydrnet.ir.bundle -> spydrnet.ir.first_class_element -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances -> spydrnet.util.hierarchical_reference) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet.ir -> spydrnet.ir.port -> spydrnet.ir.bundle -> spydrnet.ir.first_class_element -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_libraries) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.util.hierarchical_reference -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.composers -> spydrnet.composers.verilog.composer -> spydrnet.parsers.verilog.verilog_tokens) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.composers -> spydrnet.composers.verilog.composer -> spydrnet.ir.port -> spydrnet.ir.bundle -> spydrnet.ir.first_class_element -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.composers -> spydrnet.composers.verilog.composer -> spydrnet.ir.cable -> spydrnet.ir.wire -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.composers -> spydrnet.composers.verilog.composer -> spydrnet.ir.cable -> spydrnet.ir.bundle -> spydrnet.ir.first_class_element -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.ir -> spydrnet.ir.netlist -> spydrnet.composers -> spydrnet.composers.verilog.composer -> spydrnet.parsers.verilog.verilog_tokens) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.parsers -> spydrnet.parsers.verilog.parser -> spydrnet.parsers.verilog.tokenizer -> spydrnet.parsers.verilog.verilog_token_factory -> spydrnet.parsers.verilog.verilog_tokens) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.composers -> spydrnet.composers.edif.composer -> spydrnet.ir -> spydrnet.ir.port -> spydrnet.ir.bundle -> spydrnet.ir.first_class_element -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet.ir -> spydrnet.ir.instance -> spydrnet.util.get_ports) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.ir -> spydrnet.ir.instance -> spydrnet.util.get_ports -> spydrnet.util.hierarchical_reference -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_definitions -> spydrnet.util.hierarchical_reference -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_cables -> spydrnet.util.hierarchical_reference -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.ir -> spydrnet.ir.port -> spydrnet.ir.innerpin -> spydrnet.ir.pin -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.ir -> spydrnet.ir.port -> spydrnet.ir.bundle -> spydrnet.ir.first_class_element -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hports) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.ir -> spydrnet.ir.port -> spydrnet.ir.bundle -> spydrnet.ir.first_class_element -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hcables) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.ir -> spydrnet.ir.port -> spydrnet.ir.bundle -> spydrnet.ir.first_class_element -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hpins) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_netlists -> spydrnet.util.hierarchical_reference -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet.shortcuts.getter -> spydrnet.util.get_instances -> spydrnet.util.hierarchical_reference) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet.ir -> spydrnet.ir.port -> spydrnet.ir.bundle -> spydrnet.ir.first_class_element -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_instances -> spydrnet.util.hierarchical_reference) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.ir -> spydrnet.ir.port -> spydrnet.ir.bundle -> spydrnet.ir.first_class_element -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_instances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_ports -> spydrnet.ir -> spydrnet.ir.port -> spydrnet.ir.bundle -> spydrnet.ir.first_class_element -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.ir -> spydrnet.ir.port -> spydrnet.ir.bundle -> spydrnet.ir.first_class_element -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hwires) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_wires -> spydrnet.util.hierarchical_reference -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_instances -> spydrnet.util.hierarchical_reference -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.ir -> spydrnet.ir.port -> spydrnet.ir.bundle -> spydrnet.ir.first_class_element -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_wires) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_pins -> spydrnet.util.hierarchical_reference -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.ir -> spydrnet.ir.pin -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.ir -> spydrnet.ir.first_class_element -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.ir -> spydrnet.ir.bundle -> spydrnet.ir.first_class_element -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.ir -> spydrnet.ir.port -> spydrnet.ir.outerpin -> spydrnet.ir.pin -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.ir -> spydrnet.ir.instance -> spydrnet.ir.views.outerpinsview -> spydrnet.ir.outerpin -> spydrnet.ir.pin -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet.composers -> spydrnet.composers.edif.composer -> spydrnet.ir -> spydrnet.ir.netlist) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.ir -> spydrnet.ir.netlist -> spydrnet.ir.first_class_element -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.ir -> spydrnet.ir.netlist -> spydrnet.ir.library -> spydrnet.ir.first_class_element -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.ir -> spydrnet.ir.wire -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.ir -> spydrnet.ir.netlist -> spydrnet.composers -> spydrnet.composers.verilog.composer -> spydrnet.ir.cable -> spydrnet.ir.wire -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0401: Cyclic import (spydrnet -> spydrnet.util.get_libraries -> spydrnet.ir -> spydrnet.ir.netlist -> spydrnet.ir.definition -> spydrnet.ir.port -> spydrnet.ir.bundle -> spydrnet.ir.first_class_element -> spydrnet.ir.element -> spydrnet.shortcuts.getter -> spydrnet.util.get_hinstances) (cyclic-import)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.tests.test_get_cables:5
==spydrnet.util.tests.test_get_wires:5
    @classmethod
    def setUpClass(cls) -> None:
        cls.netlist = sdn.Netlist()

        leaf_library = cls.netlist.create_library()
        leaf_library.name = 'primitives'

        library = cls.netlist.create_library()
        library.name = 'work'

        leaf_def = leaf_library.create_definition()
        leaf_def.name = 'leaf'
        leaf_port = leaf_def.create_port()
        leaf_port.name = 'I'
        leaf_port.create_pins(1)

        bottom_def = library.create_definition()
        bottom_def.name = 'bottom'
        bottom_port = bottom_def.create_port()
        bottom_port.name = 'I'
        bottom_port.create_pins(1)
        leaf_inst = bottom_def.create_child()
        leaf_inst.reference = leaf_def
        bottom_cable = bottom_def.create_cable()
        bottom_cable.name = 'bottom_cable'
        bottom_wire = bottom_cable.create_wire()
        bottom_wire.connect_pin(bottom_port.pins[0])
        bottom_wire.connect_pin(leaf_inst.pins[leaf_port.pins[0]])
        cls.leaf_inst = leaf_inst

        bottom_floating_wire = bottom_cable.create_wire()

        middle_def = library.create_definition()
        middle_def.name = 'middle'
        middle_port = middle_def.create_port()
        middle_port.name = "I"
        middle_port.create_pin()
        bottom_inst = middle_def.create_child()
        bottom_inst.name = 'bottom'
        bottom_inst.reference = bottom_def
        middle_cable = middle_def.create_cable()
        middle_cable.name = "middle_cable"
        middle_wire = middle_cable.create_wire()
        middle_wire.connect_pin(middle_port.pins[0])
        middle_wire.connect_pin(bottom_inst.pins[bottom_port.pins[0]])
        cls.bottom_inst = bottom_inst

        middle_floating_wire = middle_cable.create_wire()

        top_def = library.create_definition()
        top_def.name = 'top'
        top_port = top_def.create_port()
        top_port.name = "I"
        top_port.create_pin()
        middle_inst = top_def.create_child()
        middle_inst.name = 'middle'
        middle_inst.reference = middle_def
        top_cable = top_def.create_cable()
        top_cable.name = "top_cable"
        top_wire = top_cable.create_wire()
        top_wire.connect_pin(top_port.pins[0])
        top_wire.connect_pin(middle_inst.pins[middle_port.pins[0]])
        cls.middle_inst = middle_inst

        top_floating_wire = top_cable.create_wire()

        top_instance = sdn.Instance()
        top_instance.name = 'top'
        top_instance.reference = top_def
        cls.netlist.top_instance = top_instance

    def test_parameter_checking(self): (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.tests.test_get_hpins:132
==spydrnet.util.tests.test_get_hports:132
        self.assertTrue(len(hrefs) == 0)

    def test_through_hierarchy_again(self):
        netlist = sdn.Netlist()

        library = netlist.create_library()
        library.name = 'work'

        leaf_def = library.create_definition()
        leaf_def.name = 'leaf'
        leaf_port = leaf_def.create_port()
        leaf_port.name = 'I'
        leaf_port.create_pins(1)

        bottom_def = library.create_definition()
        bottom_def.name = 'bottom'
        bottom_port = bottom_def.create_port()
        bottom_port.name = 'I'
        bottom_port.create_pins(1)
        leaf_inst = bottom_def.create_child()
        leaf_inst.name = 'leaf'
        leaf_inst.reference = leaf_def
        bottom_cable = bottom_def.create_cable()
        bottom_cable.name = 'bottom_cable'
        bottom_wire = bottom_cable.create_wire()
        bottom_wire.connect_pin(bottom_port.pins[0])
        bottom_wire.connect_pin(leaf_inst.pins[leaf_port.pins[0]])

        bottom_floating_wire = bottom_cable.create_wire()

        middle_def = library.create_definition()
        middle_def.name = 'middle'
        middle_port = middle_def.create_port()
        middle_port.name = "I"
        middle_port.create_pin()
        bottom_inst = middle_def.create_child()
        bottom_inst.name = 'bottom'
        bottom_inst.reference = bottom_def
        middle_cable = middle_def.create_cable()
        middle_cable.name = "middle_cable"
        middle_wire = middle_cable.create_wire()
        middle_wire.connect_pin(middle_port.pins[0])
        middle_wire.connect_pin(bottom_inst.pins[bottom_port.pins[0]])

        middle_floating_wire = middle_cable.create_wire()

        top_def = library.create_definition()
        top_def.name = 'top'
        top_port = top_def.create_port()
        top_port.name = "I"
        top_port.create_pin()
        middle_inst = top_def.create_child()
        middle_inst.name = 'middle'
        middle_inst.reference = middle_def
        top_cable = top_def.create_cable()
        top_cable.name = "top_cable"
        top_wire = top_cable.create_wire()
        top_wire.connect_pin(top_port.pins[0])
        top_wire.connect_pin(middle_inst.pins[middle_port.pins[0]])

        top_floating_wire = top_cable.create_wire()

        top_instance = sdn.Instance()
        top_instance.name = 'top'
        top_instance.reference = top_def
        netlist.top_instance = top_instance

        #look at wire_name (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.tests.test_get_hcables:164
==spydrnet.util.tests.test_get_hwires:149
    def test_through_hierarchy_again(self):
        netlist = sdn.Netlist()

        library = netlist.create_library()
        library.name = 'work'

        leaf_def = library.create_definition()
        leaf_def.name = 'leaf'
        leaf_port = leaf_def.create_port()
        leaf_port.name = 'I'
        leaf_port.create_pins(1)

        bottom_def = library.create_definition()
        bottom_def.name = 'bottom'
        bottom_port = bottom_def.create_port()
        bottom_port.name = 'I'
        bottom_port.create_pins(1)
        leaf_inst = bottom_def.create_child()
        leaf_inst.reference = leaf_def
        bottom_cable = bottom_def.create_cable()
        bottom_cable.name = 'bottom_cable'
        bottom_wire = bottom_cable.create_wire()
        bottom_wire.connect_pin(bottom_port.pins[0])
        bottom_wire.connect_pin(leaf_inst.pins[leaf_port.pins[0]])

        bottom_floating_wire = bottom_cable.create_wire()

        middle_def = library.create_definition()
        middle_def.name = 'middle'
        middle_port = middle_def.create_port()
        middle_port.name = "I"
        middle_port.create_pin()
        bottom_inst = middle_def.create_child()
        bottom_inst.name = 'bottom'
        bottom_inst.reference = bottom_def
        middle_cable = middle_def.create_cable()
        middle_cable.name = "middle_cable"
        middle_wire = middle_cable.create_wire()
        middle_wire.connect_pin(middle_port.pins[0])
        middle_wire.connect_pin(bottom_inst.pins[bottom_port.pins[0]])

        middle_floating_wire = middle_cable.create_wire()

        top_def = library.create_definition()
        top_def.name = 'top'
        top_port = top_def.create_port()
        top_port.name = "I"
        top_port.create_pin()
        middle_inst = top_def.create_child()
        middle_inst.name = 'middle'
        middle_inst.reference = middle_def
        top_cable = top_def.create_cable()
        top_cable.name = "top_cable"
        top_wire = top_cable.create_wire()
        top_wire.connect_pin(top_port.pins[0])
        top_wire.connect_pin(middle_inst.pins[middle_port.pins[0]])

        top_floating_wire = top_cable.create_wire()

        top_instance = sdn.Instance()
        top_instance.name = 'top'
        top_instance.reference = top_def
        netlist.top_instance = top_instance
 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 3 files
==spydrnet.util.tests.test_get_cables:5
==spydrnet.util.tests.test_get_definitions:5
==spydrnet.util.tests.test_get_wires:5
    @classmethod
    def setUpClass(cls) -> None:
        cls.netlist = sdn.Netlist()

        leaf_library = cls.netlist.create_library()
        leaf_library.name = 'primitives'

        library = cls.netlist.create_library()
        library.name = 'work'

        leaf_def = leaf_library.create_definition()
        leaf_def.name = 'leaf'
        leaf_port = leaf_def.create_port()
        leaf_port.name = 'I'
        leaf_port.create_pins(1)

        bottom_def = library.create_definition()
        bottom_def.name = 'bottom'
        bottom_port = bottom_def.create_port()
        bottom_port.name = 'I'
        bottom_port.create_pins(1)
        leaf_inst = bottom_def.create_child()
        leaf_inst.reference = leaf_def
        bottom_cable = bottom_def.create_cable()
        bottom_cable.name = 'bottom_cable'
        bottom_wire = bottom_cable.create_wire()
        bottom_wire.connect_pin(bottom_port.pins[0])
        bottom_wire.connect_pin(leaf_inst.pins[leaf_port.pins[0]])
        cls.leaf_inst = leaf_inst

        bottom_floating_wire = bottom_cable.create_wire()

        middle_def = library.create_definition()
        middle_def.name = 'middle'
        middle_port = middle_def.create_port()
        middle_port.name = "I"
        middle_port.create_pin()
        bottom_inst = middle_def.create_child()
        bottom_inst.name = 'bottom'
        bottom_inst.reference = bottom_def
        middle_cable = middle_def.create_cable()
        middle_cable.name = "middle_cable"
        middle_wire = middle_cable.create_wire()
        middle_wire.connect_pin(middle_port.pins[0])
        middle_wire.connect_pin(bottom_inst.pins[bottom_port.pins[0]])
        cls.bottom_inst = bottom_inst

        middle_floating_wire = middle_cable.create_wire()

        top_def = library.create_definition()
        top_def.name = 'top'
        top_port = top_def.create_port()
        top_port.name = "I"
        top_port.create_pin()
        middle_inst = top_def.create_child()
        middle_inst.name = 'middle'
        middle_inst.reference = middle_def
        top_cable = top_def.create_cable()
        top_cable.name = "top_cable"
        top_wire = top_cable.create_wire()
        top_wire.connect_pin(top_port.pins[0])
        top_wire.connect_pin(middle_inst.pins[middle_port.pins[0]]) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hcables:283
==spydrnet.util.get_hwires:293
                search_stack += (x for x in _get_hpins_from_hwire(hwire_outside) if x != hpin)


def _get_inner_hwire_from_hpin(hpin):
        wire = hpin.item.wire
        if wire:
            cable = wire.cable
            if cable:
                hport = hpin.parent
                hinst = hport.parent
                hcable = HRef.from_parent_and_item(hinst, cable)
                hwire = HRef.from_parent_and_item(hcable, wire)
                return hwire


def _get_outer_hwire_from_hpin(hpin):
    hport = hpin.parent
    hinst = hport.parent
    instance = hinst.item
    pin = hpin.item
    if pin in instance.pins:
        outer_pin = instance.pins[hpin.item]
        outer_wire = outer_pin.wire
        if outer_wire:
            cable = outer_wire.cable
            if cable:
                hcable = HRef.from_parent_and_item(hinst.parent, cable)
                hwire = HRef.from_parent_and_item(hcable, outer_wire)
                return hwire


def _get_hpins_from_hwire(hwire):
    hcable = hwire.parent
    hinst = hcable.parent
    for pin in hwire.item.pins:
        if isinstance(pin, InnerPin):
            port = pin.port
            if port:
                hport = HRef.from_parent_and_item(hinst, port)
                hpin = HRef.from_parent_and_item(hport, pin)
                yield hpin
        else:
            instance = pin.instance
            inner_pin = pin.inner_pin
            if instance and inner_pin:
                port = inner_pin.port
                if port:
                    other_hinst = HRef.from_parent_and_item(hinst, instance)
                    other_hport = HRef.from_parent_and_item(other_hinst, port)
                    other_hpin = HRef.from_parent_and_item(other_hport, inner_pin)
                    yield other_hpin (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 4 files
==spydrnet.util.tests.test_get_hcables:182
==spydrnet.util.tests.test_get_hpins:153
==spydrnet.util.tests.test_get_hports:153
==spydrnet.util.tests.test_get_hwires:167
        leaf_inst.reference = leaf_def
        bottom_cable = bottom_def.create_cable()
        bottom_cable.name = 'bottom_cable'
        bottom_wire = bottom_cable.create_wire()
        bottom_wire.connect_pin(bottom_port.pins[0])
        bottom_wire.connect_pin(leaf_inst.pins[leaf_port.pins[0]])

        bottom_floating_wire = bottom_cable.create_wire()

        middle_def = library.create_definition()
        middle_def.name = 'middle'
        middle_port = middle_def.create_port()
        middle_port.name = "I"
        middle_port.create_pin()
        bottom_inst = middle_def.create_child()
        bottom_inst.name = 'bottom'
        bottom_inst.reference = bottom_def
        middle_cable = middle_def.create_cable()
        middle_cable.name = "middle_cable"
        middle_wire = middle_cable.create_wire()
        middle_wire.connect_pin(middle_port.pins[0])
        middle_wire.connect_pin(bottom_inst.pins[bottom_port.pins[0]])

        middle_floating_wire = middle_cable.create_wire()

        top_def = library.create_definition()
        top_def.name = 'top'
        top_port = top_def.create_port()
        top_port.name = "I"
        top_port.create_pin()
        middle_inst = top_def.create_child()
        middle_inst.name = 'middle'
        middle_inst.reference = middle_def
        top_cable = top_def.create_cable()
        top_cable.name = "top_cable"
        top_wire = top_cable.create_wire()
        top_wire.connect_pin(top_port.pins[0])
        top_wire.connect_pin(middle_inst.pins[middle_port.pins[0]])

        top_floating_wire = top_cable.create_wire()

        top_instance = sdn.Instance()
        top_instance.name = 'top'
        top_instance.reference = top_def
        netlist.top_instance = top_instance
 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 4 files
==spydrnet.util.tests.test_get_cables:5
==spydrnet.util.tests.test_get_definitions:5
==spydrnet.util.tests.test_get_libraries:5
==spydrnet.util.tests.test_get_wires:5
    @classmethod
    def setUpClass(cls) -> None:
        cls.netlist = sdn.Netlist()

        leaf_library = cls.netlist.create_library()
        leaf_library.name = 'primitives'

        library = cls.netlist.create_library()
        library.name = 'work'

        leaf_def = leaf_library.create_definition()
        leaf_def.name = 'leaf'
        leaf_port = leaf_def.create_port()
        leaf_port.name = 'I'
        leaf_port.create_pins(1)

        bottom_def = library.create_definition()
        bottom_def.name = 'bottom'
        bottom_port = bottom_def.create_port()
        bottom_port.name = 'I'
        bottom_port.create_pins(1)
        leaf_inst = bottom_def.create_child()
        leaf_inst.reference = leaf_def
        bottom_cable = bottom_def.create_cable()
        bottom_cable.name = 'bottom_cable'
        bottom_wire = bottom_cable.create_wire()
        bottom_wire.connect_pin(bottom_port.pins[0])
        bottom_wire.connect_pin(leaf_inst.pins[leaf_port.pins[0]])
        cls.leaf_inst = leaf_inst

        bottom_floating_wire = bottom_cable.create_wire()

        middle_def = library.create_definition()
        middle_def.name = 'middle'
        middle_port = middle_def.create_port()
        middle_port.name = "I"
        middle_port.create_pin()
        bottom_inst = middle_def.create_child()
        bottom_inst.name = 'bottom'
        bottom_inst.reference = bottom_def
        middle_cable = middle_def.create_cable()
        middle_cable.name = "middle_cable"
        middle_wire = middle_cable.create_wire()
        middle_wire.connect_pin(middle_port.pins[0])
        middle_wire.connect_pin(bottom_inst.pins[bottom_port.pins[0]]) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 5 files
==spydrnet.util.tests.test_get_hcables:189
==spydrnet.util.tests.test_get_hpins:160
==spydrnet.util.tests.test_get_hports:160
==spydrnet.util.tests.test_get_hwires:174
==spydrnet.util.tests.test_get_libraries:35
        bottom_floating_wire = bottom_cable.create_wire()

        middle_def = library.create_definition()
        middle_def.name = 'middle'
        middle_port = middle_def.create_port()
        middle_port.name = "I"
        middle_port.create_pin()
        bottom_inst = middle_def.create_child()
        bottom_inst.name = 'bottom'
        bottom_inst.reference = bottom_def
        middle_cable = middle_def.create_cable()
        middle_cable.name = "middle_cable"
        middle_wire = middle_cable.create_wire()
        middle_wire.connect_pin(middle_port.pins[0])
        middle_wire.connect_pin(bottom_inst.pins[bottom_port.pins[0]])

        middle_floating_wire = middle_cable.create_wire()

        top_def = library.create_definition()
        top_def.name = 'top'
        top_port = top_def.create_port()
        top_port.name = "I"
        top_port.create_pin()
        middle_inst = top_def.create_child()
        middle_inst.name = 'middle'
        middle_inst.reference = middle_def
        top_cable = top_def.create_cable()
        top_cable.name = "top_cable"
        top_wire = top_cable.create_wire()
        top_wire.connect_pin(top_port.pins[0])
        top_wire.connect_pin(middle_inst.pins[middle_port.pins[0]])

        top_floating_wire = top_cable.create_wire()

        top_instance = sdn.Instance()
        top_instance.name = 'top'
        top_instance.reference = top_def (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hpins:168
==spydrnet.util.get_hwires:215
    for href in in_yield:
        in_namemap.discard(href)

    if in_namemap:  # namemap is to cable
        for pattern in patterns:
            pattern_is_absolute = _is_pattern_absolute(pattern, is_case, is_re)
            if pattern_is_absolute:
                if pattern in namemap:
                    result = namemap[pattern]
                    for href in result:
                        if href in in_namemap:
                            in_namemap.remove(href)
                            yield href
            else:
                for name in namemap:
                    if _value_matches_pattern(name, pattern, is_case, is_re):
                        result = namemap[name]
                        for href in result:
                            if href in in_namemap:
                                in_namemap.remove(href)
                                yield href


def _update_hwire_namemap(href_instance, recursive, found, namemap):
    search_stack = [(href_instance, False)]
    name_stack = list()
    while search_stack:
        href_instance, visited = search_stack.pop()
        if visited:
            name_stack.pop()
        else:
            search_stack.append((href_instance, True))
            name_stack.append(href_instance.item.name if href_instance.item.name else '')
            item = href_instance.item
            reference = item.reference
            if reference: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hpins:155
==spydrnet.util.get_hports:150
        elif isinstance(obj, Library):
            object_collection += obj.definitions
        elif isinstance(obj, Definition):
            hrefs = set(HRef.get_all_hrefs_of_instances(obj.references))
            bypass_namesearch |= hrefs
            object_collection += hrefs
        elif isinstance(obj, Instance):
            hrefs = set(HRef.get_all_hrefs_of_instances(obj))
            bypass_namesearch |= hrefs
            object_collection += hrefs
        elif isinstance(obj, (Port, Cable, InnerPin, OuterPin, Wire)):
            object_collection += HRef.get_all_hrefs_of_item(obj)

    for href in in_yield:
        in_namemap.discard(href)

    if in_namemap:  # namemap is to cable
        for pattern in patterns:
            pattern_is_absolute = _is_pattern_absolute(pattern, is_case, is_re)
            if pattern_is_absolute:
                if pattern in namemap:
                    result = namemap[pattern]
                    for href in result:
                        if href in in_namemap:
                            in_namemap.remove(href)
                            yield href
            else:
                for name in namemap:
                    if _value_matches_pattern(name, pattern, is_case, is_re):
                        result = namemap[name]
                        for href in result:
                            if href in in_namemap:
                                in_namemap.remove(href)
                                yield href

 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hcables:47
==spydrnet.util.get_hwires:47
    if len(args) == 1 and 'patterns' in kwargs:
        raise TypeError("get_hwires() got multiple values for argument 'patterns'")
    if len(args) > 1 or any(x not in {'patterns', 'selection', 'recursive', 'filter', 'is_case', 'is_re'} for x in
                            kwargs):
        raise TypeError("Unknown usage. Please see help for more information.")

    # Default values
    selection = kwargs.get('selection', Selection.INSIDE)
    if isinstance(selection, str):
        if selection in Selection.__members__:
            selection = Selection[selection]
    if isinstance(selection, Selection) is False:
        raise TypeError("selection must be '{}'".format("', '".join(Selection.__members__.keys())))

    filter_func = kwargs.get('filter', lambda x: True)
    recursive = kwargs.get('recursive', False)
    is_case = kwargs.get('is_case', True)
    is_re = kwargs.get('is_re', False)
    patterns = args[0] if len(args) == 1 else kwargs.get('patterns', ".*" if is_re else "*")

    if isinstance(obj, (FirstClassElement, InnerPin, OuterPin, Wire)) is False:
        try:
            object_collection = list(iter(obj))
        except TypeError:
            object_collection = [obj]
    else:
        object_collection = [obj]
    if all(isinstance(x, (HRef, FirstClassElement, InnerPin, OuterPin, Wire)) for x in object_collection) is False:
        raise TypeError("get_hwires() supports all netlist related objects and hierarchical references or a "
                        "collection of theses as the object searched, unsupported object provided")

    if isinstance(patterns, str):
        patterns = (patterns,)
    assert isinstance(patterns, (FirstClassElement, InnerPin, OuterPin, Wire)) is False
 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.ir.library:100
==spydrnet.util.library:90
        global_callback._call_library_add_definition(self, definition)
        if position is not None:
            self._definitions.insert(position, definition)
        else:
            self._definitions.append(definition)
        definition._library = self

    def remove_definition(self, definition):
        """
        remove the given definition from the library

        parameters
        ----------

        definition - (Definition) the definition to be removed
        """
        assert definition.library == self, "definition is not included in library"
        self._remove_definition(definition)
        self._definitions.remove(definition)

    def remove_definitions_from(self, definitions):
        """
        remove a set of definitions from the library. all definitions provided must be in the library

        parameters
        ----------

        definitions - (Set of Definition type objects) the definitions to be removed
        """ (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.ir.library:37
==spydrnet.util.library:34
            for key in properties:
                self[key] = properties[key]

    @property
    def netlist(self):
        """
        get the netlist that contains this library
        """
        return self._netlist

    @property
    def definitions(self):
        """
        return a list of all the definitions that are included in this library
        """
        return ListView(self._definitions)

    @definitions.setter
    def definitions(self, value):
        """
        set the definitions to a new reordered set of definitions. This function cannot be used to add or remove
        definitions

        Parameters
        ----------

        value - (List containing Definition type objects) The reordered list
        """ (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.ir.library:177
==spydrnet.util.library:165
        assert self not in memo, "the object should not have been copied twice in this pass"
        c = Library()
        memo[self] = c
        c._netlist = None
        c._data = deepcopy(self._data)

        new_definitions = list()
        for definition in self._definitions:
            new_definitions.append(definition._clone(memo))
        c._definitions = new_definitions

        for definition in c._definitions:
            definition._library = c
            definition._clone_rip_and_replace(memo)
        return c

    def clone(self):
        """Clone the library in an API safe manner.

        The following describes the structure of the returned object:

         * the instances that pointed to reference definitions within the library will have updated references
         * the instances that pointed to reference definitions outside the library will maintain their definitions
         * the references lists (of definitions) both inside and outsde the library will be updated to reflect the change
         * all definitions are cloned within the library. (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.tests.test_get_definitions:52
==spydrnet.util.tests.test_get_libraries:51
        middle_floating_wire = middle_cable.create_wire()

        top_def = library.create_definition()
        top_def.name = 'top'
        top_port = top_def.create_port()
        top_port.name = "I"
        top_port.create_pin()
        middle_inst = top_def.create_child()
        middle_inst.name = 'middle'
        middle_inst.reference = middle_def
        top_cable = top_def.create_cable()
        top_cable.name = "top_cable"
        top_wire = top_cable.create_wire()
        top_wire.connect_pin(top_port.pins[0])
        top_wire.connect_pin(middle_inst.pins[middle_port.pins[0]])

        top_floating_wire = top_cable.create_wire()

        top_instance = sdn.Instance()
        top_instance.name = 'top'
        top_instance.reference = top_def
        cls.netlist.top_instance = top_instance

    def test_parameter_checking(self): (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 5 files
==spydrnet.util.get_hcables:213
==spydrnet.util.get_hinstances:141
==spydrnet.util.get_hpins:168
==spydrnet.util.get_hports:163
==spydrnet.util.get_hwires:215
    for href in in_yield:
        in_namemap.discard(href)

    if in_namemap:  # namemap is to cable
        for pattern in patterns:
            pattern_is_absolute = _is_pattern_absolute(pattern, is_case, is_re)
            if pattern_is_absolute:
                if pattern in namemap:
                    result = namemap[pattern]
                    for href in result:
                        if href in in_namemap:
                            in_namemap.remove(href)
                            yield href
            else:
                for name in namemap:
                    if _value_matches_pattern(name, pattern, is_case, is_re):
                        result = namemap[name]
                        for href in result:
                            if href in in_namemap:
                                in_namemap.remove(href)
                                yield href

 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_instances:179
==spydrnet.util.get_libraries:197
            if other_instance in found:
                continue
            found.add(other_instance)
            name = other_instance[key] if key in other_instance else ''
            if name not in namemap:
                namemap[name] = list()
            namemap[name].append(other_instance)
        for pattern in patterns:
            pattern_is_absolute = _is_pattern_absolute(pattern, is_case, is_re)
            if pattern_is_absolute:
                if pattern in namemap:
                    result = namemap[pattern]
                    for instance in result:
                        yield instance
            else:
                discard = set()
                for instance in found:
                    value = instance[key] if key in instance else ''
                    if _value_matches_pattern(value, pattern, is_case, is_re):
                        discard.add(instance)
                        yield instance
                found -= discard (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hcables:186
==spydrnet.util.get_hwires:189
                        else:
                            port = pin.port
                            href_port = HRef.from_parent_and_item(href_inst, port)
                            href_pin = HRef.from_parent_and_item(href_port, pin)
                        object_collection.append(href_pin)
            elif isinstance(item, InnerPin):
                hpin_search.add(obj)
        elif isinstance(obj, Library):
            object_collection += obj.definitions
        elif isinstance(obj, Definition):
            hrefs = set(HRef.get_all_hrefs_of_instances(obj.references))
            bypass_namesearch |= hrefs
            object_collection += hrefs
        elif isinstance(obj, Instance):
            hrefs = set(HRef.get_all_hrefs_of_instances(obj))
            bypass_namesearch |= hrefs
            object_collection += hrefs
        elif isinstance(obj, (Port, Cable, InnerPin, OuterPin, Wire)):
            object_collection += HRef.get_all_hrefs_of_item(obj)

    if hpin_search:
        for hwire in _get_hwires_from_hpins(hpin_search, selection): (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 5 files
==spydrnet.util.tests.test_get_definitions:52
==spydrnet.util.tests.test_get_hcables:205
==spydrnet.util.tests.test_get_hpins:176
==spydrnet.util.tests.test_get_hports:176
==spydrnet.util.tests.test_get_hwires:190
        middle_floating_wire = middle_cable.create_wire()

        top_def = library.create_definition()
        top_def.name = 'top'
        top_port = top_def.create_port()
        top_port.name = "I"
        top_port.create_pin()
        middle_inst = top_def.create_child()
        middle_inst.name = 'middle'
        middle_inst.reference = middle_def
        top_cable = top_def.create_cable()
        top_cable.name = "top_cable"
        top_wire = top_cable.create_wire()
        top_wire.connect_pin(top_port.pins[0])
        top_wire.connect_pin(middle_inst.pins[middle_port.pins[0]])

        top_floating_wire = top_cable.create_wire()

        top_instance = sdn.Instance()
        top_instance.name = 'top'
        top_instance.reference = top_def (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hcables:122
==spydrnet.util.get_hwires:124
                            if recursive or selection == Selection.ALL:
                                for child in reference.children:
                                    href_child = HRef.from_parent_and_item(obj, child)
                                    bypass_namesearch.add(href_child)
                                    object_collection.append(href_child)
                        if selection in {Selection.OUTSIDE, Selection.BOTH, Selection.ALL}:
                            for port in reference.ports:
                                href_port = HRef.from_parent_and_item(obj, port)
                                for pin in port.pins:
                                    href_pin = HRef.from_parent_and_item(href_port, pin)
                                    hpin_search.add(href_pin)
            elif isinstance(item, Port):
                for pin in item.pins:
                    href_pin = HRef.from_parent_and_item(obj, pin)
                    hpin_search.add(href_pin)
            elif isinstance(item, Cable):
                for wire in item.wires:
                    href_wire = HRef.from_parent_and_item(obj, wire)
                    object_collection.append(href_wire)
            elif isinstance(item, Wire):
                if selection == Selection.INSIDE: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 3 files
==spydrnet.util.get_hcables:61
==spydrnet.util.get_hpins:50
==spydrnet.util.get_hwires:61
    filter_func = kwargs.get('filter', lambda x: True)
    recursive = kwargs.get('recursive', False)
    is_case = kwargs.get('is_case', True)
    is_re = kwargs.get('is_re', False)
    patterns = args[0] if len(args) == 1 else kwargs.get('patterns', ".*" if is_re else "*")

    if isinstance(obj, (FirstClassElement, InnerPin, OuterPin, Wire)) is False:
        try:
            object_collection = list(iter(obj))
        except TypeError:
            object_collection = [obj]
    else:
        object_collection = [obj]
    if all(isinstance(x, (HRef, FirstClassElement, InnerPin, OuterPin, Wire)) for x in object_collection) is False:
        raise TypeError("get_hwires() supports all netlist related objects and hierarchical references or a "
                        "collection of theses as the object searched, unsupported object provided")

    if isinstance(patterns, str):
        patterns = (patterns,)
    assert isinstance(patterns, (FirstClassElement, InnerPin, OuterPin, Wire)) is False
 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.parsers.edif.tokenizer:39
==spydrnet.parsers.verilog.tokenizer:44
        else:
            if isinstance(input_source, io.TextIOBase) is False:
                self.input_stream = io.TextIOWrapper(input_source)
            else:
                self.input_stream = input_source

        self.generator = self.generate_tokens()

    def __del__(self):
        if hasattr(self, "input_stream"):
            self.close()

    def has_next(self):
        try:
            self.peek()
            return True
        except StopIteration:
            return False

    def next(self): (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.tests.test_get_hcables:137
==spydrnet.util.tests.test_get_hwires:124
    def test_through_hierarchy(self):
        netlist = sdn.Netlist()
        library = netlist.create_library()
        definition = library.create_definition()
        instance = sdn.Instance()
        instance.reference = definition
        netlist.top_instance = instance

        middle_inst = definition.create_child()
        middle_def = library.create_definition()
        middle_cable = middle_def.create_cable()
        middle_wire = middle_cable.create_wire()
        middle_inst.reference = middle_def

        leaf_inst = middle_def.create_child()
        leaf_def = library.create_definition()
        leaf_inst.reference = leaf_def

        top_inst_href = next(sdn.get_hinstances(netlist.top_instance)) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_instances:59
==spydrnet.util.get_libraries:59
        raise TypeError("Unknown usage. Please see help for more information.")

    # Default values
    selection = kwargs.get('selection', Selection.INSIDE)
    if isinstance(selection, str):
        if selection in Selection.__members__:
            selection = Selection[selection]
    if selection not in {Selection.INSIDE, Selection.OUTSIDE}:
        raise TypeError("selection must be '{}'".format("', '".join([Selection.INSIDE.name, Selection.OUTSIDE.name])))

    filter_func = kwargs.get('filter', lambda x: True)
    is_case = kwargs.get('is_case', True)
    is_re = kwargs.get('is_re', False)
    patterns = args[0] if len(args) == 1 else kwargs.get('patterns', ".*" if is_re else "*")
    key = kwargs.get('key', ".NAME")
    recursive = kwargs.get('recursive', False)

    if isinstance(obj, (FirstClassElement, InnerPin, OuterPin, Wire)) is False:
        try: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hpins:45
==spydrnet.util.get_hports:45
    if len(args) > 1 or any(x not in {'patterns', 'recursive', 'filter', 'is_case', 'is_re'} for x in
                            kwargs):
        raise TypeError("Unknown usage. Please see help for more information.")

    # Default values
    filter_func = kwargs.get('filter', lambda x: True)
    recursive = kwargs.get('recursive', False)
    is_case = kwargs.get('is_case', True)
    is_re = kwargs.get('is_re', False)
    patterns = args[0] if len(args) == 1 else kwargs.get('patterns', ".*" if is_re else "*")

    if isinstance(obj, (FirstClassElement, InnerPin, OuterPin, Wire)) is False:
        try:
            object_collection = list(iter(obj))
        except TypeError:
            object_collection = [obj]
    else:
        object_collection = [obj]
    if all(isinstance(x, (HRef, FirstClassElement, InnerPin, OuterPin, Wire)) for x in object_collection) is False: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_definitions:57
==spydrnet.util.get_libraries:57
    if len(args) > 1 or any(x not in {'patterns', 'key', 'filter', 'is_case', 'is_re', 'selection', 'recursive'}
                            for x in kwargs):
        raise TypeError("Unknown usage. Please see help for more information.")

    # Default values
    selection = kwargs.get('selection', Selection.INSIDE)
    if isinstance(selection, str):
        if selection in Selection.__members__:
            selection = Selection[selection]
    if selection not in {Selection.INSIDE, Selection.OUTSIDE}:
        raise TypeError("selection must be '{}'".format("', '".join([Selection.INSIDE.name, Selection.OUTSIDE.name])))

    filter_func = kwargs.get('filter', lambda x: True)
    is_case = kwargs.get('is_case', True)
    is_re = kwargs.get('is_re', False)
    patterns = args[0] if len(args) == 1 else kwargs.get('patterns', ".*" if is_re else "*")
    key = kwargs.get('key', ".NAME")
    recursive = kwargs.get('recursive', False)
 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 4 files
==spydrnet.util.tests.test_get_hcables:164
==spydrnet.util.tests.test_get_hpins:134
==spydrnet.util.tests.test_get_hports:134
==spydrnet.util.tests.test_get_hwires:149
    def test_through_hierarchy_again(self):
        netlist = sdn.Netlist()

        library = netlist.create_library()
        library.name = 'work'

        leaf_def = library.create_definition()
        leaf_def.name = 'leaf'
        leaf_port = leaf_def.create_port()
        leaf_port.name = 'I'
        leaf_port.create_pins(1)

        bottom_def = library.create_definition()
        bottom_def.name = 'bottom'
        bottom_port = bottom_def.create_port()
        bottom_port.name = 'I'
        bottom_port.create_pins(1)
        leaf_inst = bottom_def.create_child() (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_netlists:47
==spydrnet.util.get_ports:47
    if len(args) > 1 or any(x not in {'patterns', 'key', 'filter', 'is_case', 'is_re'} for x in kwargs):
        raise TypeError("Unknown usage. Please see help for more information.")

    # Default values
    filter_func = kwargs.get('filter', lambda x: True)
    is_case = kwargs.get('is_case', True)
    is_re = kwargs.get('is_re', False)
    patterns = args[0] if len(args) == 1 else kwargs.get('patterns', ".*" if is_re else "*")
    key = kwargs.get('key', ".NAME")

    if isinstance(obj, (FirstClassElement, InnerPin, OuterPin, Wire)) is False:
        try:
            object_collection = list(iter(obj))
        except TypeError:
            object_collection = [obj]
    else:
        object_collection = [obj]
    if all(isinstance(x, (Element, HRef)) for x in object_collection) is False: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hcables:258
==spydrnet.util.get_hwires:266
                    name_stack.pop()
                if recursive:
                    for child in reference.children:
                        if child.reference and child.reference.is_leaf() is False:
                            href_child = HRef.from_parent_and_item(href_instance, child)
                            search_stack.append((href_child, False))


def _get_hwires_from_hpins(hpin_search, selection):
    found_hwires = set()
    search_stack = list(hpin_search)
    while search_stack:
        hpin = search_stack.pop()
        if selection in {Selection.INSIDE, Selection.BOTH, Selection.ALL}:
            hwire_inside = _get_inner_hwire_from_hpin(hpin)
            if hwire_inside and hwire_inside not in found_hwires:
                found_hwires.add(hwire_inside)
                yield hwire_inside (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hcables:91
==spydrnet.util.get_hwires:91
    in_namemap = set()
    in_yield = set()
    namemap = dict()
    hpin_search = set()
    bypass_namesearch = set()
    while object_collection:
        obj = object_collection.pop()
        if isinstance(obj, Netlist):
            top_instance = obj.top_instance
            if top_instance:
                href = HRef.from_parent_and_item(None, top_instance)
                object_collection.append(href)
        elif isinstance(obj, HRef):
            if obj.is_valid is False:
                continue
            item = obj.item
            if isinstance(item, Instance):
                if selection == Selection.INSIDE and obj not in bypass_namesearch: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_cables:222
==spydrnet.util.get_ports:136
        for pattern in patterns:
            pattern_is_absolute = _is_pattern_absolute(pattern, is_case, is_re)
            if pattern_is_absolute:
                if pattern in namemap:
                    result = namemap[pattern]
                    del namemap[pattern]
                    for port in result:
                        yield port
            else:
                names_to_remove = list()
                for name in namemap:
                    if _value_matches_pattern(name, pattern, is_case, is_re):
                        result = namemap[name]
                        names_to_remove.append(name)
                        for port in result:
                            yield port
                for name in names_to_remove:
                    del namemap[name] (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.ir.definition:494
==spydrnet.ir.port:257
        return c

    def clone(self):
        """Clone the port in an api safe way.

        The following rules will be observed:

         * all the pins will be disconnected from wires
         * the port will be orphaned
         * all pins will belong to the returned port
         * direction, downto, is_scalar, lower_index will all be maintained

        """
        c = self._clone(dict())
        c._clone_rip()
        return c
 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 6 files
==spydrnet.util.tests.test_get_cables:16
==spydrnet.util.tests.test_get_definitions:16
==spydrnet.util.tests.test_get_hcables:171
==spydrnet.util.tests.test_get_hwires:156
==spydrnet.util.tests.test_get_libraries:16
==spydrnet.util.tests.test_get_wires:16
        leaf_def.name = 'leaf'
        leaf_port = leaf_def.create_port()
        leaf_port.name = 'I'
        leaf_port.create_pins(1)

        bottom_def = library.create_definition()
        bottom_def.name = 'bottom'
        bottom_port = bottom_def.create_port()
        bottom_port.name = 'I'
        bottom_port.create_pins(1)
        leaf_inst = bottom_def.create_child()
        leaf_inst.reference = leaf_def
        bottom_cable = bottom_def.create_cable()
        bottom_cable.name = 'bottom_cable'
        bottom_wire = bottom_cable.create_wire()
        bottom_wire.connect_pin(bottom_port.pins[0])
        bottom_wire.connect_pin(leaf_inst.pins[leaf_port.pins[0]]) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 3 files
==spydrnet.util.get_hinstances:46
==spydrnet.util.get_hpins:47
==spydrnet.util.get_hports:47
        raise TypeError("Unknown usage. Please see help for more information.")

    # Default values
    filter_func = kwargs.get('filter', lambda x: True)
    recursive = kwargs.get('recursive', False)
    is_case = kwargs.get('is_case', True)
    is_re = kwargs.get('is_re', False)
    patterns = args[0] if len(args) == 1 else kwargs.get('patterns', ".*" if is_re else "*")

    if isinstance(obj, (FirstClassElement, InnerPin, OuterPin, Wire)) is False:
        try:
            object_collection = list(iter(obj))
        except TypeError:
            object_collection = [obj]
    else:
        object_collection = [obj]
    if all(isinstance(x, (HRef, FirstClassElement, InnerPin, OuterPin, Wire)) for x in object_collection) is False: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hpins:122
==spydrnet.util.get_hports:118
            elif isinstance(item, Cable):
                for wire in item.wires:
                    href_wire = HRef.from_parent_and_item(obj, wire)
                    object_collection.append(href_wire)
            elif isinstance(item, Wire):
                    href_parent_cable = obj.parent
                    href_parent_instance = href_parent_cable.parent
                    for pin in item.pins:
                        if isinstance(pin, OuterPin):
                            instance = pin.instance
                            if instance:
                                href_inst = HRef.from_parent_and_item(href_parent_instance, pin.instance)
                                inner_pin = pin.inner_pin
                                if inner_pin:
                                    inner_port = inner_pin.port
                                    if inner_port:
                                        href_port = HRef.from_parent_and_item(href_inst, inner_port) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hpins:80
==spydrnet.util.get_hports:80
    in_namemap = set()
    in_yield = set()
    namemap = dict()
    bypass_namesearch = set()
    while object_collection:
        obj = object_collection.pop()
        if isinstance(obj, Netlist):
            top_instance = obj.top_instance
            if top_instance:
                href = HRef.from_parent_and_item(None, top_instance)
                object_collection.append(href)
        elif isinstance(obj, HRef):
            if obj.is_valid is False:
                continue
            item = obj.item
            if isinstance(item, Instance):
                if obj not in bypass_namesearch: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_definitions:59
==spydrnet.util.get_instances:59
        raise TypeError("Unknown usage. Please see help for more information.")

    # Default values
    selection = kwargs.get('selection', Selection.INSIDE)
    if isinstance(selection, str):
        if selection in Selection.__members__:
            selection = Selection[selection]
    if selection not in {Selection.INSIDE, Selection.OUTSIDE}:
        raise TypeError("selection must be '{}'".format("', '".join([Selection.INSIDE.name, Selection.OUTSIDE.name])))

    filter_func = kwargs.get('filter', lambda x: True)
    is_case = kwargs.get('is_case', True)
    is_re = kwargs.get('is_re', False)
    patterns = args[0] if len(args) == 1 else kwargs.get('patterns', ".*" if is_re else "*")
    key = kwargs.get('key', ".NAME")
    recursive = kwargs.get('recursive', False)
 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hcables:237
==spydrnet.util.get_hwires:239
    search_stack = [(href_instance, False)]
    name_stack = list()
    while search_stack:
        href_instance, visited = search_stack.pop()
        if visited:
            name_stack.pop()
        else:
            search_stack.append((href_instance, True))
            name_stack.append(href_instance.item.name if href_instance.item.name else '')
            item = href_instance.item
            reference = item.reference
            if reference:
                for cable in reference.cables:
                    hcable = HRef.from_parent_and_item(href_instance, cable)
                    name_stack.append(cable.name if cable.name else '')
                    cable_hname = '/'.join(name_stack[1:]) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hpins:192
==spydrnet.util.get_hports:187
    search_stack = [(href_instance, False)]
    name_stack = list()
    while search_stack:
        href_instance, visited = search_stack.pop()
        if visited:
            name_stack.pop()
        else:
            search_stack.append((href_instance, True))
            name_stack.append(href_instance.item.name if href_instance.item.name else '')
            item = href_instance.item
            reference = item.reference
            if reference:
                for port in reference.ports:
                    hport = HRef.from_parent_and_item(href_instance, port)
                    name_stack.append(port.name if port.name else '')
                    port_hname = '/'.join(name_stack[1:]) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.ir.library:131
==spydrnet.util.library:119
        if isinstance(definitions, set):
            excluded_definitions = definitions
        else:
            excluded_definitions = set(definitions)
        assert all(x.library == self for x in excluded_definitions), "Some definitions to remove are not included in " \
                                                                     "the library "
        included_definitions = list()
        for definition in self._definitions:
            if definition not in excluded_definitions:
                included_definitions.append(definition)
            else:
                self._remove_definition(definition)
        self._definitions = included_definitions

    def _remove_definition(self, definition):
        """ (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.ir.library:0
==spydrnet.util.library:0
from spydrnet.ir.first_class_element import FirstClassElement
from spydrnet.ir.definition import Definition
from spydrnet.ir.views.listview import ListView
from spydrnet.global_state import global_callback
from spydrnet.global_state.global_callback import _call_create_library
from copy import deepcopy, copy, error


class Library(FirstClassElement):
    """
    Represents a library object.

    Contains a pointer to parent netlist and definitions.
    """
    __slots__ = ['_netlist', '_definitions']
 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.ir.cable:174
==spydrnet.ir.innerpin:43
        return c

    def clone(self):
        """Clone the inner pin in an api safe way.

        The following conditions will be met:

         * The inner pin will be orphaned from any ports
         * The pin will not be connected to any wires
         * The pin will not be referenced to by any wires or outer pins

        """
        c = self._clone(dict())
        c._clone_rip()
        return c (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 7 files
==spydrnet.util.tests.test_get_cables:52
==spydrnet.util.tests.test_get_hcables:205
==spydrnet.util.tests.test_get_hpins:176
==spydrnet.util.tests.test_get_hports:176
==spydrnet.util.tests.test_get_hwires:190
==spydrnet.util.tests.test_get_libraries:51
==spydrnet.util.tests.test_get_wires:52
        middle_floating_wire = middle_cable.create_wire()

        top_def = library.create_definition()
        top_def.name = 'top'
        top_port = top_def.create_port()
        top_port.name = "I"
        top_port.create_pin()
        middle_inst = top_def.create_child()
        middle_inst.name = 'middle'
        middle_inst.reference = middle_def
        top_cable = top_def.create_cable()
        top_cable.name = "top_cable"
        top_wire = top_cable.create_wire()
        top_wire.connect_pin(top_port.pins[0])
        top_wire.connect_pin(middle_inst.pins[middle_port.pins[0]]) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 7 files
==spydrnet.util.tests.test_get_cables:35
==spydrnet.util.tests.test_get_definitions:35
==spydrnet.util.tests.test_get_hcables:189
==spydrnet.util.tests.test_get_hpins:160
==spydrnet.util.tests.test_get_hports:160
==spydrnet.util.tests.test_get_hwires:174
==spydrnet.util.tests.test_get_wires:35
        bottom_floating_wire = bottom_cable.create_wire()

        middle_def = library.create_definition()
        middle_def.name = 'middle'
        middle_port = middle_def.create_port()
        middle_port.name = "I"
        middle_port.create_pin()
        bottom_inst = middle_def.create_child()
        bottom_inst.name = 'bottom'
        bottom_inst.reference = bottom_def
        middle_cable = middle_def.create_cable()
        middle_cable.name = "middle_cable"
        middle_wire = middle_cable.create_wire()
        middle_wire.connect_pin(middle_port.pins[0])
        middle_wire.connect_pin(bottom_inst.pins[bottom_port.pins[0]]) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_cables:66
==spydrnet.util.get_definitions:69
    filter_func = kwargs.get('filter', lambda x: True)
    is_case = kwargs.get('is_case', True)
    is_re = kwargs.get('is_re', False)
    patterns = args[0] if len(args) == 1 else kwargs.get('patterns', ".*" if is_re else "*")
    key = kwargs.get('key', ".NAME")
    recursive = kwargs.get('recursive', False)

    if isinstance(obj, (Element, HRef)) is False:
        try:
            object_collection = list(iter(obj))
        except TypeError:
            object_collection = [obj]
    else:
        object_collection = [obj]
    if all(isinstance(x, (Element, HRef)) for x in object_collection) is False: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 4 files
==spydrnet.util.get_hcables:61
==spydrnet.util.get_hinstances:49
==spydrnet.util.get_hports:50
==spydrnet.util.get_hwires:61
    filter_func = kwargs.get('filter', lambda x: True)
    recursive = kwargs.get('recursive', False)
    is_case = kwargs.get('is_case', True)
    is_re = kwargs.get('is_re', False)
    patterns = args[0] if len(args) == 1 else kwargs.get('patterns', ".*" if is_re else "*")

    if isinstance(obj, (FirstClassElement, InnerPin, OuterPin, Wire)) is False:
        try:
            object_collection = list(iter(obj))
        except TypeError:
            object_collection = [obj]
    else:
        object_collection = [obj]
    if all(isinstance(x, (HRef, FirstClassElement, InnerPin, OuterPin, Wire)) for x in object_collection) is False: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.tests.test_get_pins:49
==spydrnet.util.tests.test_get_ports:83
        netlist = sdn.Netlist()
        library = netlist.create_library()
        definition = library.create_definition()
        port = definition.create_port()
        pin = port.create_pin()
        cable = definition.create_cable()
        wire = cable.create_wire()
        wire.connect_pin(pin)
        instance = sdn.Instance()
        instance.reference = definition
        netlist.top_instance = instance
        href = next(sdn.get_hcables(cable))
 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 3 files
==spydrnet.util.get_hcables:50
==spydrnet.util.get_hwires:50
==spydrnet.util.get_wires:37
                            kwargs):
        raise TypeError("Unknown usage. Please see help for more information.")

    # Default values
    selection = kwargs.get('selection', Selection.INSIDE)
    if isinstance(selection, str):
        if selection in Selection.__members__:
            selection = Selection[selection]
    if isinstance(selection, Selection) is False:
        raise TypeError("selection must be '{}'".format("', '".join(Selection.__members__.keys())))

    filter_func = kwargs.get('filter', lambda x: True)
    recursive = kwargs.get('recursive', False) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 4 files
==spydrnet.util.get_hcables:193
==spydrnet.util.get_hpins:155
==spydrnet.util.get_hports:150
==spydrnet.util.get_hwires:196
        elif isinstance(obj, Library):
            object_collection += obj.definitions
        elif isinstance(obj, Definition):
            hrefs = set(HRef.get_all_hrefs_of_instances(obj.references))
            bypass_namesearch |= hrefs
            object_collection += hrefs
        elif isinstance(obj, Instance):
            hrefs = set(HRef.get_all_hrefs_of_instances(obj))
            bypass_namesearch |= hrefs
            object_collection += hrefs
        elif isinstance(obj, (Port, Cable, InnerPin, OuterPin, Wire)):
            object_collection += HRef.get_all_hrefs_of_item(obj)
 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 4 files
==spydrnet.util.get_hcables:95
==spydrnet.util.get_hpins:83
==spydrnet.util.get_hports:83
==spydrnet.util.get_hwires:95
    bypass_namesearch = set()
    while object_collection:
        obj = object_collection.pop()
        if isinstance(obj, Netlist):
            top_instance = obj.top_instance
            if top_instance:
                href = HRef.from_parent_and_item(None, top_instance)
                object_collection.append(href)
        elif isinstance(obj, HRef):
            if obj.is_valid is False:
                continue
            item = obj.item
            if isinstance(item, Instance): (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.tests.test_get_hcables:135
==spydrnet.util.tests.test_get_hinstances:106
        self.assertTrue(len(hrefs) == 0)

    def test_through_hierarchy(self):
        netlist = sdn.Netlist()
        library = netlist.create_library()
        definition = library.create_definition()
        instance = sdn.Instance()
        instance.reference = definition
        netlist.top_instance = instance

        middle_inst = definition.create_child()
        middle_def = library.create_definition() (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 4 files
==spydrnet.util.get_hcables:237
==spydrnet.util.get_hpins:192
==spydrnet.util.get_hports:187
==spydrnet.util.get_hwires:239
    search_stack = [(href_instance, False)]
    name_stack = list()
    while search_stack:
        href_instance, visited = search_stack.pop()
        if visited:
            name_stack.pop()
        else:
            search_stack.append((href_instance, True))
            name_stack.append(href_instance.item.name if href_instance.item.name else '')
            item = href_instance.item
            reference = item.reference
            if reference: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.tests.test_flatten:37
==spydrnet.tests.test_uniquify:23
        i11.reference = d3
        i12.reference = d3
        i13.reference = d3
        i24.reference = d1
        i25.reference = d1
        i26.reference = d3
        i27.reference = d3
        i38.reference = d4
        i39.reference = d4
        nl.top_instance = Instance()
        nl.top_instance.reference = d2 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.ir.cable:31
==spydrnet.ir.port:49
        if name != None:
            self.name = name

        if is_downto is not None:
            self.is_downto = is_downto

        if is_scalar is not None:
            self.is_scalar = is_scalar

        if lower_index is not None:
            self.lower_index = lower_index (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.tests.test_get_definitions:68
==spydrnet.util.tests.test_get_wires:69
        top_floating_wire = top_cable.create_wire()

        top_instance = sdn.Instance()
        top_instance.name = 'top'
        top_instance.reference = top_def
        cls.netlist.top_instance = top_instance

    def test_parameter_checking(self):
        library = sdn.Library()
        definition = library.create_definition()
        definition.name = "MY_DEF" (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 6 files
==spydrnet.util.tests.test_get_cables:16
==spydrnet.util.tests.test_get_definitions:16
==spydrnet.util.tests.test_get_hpins:141
==spydrnet.util.tests.test_get_hports:141
==spydrnet.util.tests.test_get_libraries:16
==spydrnet.util.tests.test_get_wires:16
        leaf_def.name = 'leaf'
        leaf_port = leaf_def.create_port()
        leaf_port.name = 'I'
        leaf_port.create_pins(1)

        bottom_def = library.create_definition()
        bottom_def.name = 'bottom'
        bottom_port = bottom_def.create_port()
        bottom_port.name = 'I'
        bottom_port.create_pins(1)
        leaf_inst = bottom_def.create_child() (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 4 files
==spydrnet.util.get_cables:56
==spydrnet.util.get_hcables:51
==spydrnet.util.get_hwires:51
==spydrnet.util.get_wires:38
        raise TypeError("Unknown usage. Please see help for more information.")

    # Default values
    selection = kwargs.get('selection', Selection.INSIDE)
    if isinstance(selection, str):
        if selection in Selection.__members__:
            selection = Selection[selection]
    if isinstance(selection, Selection) is False:
        raise TypeError("selection must be '{}'".format("', '".join(Selection.__members__.keys())))

    filter_func = kwargs.get('filter', lambda x: True) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 4 files
==spydrnet.util.get_definitions:59
==spydrnet.util.get_instances:59
==spydrnet.util.get_libraries:59
==spydrnet.util.get_pins:34
        raise TypeError("Unknown usage. Please see help for more information.")

    # Default values
    selection = kwargs.get('selection', Selection.INSIDE)
    if isinstance(selection, str):
        if selection in Selection.__members__:
            selection = Selection[selection]
    if selection not in {Selection.INSIDE, Selection.OUTSIDE}:
        raise TypeError("selection must be '{}'".format("', '".join([Selection.INSIDE.name, Selection.OUTSIDE.name])))

    filter_func = kwargs.get('filter', lambda x: True) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.parsers.edif.tokenizer:22
==spydrnet.parsers.verilog.tokenizer:27
        return tokenizer

    def __init__(self, input_source):
        self.token = None
        self.next_token = None
        self.line_number = 0

        if isinstance(input_source, str):
            if zipfile.is_zipfile(input_source):
                zip = zipfile.ZipFile(input_source)
                filename = os.path.basename(input_source) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.ir.definition:37
==spydrnet.ir.library:31
        if name != None:
            self.name = name

        if properties != None:
            assert isinstance(
                properties, dict), "properties must be a dictionary"
            for key in properties:
                self[key] = properties[key]

    @property (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.tests.test_get_pins:49
==spydrnet.util.tests.test_get_ports:100
        netlist = sdn.Netlist()
        library = netlist.create_library()
        definition = library.create_definition()
        port = definition.create_port()
        pin = port.create_pin()
        cable = definition.create_cable()
        wire = cable.create_wire()
        wire.connect_pin(pin)
        instance = sdn.Instance()
        instance.reference = definition (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.tests.test_get_hinstances:108
==spydrnet.util.tests.test_get_hwires:124
    def test_through_hierarchy(self):
        netlist = sdn.Netlist()
        library = netlist.create_library()
        definition = library.create_definition()
        instance = sdn.Instance()
        instance.reference = definition
        netlist.top_instance = instance

        middle_inst = definition.create_child()
        middle_def = library.create_definition() (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_pins:47
==spydrnet.util.get_ports:58
        try:
            object_collection = list(iter(obj))
        except TypeError:
            object_collection = [obj]
    else:
        object_collection = [obj]
    if all(isinstance(x, (Element, HRef)) for x in object_collection) is False:
        raise TypeError("get_ports() supports netlist elements and hierarchical references, or a collection of "
                        "these as the object searched")
 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hcables:160
==spydrnet.util.get_hwires:162
                        else:
                            href_parent = href_parent_instance.parent
                            if href_parent:
                                instance = href_parent_instance.item
                                if pin in instance.pins:
                                    outer_pin = instance.pins[pin]
                                    outer_wire = outer_pin.wire
                                    if outer_wire:
                                        outer_cable = outer_wire.cable
                                        href_cable = HRef.from_parent_and_item(href_parent, outer_cable) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hcables:147
==spydrnet.util.get_hwires:148
                elif selection == Selection.OUTSIDE:
                    href_parent_cable = obj.parent
                    href_parent_instance = href_parent_cable.parent
                    for pin in item.pins:
                        if isinstance(pin, OuterPin):
                            href_inst = HRef.from_parent_and_item(href_parent_instance, pin.instance)
                            inner_wire = pin.inner_pin.wire
                            if inner_wire:
                                inner_cable = inner_wire.cable
                                href_cable = HRef.from_parent_and_item(href_inst, inner_cable) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.ir.library:161
==spydrnet.util.library:150
        for definition in self._definitions:
            new_references = set()
            for ref in definition._references:
                if ref in memo.values():
                    new_references.add(ref)
            for instance in definition._children:
                instance._reference._references.add(instance)

            definition._references = new_references
 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.ir.library:204
==spydrnet.ir.netlist:285
        memo = dict()
        c = self._clone(memo)
        c._clone_rip(memo)
        return c

    def __str__(self):
        """Re-define the print function so it is easier to read"""
        rep = super().__str__()
        rep = rep[:-1] + '; ' (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.tests.test_get_hpins:81
==spydrnet.util.tests.test_get_hports:81
        library = self.netlist.libraries[1]
        definition = library.definitions[0]
        port = definition.ports[0]
        pin = port.pins[0]
        hrefs = list(sdn.get_hinstances(pin))
        href = hrefs[0]
        from spydrnet.util.hierarchical_reference import HRef
        port_href = HRef.from_parent_and_item(href, port)
        pin_href = HRef.from_parent_and_item(port_href, pin) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.ir.library:150
==spydrnet.util.library:141
    def _clone_rip_and_replace(self, memo):
        '''remove from its current environment and place it into the new cloned environment with references held in the memo dictionary'''
        pass #this function will need to call rip and replace in library on each of the definitions when called from the netlist.
        for definition in self._definitions:
            definition._clone_rip_and_replace(memo)

    def _clone_rip(self, memo):
        '''remove from its current environmnet. This will remove all pin pointers and create a floating stand alone instance.'''
        # references lists of definitions need to be vacated except those that were cloned. (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 3 files
==spydrnet.util.get_cables:71
==spydrnet.util.get_definitions:74
==spydrnet.util.get_wires:49
    recursive = kwargs.get('recursive', False)

    if isinstance(obj, (Element, HRef)) is False:
        try:
            object_collection = list(iter(obj))
        except TypeError:
            object_collection = [obj]
    else:
        object_collection = [obj] (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 3 files
==spydrnet.util.get_cables:54
==spydrnet.util.get_definitions:57
==spydrnet.util.get_libraries:57
    if len(args) > 1 or any(x not in {'patterns', 'key', 'filter', 'is_case', 'is_re', 'selection', 'recursive'}
                            for x in kwargs):
        raise TypeError("Unknown usage. Please see help for more information.")

    # Default values
    selection = kwargs.get('selection', Selection.INSIDE)
    if isinstance(selection, str):
        if selection in Selection.__members__:
            selection = Selection[selection] (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.plugins.namespace_manager.default_namespace:102
==spydrnet.plugins.namespace_manager.edif_namespace:146
            if element_type not in self.namespaces:
                self.namespaces[element_type] = dict()
            namespace = self.namespaces[element_type]
            if ".NAME" in element:
                old_name = element[".NAME"]
                if old_name in namespace:
                    del namespace[old_name]
            namespace[value] = element (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.plugins.namespace_manager.default_namespace:69
==spydrnet.plugins.namespace_manager.edif_namespace:106
            namespace.clear()
            for instance in element.children:
                if ".NAME" in instance:
                    name = instance[".NAME"]
                    if name not in namespace:
                        namespace.add(name)
                    else:
                        return False (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.plugins.namespace_manager.default_namespace:61
==spydrnet.plugins.namespace_manager.edif_namespace:92
            namespace.clear()
            for cable in element.cables:
                if ".NAME" in cable:
                    name = cable[".NAME"]
                    if name not in namespace:
                        namespace.add(name)
                    else:
                        return False (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.plugins.namespace_manager.default_namespace:53
==spydrnet.plugins.namespace_manager.edif_namespace:78
        elif isinstance(element, Definition):
            for port in element.ports:
                if ".NAME" in port:
                    name = port[".NAME"]
                    if name not in namespace:
                        namespace.add(name)
                    else:
                        return False (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.plugins.namespace_manager.default_namespace:45
==spydrnet.plugins.namespace_manager.edif_namespace:64
        elif isinstance(element, Library):
            for definition in element.definitions:
                if ".NAME" in definition:
                    name = definition[".NAME"]
                    if name not in namespace:
                        namespace.add(name)
                    else:
                        return False (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.plugins.namespace_manager.default_namespace:37
==spydrnet.plugins.namespace_manager.edif_namespace:50
        if isinstance(element, Netlist):
            for library in element.libraries:
                if ".NAME" in library:
                    name = library[".NAME"]
                    if name not in namespace:
                        namespace.add(name)
                    else:
                        return False (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.ir.instance:39
==spydrnet.ir.netlist:57
        if name != None:
            self.name = name
        if properties != None:
            assert isinstance(
                properties, dict), "properties must be a dictionary"
            for key in properties:
                self[key] = properties[key]
 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.ir.cable:43
==spydrnet.ir.port:63
        if properties != None:
            assert isinstance(
                properties, dict), "properties must be a dictionary"
            for key in properties:
                self[key] = properties[key]

    def _items(self):
        """Overrides the _items function in the bundles class. For ports, pins are returned""" (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.tests.test_get_cables:69
==spydrnet.util.tests.test_get_definitions:68
        top_floating_wire = top_cable.create_wire()

        top_instance = sdn.Instance()
        top_instance.name = 'top'
        top_instance.reference = top_def
        cls.netlist.top_instance = top_instance

    def test_parameter_checking(self): (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 3 files
==spydrnet.util.tests.test_get_hcables:59
==spydrnet.util.tests.test_get_hinstances:46
==spydrnet.util.tests.test_get_hwires:54
        library = self.netlist.libraries[1]
        definition = library.definitions[0]
        cable = definition.cables[0]
        wire = cable.wires[0]
        hrefs = list(sdn.get_hinstances(wire))
        href_top = hrefs[0]
        from spydrnet.util.hierarchical_reference import HRef
        cable_href = HRef.from_parent_and_item(href_top, cable) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 3 files
==spydrnet.util.tests.test_get_cables:69
==spydrnet.util.tests.test_get_libraries:67
==spydrnet.util.tests.test_get_wires:69
        top_floating_wire = top_cable.create_wire()

        top_instance = sdn.Instance()
        top_instance.name = 'top'
        top_instance.reference = top_def
        cls.netlist.top_instance = top_instance

    def test_parameter_checking(self): (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 3 files
==spydrnet.util.get_instances:76
==spydrnet.util.get_netlists:57
==spydrnet.util.get_ports:57
    if isinstance(obj, (FirstClassElement, InnerPin, OuterPin, Wire)) is False:
        try:
            object_collection = list(iter(obj))
        except TypeError:
            object_collection = [obj]
    else:
        object_collection = [obj]
    if all(isinstance(x, (Element, HRef)) for x in object_collection) is False: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_libraries:175
==spydrnet.util.get_netlists:104
            definition = obj.definition
            if definition:
                object_collection.append(definition)
        elif isinstance(obj, InnerPin):
            port = obj.port
            if port:
                object_collection.append(port)
        elif isinstance(obj, OuterPin): (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hcables:110
==spydrnet.util.get_hwires:110
                else:
                    bypass_namesearch.discard(obj)
                    reference = item.reference
                    if reference:
                        if selection in {Selection.INSIDE, Selection.ALL}:
                            # Get all cables inside a hierarchical instance
                            for cable in reference.cables:
                                hcable = HRef.from_parent_and_item(obj, cable) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 3 files
==spydrnet.util.get_cables:73
==spydrnet.util.get_definitions:76
==spydrnet.util.get_pins:46
    if isinstance(obj, (Element, HRef)) is False:
        try:
            object_collection = list(iter(obj))
        except TypeError:
            object_collection = [obj]
    else:
        object_collection = [obj]
    if all(isinstance(x, (Element, HRef)) for x in object_collection) is False: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_definitions:170
==spydrnet.util.get_libraries:186
        elif isinstance(obj, Wire):
            cable = obj.cable
            if cable:
                object_collection.append(cable)
        elif isinstance(obj, HRef):
            if obj.is_valid:
                object_collection.append(obj.item)
 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_definitions:168
==spydrnet.util.get_netlists:117
            if definition:
                object_collection.append(definition)
        elif isinstance(obj, Wire):
            cable = obj.cable
            if cable:
                object_collection.append(cable)
        elif isinstance(obj, HRef):
            if obj.is_valid: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.tests.test_flatten:5
==spydrnet.tests.test_uniquify:4
from spydrnet.uniquify import uniquify

class TestUniquify(unittest.TestCase):
    def create_netlist(self):
        nl = Netlist()
        lib = nl.create_library()
        d1 = lib.create_definition() (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 3 files
==spydrnet.ir.definition:40
==spydrnet.ir.instance:41
==spydrnet.ir.library:34
        if properties != None:
            assert isinstance(
                properties, dict), "properties must be a dictionary"
            for key in properties:
                self[key] = properties[key]

    @property (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.ir.definition:232
==spydrnet.ir.port:215
                outer_pin = reference.pins[pin]
                wire = outer_pin.wire
                if wire:
                    wire.disconnect_pin(outer_pin)
                del reference._pins[pin]
                outer_pin._instance = None
                outer_pin._inner_pin = None (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.ir.port:107
==spydrnet.ir.wire:22
    @property
    def pins(self):
        """The a list of pins that the wire is connected to"""
        return ListView(self._pins)

    @pins.setter
    def pins(self, value): (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.tests.test_get_hinstances:62
==spydrnet.util.tests.test_get_hpins:82
        definition = library.definitions[0]
        port = definition.ports[0]
        pin = port.pins[0]
        hrefs = list(sdn.get_hinstances(pin))
        href = hrefs[0]
        from spydrnet.util.hierarchical_reference import HRef
        port_href = HRef.from_parent_and_item(href, port) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.tests.test_get_hcables:5
==spydrnet.util.tests.test_get_hwires:5
    netlist = None

    @classmethod
    def setUpClass(cls) -> None:
        cls.netlist = sdn.load_example_netlist_by_name('b13')

    def test_wild_card_search_on_netlist(self): (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 5 files
==spydrnet.util.tests.test_get_hcables:138
==spydrnet.util.tests.test_get_hinstances:109
==spydrnet.util.tests.test_get_hwires:125
==spydrnet.util.tests.test_hierarchical_reference:214
==spydrnet.util.tests.test_hierarchical_reference:232
        netlist = sdn.Netlist()
        library = netlist.create_library()
        definition = library.create_definition()
        instance = sdn.Instance()
        instance.reference = definition
        netlist.top_instance = instance
 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_pins:46
==spydrnet.util.get_wires:51
    if isinstance(obj, (Element, HRef)) is False:
        try:
            object_collection = list(iter(obj))
        except TypeError:
            object_collection = [obj]
    else:
        object_collection = [obj] (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_instances:156
==spydrnet.util.get_libraries:178
        elif isinstance(obj, InnerPin):
            port = obj.port
            if port:
                object_collection.append(port)
        elif isinstance(obj, OuterPin):
            instance = obj.instance
            if instance: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_pins:72
==spydrnet.util.get_ports:98
        elif isinstance(obj, Netlist):
            for library in obj.libraries:
                for definition in library.definitions:
                    object_collection.append(definition)
        elif isinstance(obj, Library):
            object_collection += obj.definitions
        elif isinstance(obj, Instance): (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hinstances:114
==spydrnet.util.get_libraries:174
        elif isinstance(obj, (Port, Cable)):
            definition = obj.definition
            if definition:
                object_collection.append(definition)
        elif isinstance(obj, InnerPin):
            port = obj.port
            if port: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_instances:164
==spydrnet.util.get_netlists:119
        elif isinstance(obj, Wire):
            cable = obj.cable
            if cable:
                object_collection.append(cable)
        elif isinstance(obj, HRef):
            if obj.is_valid:
                item = obj.item (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hcables:276
==spydrnet.util.get_hwires:285
                    search_stack += (x for x in _get_hpins_from_hwire(hwire_inside) if x != hpin)

        if selection in {Selection.OUTSIDE, Selection.BOTH, Selection.ALL}:
            hwire_outside = _get_outer_hwire_from_hpin(hpin)
            if hwire_outside and hwire_outside not in found_hwires:
                found_hwires.add(hwire_outside)
                yield hwire_outside (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 8 files
==spydrnet.util.get_hcables:67
==spydrnet.util.get_hinstances:55
==spydrnet.util.get_hpins:56
==spydrnet.util.get_hports:56
==spydrnet.util.get_hwires:67
==spydrnet.util.get_instances:76
==spydrnet.util.get_netlists:57
==spydrnet.util.get_ports:57
    if isinstance(obj, (FirstClassElement, InnerPin, OuterPin, Wire)) is False:
        try:
            object_collection = list(iter(obj))
        except TypeError:
            object_collection = [obj]
    else:
        object_collection = [obj] (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hpins:98
==spydrnet.util.get_hports:98
                else:
                    bypass_namesearch.discard(obj)
                    reference = item.reference
                    if reference:
                        # Get all cables inside a hierarchical instance
                        for port in reference.ports:
                            hport = HRef.from_parent_and_item(obj, port) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 3 files
==spydrnet.util.get_cables:56
==spydrnet.util.get_instances:59
==spydrnet.util.get_pins:34
        raise TypeError("Unknown usage. Please see help for more information.")

    # Default values
    selection = kwargs.get('selection', Selection.INSIDE)
    if isinstance(selection, str):
        if selection in Selection.__members__:
            selection = Selection[selection] (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 3 files
==spydrnet.util.get_cables:66
==spydrnet.util.get_instances:69
==spydrnet.util.get_libraries:69
    filter_func = kwargs.get('filter', lambda x: True)
    is_case = kwargs.get('is_case', True)
    is_re = kwargs.get('is_re', False)
    patterns = args[0] if len(args) == 1 else kwargs.get('patterns', ".*" if is_re else "*")
    key = kwargs.get('key', ".NAME")
    recursive = kwargs.get('recursive', False)
 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_definitions:1
==spydrnet.util.get_libraries:1
    Port, Cable
from spydrnet.util.hierarchical_reference import HRef
from spydrnet.util.selection import Selection
from spydrnet.global_state.global_service import lookup
from spydrnet.util.patterns import _is_pattern_absolute, _value_matches_pattern

 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 6 files
==spydrnet.util.get_cables:74
==spydrnet.util.get_definitions:77
==spydrnet.util.get_instances:77
==spydrnet.util.get_netlists:58
==spydrnet.util.get_pins:47
==spydrnet.util.get_ports:58
        try:
            object_collection = list(iter(obj))
        except TypeError:
            object_collection = [obj]
    else:
        object_collection = [obj]
    if all(isinstance(x, (Element, HRef)) for x in object_collection) is False: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 7 files
==spydrnet.util.get_definitions:59
==spydrnet.util.get_hcables:51
==spydrnet.util.get_hwires:51
==spydrnet.util.get_instances:59
==spydrnet.util.get_libraries:59
==spydrnet.util.get_pins:34
==spydrnet.util.get_wires:38
        raise TypeError("Unknown usage. Please see help for more information.")

    # Default values
    selection = kwargs.get('selection', Selection.INSIDE)
    if isinstance(selection, str):
        if selection in Selection.__members__:
            selection = Selection[selection] (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.plugins.namespace_manager.default_namespace:114
==spydrnet.plugins.namespace_manager.edif_namespace:167
            if element_type in self.namespaces:
                namespace = self.namespaces[element_type]
                if ".NAME" in element:
                    old_name = element[".NAME"]
                    if old_name in namespace:
                        del namespace[old_name] (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 6 files
==spydrnet.ir.cable:43
==spydrnet.ir.definition:40
==spydrnet.ir.instance:41
==spydrnet.ir.library:34
==spydrnet.ir.netlist:59
==spydrnet.ir.port:63
        if properties != None:
            assert isinstance(
                properties, dict), "properties must be a dictionary"
            for key in properties:
                self[key] = properties[key]
 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 4 files
==spydrnet.util.tests.test_get_pins:16
==spydrnet.util.tests.test_get_pins:29
==spydrnet.util.tests.test_get_pins:39
==spydrnet.util.tests.test_get_ports:69
        definition = sdn.Definition()
        port = definition.create_port()
        pin = port.create_pin()
        instance = sdn.Instance()
        instance.reference = definition
 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 4 files
==spydrnet.util.tests.test_get_netlists:24
==spydrnet.util.tests.test_get_pins:50
==spydrnet.util.tests.test_get_ports:101
==spydrnet.util.tests.test_get_ports:84
        library = netlist.create_library()
        definition = library.create_definition()
        port = definition.create_port()
        pin = port.create_pin()
        cable = definition.create_cable()
        wire = cable.create_wire() (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.tests.test_get_hpins:67
==spydrnet.util.tests.test_get_hports:67
        library = self.netlist.libraries[1]
        definition = library.definitions[0]
        cable = definition.cables[0]
        wire = cable.wires[0]
        cable_href = next(cable.get_hcables())
        wire_href = next(wire.get_hwires()) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.tests.test_get_hpins:5
==spydrnet.util.tests.test_get_hports:5
    netlist = None
    @classmethod
    def setUpClass(cls) -> None:
        cls.netlist = sdn.load_example_netlist_by_name('b13')

    def test_wild_card_search_on_netlist(self): (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.tests.test_get_hinstances:63
==spydrnet.util.tests.test_get_hports:83
        port = definition.ports[0]
        pin = port.pins[0]
        hrefs = list(sdn.get_hinstances(pin))
        href = hrefs[0]
        from spydrnet.util.hierarchical_reference import HRef
        port_href = HRef.from_parent_and_item(href, port) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 6 files
==spydrnet.util.tests.test_get_cables:27
==spydrnet.util.tests.test_get_definitions:27
==spydrnet.util.tests.test_get_hpins:153
==spydrnet.util.tests.test_get_hports:153
==spydrnet.util.tests.test_get_libraries:27
==spydrnet.util.tests.test_get_wires:27
        leaf_inst.reference = leaf_def
        bottom_cable = bottom_def.create_cable()
        bottom_cable.name = 'bottom_cable'
        bottom_wire = bottom_cable.create_wire()
        bottom_wire.connect_pin(bottom_port.pins[0])
        bottom_wire.connect_pin(leaf_inst.pins[leaf_port.pins[0]]) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_pins:107
==spydrnet.util.get_ports:118
        elif isinstance(obj, Wire):
            object_collection += obj.pins
        elif isinstance(obj, Cable):
            object_collection += obj.wires
        elif isinstance(obj, HRef):
            if obj.is_valid: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_libraries:186
==spydrnet.util.get_netlists:119
        elif isinstance(obj, Wire):
            cable = obj.cable
            if cable:
                object_collection.append(cable)
        elif isinstance(obj, HRef):
            if obj.is_valid: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hinstances:115
==spydrnet.util.get_netlists:104
            definition = obj.definition
            if definition:
                object_collection.append(definition)
        elif isinstance(obj, InnerPin):
            port = obj.port
            if port: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 5 files
==spydrnet.util.get_hcables:96
==spydrnet.util.get_hinstances:83
==spydrnet.util.get_hpins:84
==spydrnet.util.get_hports:84
==spydrnet.util.get_hwires:96
    while object_collection:
        obj = object_collection.pop()
        if isinstance(obj, Netlist):
            top_instance = obj.top_instance
            if top_instance:
                href = HRef.from_parent_and_item(None, top_instance) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hpins:219
==spydrnet.util.get_hports:208
                    name_stack.pop()
                if recursive:
                    for child in reference.children:
                        if child.reference:
                            href_child = HRef.from_parent_and_item(href_instance, child)
                            search_stack.append((href_child, False)) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hpins:111
==spydrnet.util.get_hports:109
                        if recursive:
                            for child in reference.children:
                                href_child = HRef.from_parent_and_item(obj, child)
                                bypass_namesearch.add(href_child)
                                object_collection.append(href_child)
            elif isinstance(item, Port): (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.ir.library:66
==spydrnet.util.library:62
        value_list = list(value)
        value_set = set(value_list)
        assert len(value_list) == len(value_set) and set(self._definitions) == value_set, \
            "Set of values do not match, this function can only reorder values, values must be unique"
        self._definitions = value_list
 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_cables:149
==spydrnet.util.get_pins:88
                port = obj.port
                if port:
                    definition = port.definition
                    if definition:
                        for instance in definition.references:
                            outer_pin = instance.pins[obj] (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 3 files
==spydrnet.util.get_definitions:170
==spydrnet.util.get_instances:164
==spydrnet.util.get_libraries:186
        elif isinstance(obj, Wire):
            cable = obj.cable
            if cable:
                object_collection.append(cable)
        elif isinstance(obj, HRef):
            if obj.is_valid: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_definitions:140
==spydrnet.util.get_libraries:155
                        if recursive:
                            object_collection.append(parent)
        elif isinstance(obj, Instance):
            if selection == Selection.INSIDE:
                reference = obj.reference
                if reference: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 12 files
==spydrnet.util.get_cables:74
==spydrnet.util.get_definitions:77
==spydrnet.util.get_hcables:68
==spydrnet.util.get_hinstances:56
==spydrnet.util.get_hpins:57
==spydrnet.util.get_hports:57
==spydrnet.util.get_hwires:68
==spydrnet.util.get_instances:77
==spydrnet.util.get_netlists:58
==spydrnet.util.get_pins:47
==spydrnet.util.get_ports:58
==spydrnet.util.get_wires:52
        try:
            object_collection = list(iter(obj))
        except TypeError:
            object_collection = [obj]
    else:
        object_collection = [obj] (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 3 files
==spydrnet.util.get_cables:230
==spydrnet.util.get_definitions:195
==spydrnet.util.get_ports:144
            else:
                names_to_remove = list()
                for name in namemap:
                    if _value_matches_pattern(name, pattern, is_case, is_re):
                        result = namemap[name]
                        names_to_remove.append(name) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.parsers.edif.tokenizer:68
==spydrnet.parsers.verilog.tokenizer:74
            return self.next_token
        else:
            self.next_token = next(self.generator)
            return self.next_token

    def generate_tokens(self): (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.parsers.edif.tokenizer:60
==spydrnet.parsers.verilog.tokenizer:65
            self.token = self.next_token
            self.next_token = None
        else:
            self.token = next(self.generator)
        return self.token
 (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.plugins.namespace_manager.default_namespace:121
==spydrnet.plugins.namespace_manager.edif_namespace:181
    def lookup(self, element_type, key, value):
        if key == ".NAME":
            if element_type in self.namespaces:
                namespace = self.namespaces[element_type]
                return namespace.get(value, None) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.plugins.namespace_manager.default_namespace:92
==spydrnet.plugins.namespace_manager.edif_namespace:129
            if element_type in self.namespaces:
                namespace = self.namespaces[element_type]
                if value in namespace:
                    if namespace[value] != element:
                        return False (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 3 files
==spydrnet.util.tests.test_get_pins:66
==spydrnet.util.tests.test_get_ports:100
==spydrnet.util.tests.test_get_ports:83
        netlist = sdn.Netlist()
        library = netlist.create_library()
        definition = library.create_definition()
        port = definition.create_port()
        pin = port.create_pin() (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 3 files
==spydrnet.util.tests.test_get_hcables:59
==spydrnet.util.tests.test_get_hinstances:32
==spydrnet.util.tests.test_get_hwires:54
        library = self.netlist.libraries[1]
        definition = library.definitions[0]
        cable = definition.cables[0]
        wire = cable.wires[0]
        hrefs = list(sdn.get_hinstances(wire)) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 5 files
==spydrnet.util.tests.test_get_hcables:119
==spydrnet.util.tests.test_get_hinstances:96
==spydrnet.util.tests.test_get_hpins:118
==spydrnet.util.tests.test_get_hports:118
==spydrnet.util.tests.test_get_hwires:107
    def test_from_outerpin(self):
        library = self.netlist.libraries[1]
        definition = library.definitions[0]
        instance = definition.children[0]
        outerpin = next(iter(instance.pins)) (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 5 files
==spydrnet.util.tests.test_get_hcables:107
==spydrnet.util.tests.test_get_hinstances:84
==spydrnet.util.tests.test_get_hpins:108
==spydrnet.util.tests.test_get_hports:108
==spydrnet.util.tests.test_get_hwires:97
    def test_from_wire_and_cable(self):
        library = self.netlist.libraries[1]
        definition = library.definitions[0]
        cable = definition.cables[0]
        wire = cable.wires[0] (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hwires:144
==spydrnet.util.get_wires:104
                if selection == Selection.INSIDE:
                    if obj not in in_yield:
                        in_yield.add(obj)
                        yield obj
                elif selection == Selection.OUTSIDE: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_instances:156
==spydrnet.util.get_netlists:107
        elif isinstance(obj, InnerPin):
            port = obj.port
            if port:
                object_collection.append(port)
        elif isinstance(obj, OuterPin): (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 3 files
==spydrnet.util.get_netlists:99
==spydrnet.util.get_ports:104
==spydrnet.util.get_wires:94
        elif isinstance(obj, Instance):
            reference = obj.reference
            if reference:
                object_collection.append(reference)
        elif isinstance(obj, Port): (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_hpins:97
==spydrnet.util.get_hwires:109
                    _update_hwire_namemap(obj, recursive, in_namemap, namemap)
                else:
                    bypass_namesearch.discard(obj)
                    reference = item.reference
                    if reference: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 5 files
==spydrnet.util.get_hcables:103
==spydrnet.util.get_hinstances:90
==spydrnet.util.get_hpins:91
==spydrnet.util.get_hports:91
==spydrnet.util.get_hwires:103
        elif isinstance(obj, HRef):
            if obj.is_valid is False:
                continue
            item = obj.item
            if isinstance(item, Instance): (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 4 files
==spydrnet.util.get_hcables:137
==spydrnet.util.get_hpins:122
==spydrnet.util.get_hports:118
==spydrnet.util.get_hwires:139
            elif isinstance(item, Cable):
                for wire in item.wires:
                    href_wire = HRef.from_parent_and_item(obj, wire)
                    object_collection.append(href_wire)
            elif isinstance(item, Wire): (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.util.get_cables:117
==spydrnet.util.get_wires:88
                if recursive or selection == Selection.ALL:
                    object_collection += obj.children
            if selection in {Selection.OUTSIDE, Selection.BOTH, Selection.ALL}:
                for port in obj.ports:
                    for pin in port.pins: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 3 files
==spydrnet.util.get_definitions:148
==spydrnet.util.get_instances:144
==spydrnet.util.get_libraries:164
                    if recursive:
                        object_collection += reference.children
            else:
                parent = obj.parent
                if parent: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 6 files
==spydrnet.util.get_cables:66
==spydrnet.util.get_definitions:69
==spydrnet.util.get_instances:69
==spydrnet.util.get_libraries:69
==spydrnet.util.get_netlists:51
==spydrnet.util.get_ports:51
    filter_func = kwargs.get('filter', lambda x: True)
    is_case = kwargs.get('is_case', True)
    is_re = kwargs.get('is_re', False)
    patterns = args[0] if len(args) == 1 else kwargs.get('patterns', ".*" if is_re else "*")
    key = kwargs.get('key', ".NAME") (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 11 files
==spydrnet.util.get_cables:222
==spydrnet.util.get_definitions:188
==spydrnet.util.get_hcables:217
==spydrnet.util.get_hinstances:145
==spydrnet.util.get_hpins:172
==spydrnet.util.get_hports:167
==spydrnet.util.get_hwires:219
==spydrnet.util.get_instances:186
==spydrnet.util.get_libraries:204
==spydrnet.util.get_netlists:129
==spydrnet.util.get_ports:136
        for pattern in patterns:
            pattern_is_absolute = _is_pattern_absolute(pattern, is_case, is_re)
            if pattern_is_absolute:
                if pattern in namemap:
                    result = namemap[pattern] (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.compare.tests.test_compare_netlists:47
==spydrnet.parsers.edif.tests.test_edif_parser:70
        with self.subTest(i=ii):
            if os.path.exists("temp"):
                shutil.rmtree("temp")
            print(filename)
            with tempfile.TemporaryDirectory() as tempdirname: (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.compare.tests.test_compare_netlists:18
==spydrnet.parsers.edif.tests.test_edif_parser:56
    @unittest.skip("Test takes a long time right now.")
    def test_large_edif(self):
        for ii, filename in enumerate(self.edif_files):
            if os.path.getsize(filename) <= 1024 * 10:
                continue (duplicate-code)
spydrnet/callback/__init__.py:1:0: R0801: Similar lines in 2 files
==spydrnet.parsers.edif.tokenizer:0
==spydrnet.parsers.verilog.tokenizer:3
from functools import partial
import re
import zipfile
import io
import os (duplicate-code)

------------------------------------------------------------------
Your code has been rated at 7.15/10 (previous run: 7.15/10, +0.00)

