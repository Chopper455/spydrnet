from collections import deque


class Composer:

    def __init__(self):
        pass #put the values here

    def run(self, ir, file_out = "out.v"):
        f = self._open_file(file_out)
        self._compose(ir, f)
        

    def _open_file(self, file_name):
        f = open(file_name, "w")
        return f

    def _compose(self, netlist, file):
        self._write_header(netlist, file)
        instance = netlist.top_instance
        if instance is not None:
            self._write_from_top(instance)
        
    def _write_header(self, netlist, file):
        file.write("////////////////////////////////////////\n")
        file.write("//File generated by SpyDrNet\n")
        if netlist.name is not None:
            file.write("//Netlist: " + netlist.name + "\n")
        file.write("////////////////////////////////////////\n")
        if netlist.top_instance is None:
            print("WARNING: Netlist has no top instance. Empty file written")
            file.write("//top instance is none.\n")

    def _write_from_top(self, instance):
        q 